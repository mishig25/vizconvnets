{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":0},{"name":"../../environment","loc":{"line":3,"column":28}},{"name":"../../util","loc":{"line":4,"column":19}},{"name":"./shader_compiler","loc":{"line":5,"column":30}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar shader_compiler = require(\"./shader_compiler\");\nvar NAN_UNIFORM_NAME = 'NaN';\nfunction shouldUploadNaNUniform() {\n    return !environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n}\nfunction compileProgram(gpgpu, program, inputs, output) {\n    var userCode = program.userCode;\n    var inputInfos = inputs.map(function (input, i) {\n        var shapeInfo = {\n            logicalShape: input.tensor.shape,\n            texShape: input.texData.texShape\n        };\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\n    });\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\n    var outShapeInfo = {\n        logicalShape: output.tensor.shape,\n        texShape: output.texData.texShape\n    };\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.supportsBroadcasting === true);\n    var webGLProgram = gpgpu.createProgram(source);\n    var uniformLocations = {};\n    for (var i = 0; i < program.variableNames.length; i++) {\n        var uniformName = program.variableNames[i];\n        uniformLocations[uniformName] =\n            gpgpu.getUniformLocation(webGLProgram, uniformName);\n    }\n    if (shouldUploadNaNUniform()) {\n        var throwIfNaNUniformIsNotUsed = false;\n        uniformLocations[NAN_UNIFORM_NAME] = gpgpu.getUniformLocation(webGLProgram, NAN_UNIFORM_NAME, throwIfNaNUniformIsNotUsed);\n    }\n    return {\n        program: program,\n        source: source,\n        webGLProgram: webGLProgram,\n        uniformLocations: uniformLocations,\n        gpgpu: gpgpu,\n        inShapeInfos: inShapeInfos,\n        outShapeInfo: outShapeInfo\n    };\n}\nexports.compileProgram = compileProgram;\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\n            (\"was executed with \" + inputs.length + \" inputs\"));\n    }\n    shapeInfos.forEach(function (s, i) {\n        var shapeA = s.logicalShape;\n        var texShapeA = s.texShape;\n        var shapeB = inputs[i].tensor.shape;\n        var texShapeB = inputs[i].texData.texShape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(\"Binary was compiled with different shapes than \" +\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n        }\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\n        }\n    });\n}\nfunction runProgram(binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    var outTex = output.texData.texture;\n    var outTexShape = output.texData.texShape;\n    var gpgpu = binary.gpgpu;\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    gpgpu.setProgram(binary.webGLProgram);\n    inputs.forEach(function (input, i) {\n        var tex = input.texData.texture;\n        var variableName = binary.program.variableNames[i];\n        var variableUniformLocation = binary.uniformLocations[variableName];\n        gpgpu.setInputMatrixTexture(tex, variableUniformLocation, i);\n    });\n    if (shouldUploadNaNUniform()) {\n        gpgpu.gl.uniform1f(binary.uniformLocations[NAN_UNIFORM_NAME], NaN);\n    }\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram();\n}\nexports.runProgram = runProgram;\nfunction makeShaderKey(program, inputs, output) {\n    var keyInputs = '';\n    inputs.concat(output).forEach(function (x) {\n        keyInputs += x.tensor.shape + \"_\" + x.texData.texShape;\n    });\n    var keyUserCode = program.userCode;\n    var keyBroadcast = (program.supportsBroadcasting === true).toString();\n    var key = program.constructor.name;\n    key += '_' + keyBroadcast + '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\nexports.makeShaderKey = makeShaderKey;\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/gpgpu_math.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../../environment\");\nvar util = require(\"../../util\");\nvar shader_compiler = require(\"./shader_compiler\");\nvar NAN_UNIFORM_NAME = 'NaN';\nfunction shouldUploadNaNUniform() {\n    return !environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED');\n}\nfunction compileProgram(gpgpu, program, inputs, output) {\n    var userCode = program.userCode;\n    var inputInfos = inputs.map(function (input, i) {\n        var shapeInfo = {\n            logicalShape: input.tensor.shape,\n            texShape: input.texData.texShape\n        };\n        return { name: program.variableNames[i], shapeInfo: shapeInfo };\n    });\n    var inShapeInfos = inputInfos.map(function (x) { return x.shapeInfo; });\n    var outShapeInfo = {\n        logicalShape: output.tensor.shape,\n        texShape: output.texData.texShape\n    };\n    var source = shader_compiler.makeShader(inputInfos, outShapeInfo, userCode, program.supportsBroadcasting === true);\n    var webGLProgram = gpgpu.createProgram(source);\n    var uniformLocations = {};\n    for (var i = 0; i < program.variableNames.length; i++) {\n        var uniformName = program.variableNames[i];\n        uniformLocations[uniformName] =\n            gpgpu.getUniformLocation(webGLProgram, uniformName);\n    }\n    if (shouldUploadNaNUniform()) {\n        var throwIfNaNUniformIsNotUsed = false;\n        uniformLocations[NAN_UNIFORM_NAME] = gpgpu.getUniformLocation(webGLProgram, NAN_UNIFORM_NAME, throwIfNaNUniformIsNotUsed);\n    }\n    return {\n        program: program,\n        source: source,\n        webGLProgram: webGLProgram,\n        uniformLocations: uniformLocations,\n        gpgpu: gpgpu,\n        inShapeInfos: inShapeInfos,\n        outShapeInfo: outShapeInfo\n    };\n}\nexports.compileProgram = compileProgram;\nfunction validateBinaryAndProgram(shapeInfos, inputs) {\n    if (shapeInfos.length !== inputs.length) {\n        throw Error(\"Binary was compiled with \" + shapeInfos.length + \" inputs, but \" +\n            (\"was executed with \" + inputs.length + \" inputs\"));\n    }\n    shapeInfos.forEach(function (s, i) {\n        var shapeA = s.logicalShape;\n        var texShapeA = s.texShape;\n        var shapeB = inputs[i].tensor.shape;\n        var texShapeB = inputs[i].texData.texShape;\n        if (!util.arraysEqual(shapeA, shapeB)) {\n            throw Error(\"Binary was compiled with different shapes than \" +\n                (\"the current args. Shapes \" + shapeA + \" and \" + shapeB + \" must match\"));\n        }\n        if (!util.arraysEqual(texShapeA, texShapeB)) {\n            throw Error(\"Binary was compiled with different texture shapes than the\" +\n                (\" current args. Shape \" + texShapeA + \" and \" + texShapeB + \" must match\"));\n        }\n    });\n}\nfunction runProgram(binary, inputs, output, customSetup) {\n    validateBinaryAndProgram(binary.inShapeInfos, inputs);\n    validateBinaryAndProgram([binary.outShapeInfo], [output]);\n    var outTex = output.texData.texture;\n    var outTexShape = output.texData.texShape;\n    var gpgpu = binary.gpgpu;\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n    gpgpu.setProgram(binary.webGLProgram);\n    inputs.forEach(function (input, i) {\n        var tex = input.texData.texture;\n        var variableName = binary.program.variableNames[i];\n        var variableUniformLocation = binary.uniformLocations[variableName];\n        gpgpu.setInputMatrixTexture(tex, variableUniformLocation, i);\n    });\n    if (shouldUploadNaNUniform()) {\n        gpgpu.gl.uniform1f(binary.uniformLocations[NAN_UNIFORM_NAME], NaN);\n    }\n    if (customSetup != null) {\n        customSetup(gpgpu, binary.webGLProgram);\n    }\n    gpgpu.executeProgram();\n}\nexports.runProgram = runProgram;\nfunction makeShaderKey(program, inputs, output) {\n    var keyInputs = '';\n    inputs.concat(output).forEach(function (x) {\n        keyInputs += x.tensor.shape + \"_\" + x.texData.texShape;\n    });\n    var keyUserCode = program.userCode;\n    var keyBroadcast = (program.supportsBroadcasting === true).toString();\n    var key = program.constructor.name;\n    key += '_' + keyBroadcast + '_' + keyInputs + '_' + keyUserCode;\n    return key;\n}\nexports.makeShaderKey = makeShaderKey;\n"},"lineCount":102}},"hash":"d071626ca613605f221c9401b9312c9a","cacheData":{"env":{}}}