{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1522260134000},{"name":"@tensorflow/tfjs-core","loc":{"line":54,"column":26}},{"name":"./backend/tfjs_backend","loc":{"line":55,"column":16}},{"name":"./engine/topology","loc":{"line":56,"column":25}},{"name":"./engine/training","loc":{"line":57,"column":25}},{"name":"./errors","loc":{"line":58,"column":23}},{"name":"./layers/serialization","loc":{"line":59,"column":30}},{"name":"./utils/generic_utils","loc":{"line":60,"column":28}},{"name":"./utils/serialization_utils","loc":{"line":61,"column":36}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar topology_1 = require(\"./engine/topology\");\nvar training_1 = require(\"./engine/training\");\nvar errors_1 = require(\"./errors\");\nvar serialization_1 = require(\"./layers/serialization\");\nvar generic_utils = require(\"./utils/generic_utils\");\nvar serialization_utils_1 = require(\"./utils/serialization_utils\");\nfunction modelFromJSON(modelAndWeightsConfig, customObjects) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelTopology, tsConfig, model, weightValues, skipMismatches, isNamedTensorMap;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    modelTopology = modelAndWeightsConfig.modelTopology;\n                    if (modelTopology['model_config'] != null) {\n                        modelTopology = modelTopology['model_config'];\n                    }\n                    tsConfig = serialization_utils_1.convertPythonicToTs(modelTopology);\n                    model = serialization_1.deserialize(tsConfig, customObjects);\n                    if (!(modelAndWeightsConfig.weightsManifest != null)) return [3, 2];\n                    return [4, tfjs_core_1.loadWeights(modelAndWeightsConfig.weightsManifest, modelAndWeightsConfig.pathPrefix, model.weights.map(function (weight) { return weight.name; }))];\n                case 1:\n                    weightValues = _a.sent();\n                    skipMismatches = null;\n                    isNamedTensorMap = true;\n                    model.loadWeights(weightValues, skipMismatches, isNamedTensorMap);\n                    _a.label = 2;\n                case 2: return [2, model];\n            }\n        });\n    });\n}\nexports.modelFromJSON = modelFromJSON;\nfunction loadModelInternal(modelConfigPath) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelConfigRequest, modelConfig;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, fetch(modelConfigPath)];\n                case 1:\n                    modelConfigRequest = _a.sent();\n                    return [4, modelConfigRequest.json()];\n                case 2:\n                    modelConfig = _a.sent();\n                    if (modelConfig['modelTopology'] == null) {\n                        throw new errors_1.ValueError('Missing field \"modelTopology\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    if (modelConfig['weightsManifest'] == null) {\n                        throw new errors_1.ValueError('Missing field \"weightsManifest\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    modelConfig.pathPrefix =\n                        modelConfigPath.substring(0, modelConfigPath.lastIndexOf('/'));\n                    return [2, modelFromJSON(modelConfig)];\n            }\n        });\n    });\n}\nexports.loadModelInternal = loadModelInternal;\nvar Sequential = (function (_super) {\n    __extends(Sequential, _super);\n    function Sequential(config) {\n        var _this = _super.call(this, { inputs: [], outputs: [] }) || this;\n        config = config || {};\n        _this.trainable = true;\n        _this._updatable = true;\n        _this.built = false;\n        _this.name = (config.name != null) ? config.name : K.getUid('sequential_');\n        if (config.layers != null) {\n            for (var _i = 0, _a = config.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                _this.add(layer);\n            }\n        }\n        return _this;\n    }\n    Sequential_1 = Sequential;\n    Sequential.prototype.add = function (layer) {\n        if (this.outputs.length === 0) {\n            if (layer.inboundNodes.length === 0) {\n                if (layer.batchInputShape == null) {\n                    throw new errors_1.ValueError('The first layer in a Sequential model must ' +\n                        'get an `inputShape` or `batchInputShape` argument.');\n                }\n                var x = topology_1.Input({\n                    batchShape: layer.batchInputShape,\n                    dtype: layer.dtype,\n                    name: layer.name + '_input'\n                });\n                layer.apply(x);\n            }\n            if (layer.inboundNodes.length !== 1) {\n                throw new errors_1.ValueError('A layer added to a Sequential model must not already be ' +\n                    (\"connected somewhere else. Model received layer \" + layer.name + \" \") +\n                    (\"which has \" + layer.inboundNodes.length + \" pre-existing inbound \") +\n                    'connections.');\n            }\n            if (layer.inboundNodes[0].outputTensors.length !== 1) {\n                throw new errors_1.ValueError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [layer.inboundNodes[0].outputTensors[0]];\n            this.inputs = topology_1.getSourceInputs(this.outputs[0]);\n            new topology_1.Node({\n                outboundLayer: this,\n                inboundLayers: [],\n                nodeIndices: [],\n                tensorIndices: [],\n                inputTensors: this.inputs,\n                outputTensors: this.outputs,\n                inputMasks: generic_utils.pyListRepeat(null, this.inputs.length),\n                outputMasks: [null],\n                inputShapes: this.inputs.map(function (x) { return x.shape; }),\n                outputShapes: this.outputs[0].shape\n            });\n        }\n        else {\n            var outputTensor = layer.apply(this.outputs[0]);\n            if (Array.isArray(outputTensor)) {\n                throw new TypeError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [outputTensor];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n        this.layers.push(layer);\n        this.built = false;\n    };\n    Sequential.prototype.pop = function () {\n        if (this.layers.length === 0) {\n            throw new TypeError('There are no layers in the model.');\n        }\n        this.layers.pop();\n        if (this.layers.length === 0) {\n            this.outputs = [];\n            this.inboundNodes = [];\n            this.outboundNodes = [];\n        }\n        else {\n            var lastLayerIndex = this.layers.length - 1;\n            this.layers[lastLayerIndex].outboundNodes = [];\n            this.outputs = [this.layers[lastLayerIndex].output];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n    };\n    Sequential.prototype.call = function (inputs, kwargs) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.call(inputs, kwargs);\n    };\n    Sequential.prototype.build = function (inputShape) {\n        if (this.inputs.length === 0 || this.outputs.length === 0) {\n            throw new TypeError('Sequential model cannot be built: model is empty.' +\n                ' Add some layers first.');\n        }\n        this.model = new training_1.Model({\n            inputs: this.inputs,\n            outputs: this.outputs[0],\n            name: this.name + '_model'\n        });\n        this.model.trainable = this.trainable;\n        this.model.updatable = this.updatable;\n        this.supportsMasking = this.model.supportsMasking;\n        this.inputLayers = this.model.inputLayers;\n        this.inputLayersNodeIndices = this.model.inputLayersNodeIndices;\n        this.inputLayersTensorIndices = this.model.inputLayersTensorIndices;\n        this.outputLayers = this.model.outputLayers;\n        this.outputLayersNodeIndices = this.model.outputLayersNodeIndices;\n        this.outputLayersTensorIndices = this.model.outputLayersTensorIndices;\n        this.nodesByDepth = this.model.nodesByDepth;\n        this.containerNodes = this.model.containerNodes;\n        this.outputNames = this.model.outputNames;\n        this.inputNames = this.model.inputNames;\n        this.built = true;\n    };\n    Sequential.prototype.setWeights = function (weights) {\n        if (this.model == null) {\n            this.build();\n        }\n        this.model.setWeights(weights);\n    };\n    Object.defineProperty(Sequential.prototype, \"updatable\", {\n        get: function () {\n            return this._updatable;\n        },\n        set: function (value) {\n            if (this.built) {\n                this.model.updatable = value;\n            }\n            this._updatable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sequential.prototype.evaluate = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        if (!this.built) {\n            throw new errors_1.RuntimeError('The model needs to be compiled before being used.');\n        }\n        return this.model.evaluate(x, y, config);\n    };\n    Sequential.prototype.predict = function (x, config) {\n        if (config === void 0) { config = {}; }\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predict(x, config);\n    };\n    Sequential.prototype.predictOnBatch = function (x) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predictOnBatch(x);\n    };\n    Sequential.prototype.compile = function (config) {\n        this.build();\n        this.model.compile(config);\n        this.optimizer = this.model.optimizer;\n        this.loss = this.model.loss;\n        this.metrics = this.model.metrics;\n        this.metricsTensors = this.model.metricsTensors;\n        this.metricsNames = this.model.metricsNames;\n    };\n    Sequential.prototype.fit = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.built) {\n                    throw new errors_1.RuntimeError('The model needs to be compiled before ' +\n                        'being used.');\n                }\n                return [2, this.model.fit(x, y, config)];\n            });\n        });\n    };\n    Sequential.fromConfig = function (cls, config) {\n        var model = new cls({});\n        if (!(model instanceof Sequential_1)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called on non-Sequential input: \" + model);\n        }\n        if (!(config instanceof Array)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called without an array of configs\");\n        }\n        if (!(config[0].className != null) || config[0]['className'] === 'Merge') {\n            throw new errors_1.ValueError('Legacy serialization format not supported yet.');\n        }\n        for (var _i = 0, _a = config; _i < _a.length; _i++) {\n            var conf = _a[_i];\n            var layer = serialization_1.deserialize(conf);\n            model.add(layer);\n        }\n        return model;\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential.prototype, \"add\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"evaluate\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [1] })\n    ], Sequential.prototype, \"predict\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"fit\", null);\n    Sequential = Sequential_1 = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential);\n    return Sequential;\n    var Sequential_1;\n}(training_1.Model));\nexports.Sequential = Sequential;\ngeneric_utils.ClassNameMap.register('Sequential', Sequential);\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/models.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-layers/dist/models.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar topology_1 = require(\"./engine/topology\");\nvar training_1 = require(\"./engine/training\");\nvar errors_1 = require(\"./errors\");\nvar serialization_1 = require(\"./layers/serialization\");\nvar generic_utils = require(\"./utils/generic_utils\");\nvar serialization_utils_1 = require(\"./utils/serialization_utils\");\nfunction modelFromJSON(modelAndWeightsConfig, customObjects) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelTopology, tsConfig, model, weightValues, skipMismatches, isNamedTensorMap;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    modelTopology = modelAndWeightsConfig.modelTopology;\n                    if (modelTopology['model_config'] != null) {\n                        modelTopology = modelTopology['model_config'];\n                    }\n                    tsConfig = serialization_utils_1.convertPythonicToTs(modelTopology);\n                    model = serialization_1.deserialize(tsConfig, customObjects);\n                    if (!(modelAndWeightsConfig.weightsManifest != null)) return [3, 2];\n                    return [4, tfjs_core_1.loadWeights(modelAndWeightsConfig.weightsManifest, modelAndWeightsConfig.pathPrefix, model.weights.map(function (weight) { return weight.name; }))];\n                case 1:\n                    weightValues = _a.sent();\n                    skipMismatches = null;\n                    isNamedTensorMap = true;\n                    model.loadWeights(weightValues, skipMismatches, isNamedTensorMap);\n                    _a.label = 2;\n                case 2: return [2, model];\n            }\n        });\n    });\n}\nexports.modelFromJSON = modelFromJSON;\nfunction loadModelInternal(modelConfigPath) {\n    return __awaiter(this, void 0, void 0, function () {\n        var modelConfigRequest, modelConfig;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, fetch(modelConfigPath)];\n                case 1:\n                    modelConfigRequest = _a.sent();\n                    return [4, modelConfigRequest.json()];\n                case 2:\n                    modelConfig = _a.sent();\n                    if (modelConfig['modelTopology'] == null) {\n                        throw new errors_1.ValueError('Missing field \"modelTopology\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    if (modelConfig['weightsManifest'] == null) {\n                        throw new errors_1.ValueError('Missing field \"weightsManifest\" from model JSON at path' +\n                            modelConfigPath);\n                    }\n                    modelConfig.pathPrefix =\n                        modelConfigPath.substring(0, modelConfigPath.lastIndexOf('/'));\n                    return [2, modelFromJSON(modelConfig)];\n            }\n        });\n    });\n}\nexports.loadModelInternal = loadModelInternal;\nvar Sequential = (function (_super) {\n    __extends(Sequential, _super);\n    function Sequential(config) {\n        var _this = _super.call(this, { inputs: [], outputs: [] }) || this;\n        config = config || {};\n        _this.trainable = true;\n        _this._updatable = true;\n        _this.built = false;\n        _this.name = (config.name != null) ? config.name : K.getUid('sequential_');\n        if (config.layers != null) {\n            for (var _i = 0, _a = config.layers; _i < _a.length; _i++) {\n                var layer = _a[_i];\n                _this.add(layer);\n            }\n        }\n        return _this;\n    }\n    Sequential_1 = Sequential;\n    Sequential.prototype.add = function (layer) {\n        if (this.outputs.length === 0) {\n            if (layer.inboundNodes.length === 0) {\n                if (layer.batchInputShape == null) {\n                    throw new errors_1.ValueError('The first layer in a Sequential model must ' +\n                        'get an `inputShape` or `batchInputShape` argument.');\n                }\n                var x = topology_1.Input({\n                    batchShape: layer.batchInputShape,\n                    dtype: layer.dtype,\n                    name: layer.name + '_input'\n                });\n                layer.apply(x);\n            }\n            if (layer.inboundNodes.length !== 1) {\n                throw new errors_1.ValueError('A layer added to a Sequential model must not already be ' +\n                    (\"connected somewhere else. Model received layer \" + layer.name + \" \") +\n                    (\"which has \" + layer.inboundNodes.length + \" pre-existing inbound \") +\n                    'connections.');\n            }\n            if (layer.inboundNodes[0].outputTensors.length !== 1) {\n                throw new errors_1.ValueError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [layer.inboundNodes[0].outputTensors[0]];\n            this.inputs = topology_1.getSourceInputs(this.outputs[0]);\n            new topology_1.Node({\n                outboundLayer: this,\n                inboundLayers: [],\n                nodeIndices: [],\n                tensorIndices: [],\n                inputTensors: this.inputs,\n                outputTensors: this.outputs,\n                inputMasks: generic_utils.pyListRepeat(null, this.inputs.length),\n                outputMasks: [null],\n                inputShapes: this.inputs.map(function (x) { return x.shape; }),\n                outputShapes: this.outputs[0].shape\n            });\n        }\n        else {\n            var outputTensor = layer.apply(this.outputs[0]);\n            if (Array.isArray(outputTensor)) {\n                throw new TypeError('All layers in a Sequential model ' +\n                    'should have a single output tensor. ' +\n                    'For multi-output layers, ' +\n                    'use the functional API.');\n            }\n            this.outputs = [outputTensor];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n        this.layers.push(layer);\n        this.built = false;\n    };\n    Sequential.prototype.pop = function () {\n        if (this.layers.length === 0) {\n            throw new TypeError('There are no layers in the model.');\n        }\n        this.layers.pop();\n        if (this.layers.length === 0) {\n            this.outputs = [];\n            this.inboundNodes = [];\n            this.outboundNodes = [];\n        }\n        else {\n            var lastLayerIndex = this.layers.length - 1;\n            this.layers[lastLayerIndex].outboundNodes = [];\n            this.outputs = [this.layers[lastLayerIndex].output];\n            this.inboundNodes[0].outputTensors = this.outputs;\n            this.inboundNodes[0].outputShapes = [this.outputs[0].shape];\n        }\n    };\n    Sequential.prototype.call = function (inputs, kwargs) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.call(inputs, kwargs);\n    };\n    Sequential.prototype.build = function (inputShape) {\n        if (this.inputs.length === 0 || this.outputs.length === 0) {\n            throw new TypeError('Sequential model cannot be built: model is empty.' +\n                ' Add some layers first.');\n        }\n        this.model = new training_1.Model({\n            inputs: this.inputs,\n            outputs: this.outputs[0],\n            name: this.name + '_model'\n        });\n        this.model.trainable = this.trainable;\n        this.model.updatable = this.updatable;\n        this.supportsMasking = this.model.supportsMasking;\n        this.inputLayers = this.model.inputLayers;\n        this.inputLayersNodeIndices = this.model.inputLayersNodeIndices;\n        this.inputLayersTensorIndices = this.model.inputLayersTensorIndices;\n        this.outputLayers = this.model.outputLayers;\n        this.outputLayersNodeIndices = this.model.outputLayersNodeIndices;\n        this.outputLayersTensorIndices = this.model.outputLayersTensorIndices;\n        this.nodesByDepth = this.model.nodesByDepth;\n        this.containerNodes = this.model.containerNodes;\n        this.outputNames = this.model.outputNames;\n        this.inputNames = this.model.inputNames;\n        this.built = true;\n    };\n    Sequential.prototype.setWeights = function (weights) {\n        if (this.model == null) {\n            this.build();\n        }\n        this.model.setWeights(weights);\n    };\n    Object.defineProperty(Sequential.prototype, \"updatable\", {\n        get: function () {\n            return this._updatable;\n        },\n        set: function (value) {\n            if (this.built) {\n                this.model.updatable = value;\n            }\n            this._updatable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sequential.prototype.evaluate = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        if (!this.built) {\n            throw new errors_1.RuntimeError('The model needs to be compiled before being used.');\n        }\n        return this.model.evaluate(x, y, config);\n    };\n    Sequential.prototype.predict = function (x, config) {\n        if (config === void 0) { config = {}; }\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predict(x, config);\n    };\n    Sequential.prototype.predictOnBatch = function (x) {\n        if (this.model == null) {\n            this.build();\n        }\n        return this.model.predictOnBatch(x);\n    };\n    Sequential.prototype.compile = function (config) {\n        this.build();\n        this.model.compile(config);\n        this.optimizer = this.model.optimizer;\n        this.loss = this.model.loss;\n        this.metrics = this.model.metrics;\n        this.metricsTensors = this.model.metricsTensors;\n        this.metricsNames = this.model.metricsNames;\n    };\n    Sequential.prototype.fit = function (x, y, config) {\n        if (config === void 0) { config = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.built) {\n                    throw new errors_1.RuntimeError('The model needs to be compiled before ' +\n                        'being used.');\n                }\n                return [2, this.model.fit(x, y, config)];\n            });\n        });\n    };\n    Sequential.fromConfig = function (cls, config) {\n        var model = new cls({});\n        if (!(model instanceof Sequential_1)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called on non-Sequential input: \" + model);\n        }\n        if (!(config instanceof Array)) {\n            throw new errors_1.ValueError(\"Sequential.fromConfig called without an array of configs\");\n        }\n        if (!(config[0].className != null) || config[0]['className'] === 'Merge') {\n            throw new errors_1.ValueError('Legacy serialization format not supported yet.');\n        }\n        for (var _i = 0, _a = config; _i < _a.length; _i++) {\n            var conf = _a[_i];\n            var layer = serialization_1.deserialize(conf);\n            model.add(layer);\n        }\n        return model;\n    };\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential.prototype, \"add\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"evaluate\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [1] })\n    ], Sequential.prototype, \"predict\", null);\n    __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes', configParamIndices: [2] })\n    ], Sequential.prototype, \"fit\", null);\n    Sequential = Sequential_1 = __decorate([\n        tfjs_core_1.doc({ heading: 'Models', subheading: 'Classes' })\n    ], Sequential);\n    return Sequential;\n    var Sequential_1;\n}(training_1.Model));\nexports.Sequential = Sequential;\ngeneric_utils.ClassNameMap.register('Sequential', Sequential);\n"},"lineCount":336}},"hash":"2b1c264a6e6865f6f9b0fcb7068d7bd8","cacheData":{"env":{}}}