{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":0},{"name":"./tex_util","loc":{"line":3,"column":25}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tex_util_1 = require(\"./tex_util\");\nvar TextureManager = (function () {\n    function TextureManager(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.allocatedTextures = [];\n        this.usedTextureCount = {};\n    }\n    TextureManager.prototype.acquireTexture = function (shapeRC, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shapeRC, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextureCount)) {\n            this.usedTextureCount[shapeKey] = 0;\n        }\n        this.usedTextureCount[shapeKey]++;\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this.log();\n            return this.freeTextures[shapeKey].shift();\n        }\n        this.numUsedTextures++;\n        this.log();\n        var newTexture = this.gpgpu.createMatrixTexture(shapeRC[0], shapeRC[1]);\n        this.allocatedTextures.push(newTexture);\n        return newTexture;\n    };\n    TextureManager.prototype.releaseTexture = function (texture, shape, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shape, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        this.usedTextureCount[shapeKey]--;\n        this.log();\n    };\n    TextureManager.prototype.log = function () {\n        if (!this.logEnabled) {\n            return;\n        }\n        var total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + total + \")\");\n    };\n    TextureManager.prototype.getNumUsedTextures = function () {\n        return this.numUsedTextures;\n    };\n    TextureManager.prototype.getNumFreeTextures = function () {\n        return this.numFreeTextures;\n    };\n    TextureManager.prototype.dispose = function () {\n        var _this = this;\n        if (this.allocatedTextures == null) {\n            return;\n        }\n        this.allocatedTextures.forEach(function (texture) {\n            _this.gpgpu.deleteMatrixTexture(texture);\n        });\n        this.freeTextures = null;\n        this.allocatedTextures = null;\n        this.usedTextureCount = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n    };\n    return TextureManager;\n}());\nexports.TextureManager = TextureManager;\nfunction getKeyFromTextureShape(shapeRowsCol, texType) {\n    return shapeRowsCol[0] + \"_\" + shapeRowsCol[1] + \"_\" + texType;\n}\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/texture_manager.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tex_util_1 = require(\"./tex_util\");\nvar TextureManager = (function () {\n    function TextureManager(gpgpu) {\n        this.gpgpu = gpgpu;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n        this.freeTextures = {};\n        this.logEnabled = false;\n        this.allocatedTextures = [];\n        this.usedTextureCount = {};\n    }\n    TextureManager.prototype.acquireTexture = function (shapeRC, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shapeRC, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        if (!(shapeKey in this.usedTextureCount)) {\n            this.usedTextureCount[shapeKey] = 0;\n        }\n        this.usedTextureCount[shapeKey]++;\n        if (this.freeTextures[shapeKey].length > 0) {\n            this.numFreeTextures--;\n            this.numUsedTextures++;\n            this.log();\n            return this.freeTextures[shapeKey].shift();\n        }\n        this.numUsedTextures++;\n        this.log();\n        var newTexture = this.gpgpu.createMatrixTexture(shapeRC[0], shapeRC[1]);\n        this.allocatedTextures.push(newTexture);\n        return newTexture;\n    };\n    TextureManager.prototype.releaseTexture = function (texture, shape, texType) {\n        if (texType === void 0) { texType = tex_util_1.TextureType.FLOAT; }\n        var shapeKey = getKeyFromTextureShape(shape, texType);\n        if (!(shapeKey in this.freeTextures)) {\n            this.freeTextures[shapeKey] = [];\n        }\n        this.freeTextures[shapeKey].push(texture);\n        this.numFreeTextures++;\n        this.numUsedTextures--;\n        this.usedTextureCount[shapeKey]--;\n        this.log();\n    };\n    TextureManager.prototype.log = function () {\n        if (!this.logEnabled) {\n            return;\n        }\n        var total = this.numFreeTextures + this.numUsedTextures;\n        console.log('Free/Used', this.numFreeTextures + \" / \" + this.numUsedTextures, \"(\" + total + \")\");\n    };\n    TextureManager.prototype.getNumUsedTextures = function () {\n        return this.numUsedTextures;\n    };\n    TextureManager.prototype.getNumFreeTextures = function () {\n        return this.numFreeTextures;\n    };\n    TextureManager.prototype.dispose = function () {\n        var _this = this;\n        if (this.allocatedTextures == null) {\n            return;\n        }\n        this.allocatedTextures.forEach(function (texture) {\n            _this.gpgpu.deleteMatrixTexture(texture);\n        });\n        this.freeTextures = null;\n        this.allocatedTextures = null;\n        this.usedTextureCount = null;\n        this.numUsedTextures = 0;\n        this.numFreeTextures = 0;\n    };\n    return TextureManager;\n}());\nexports.TextureManager = TextureManager;\nfunction getKeyFromTextureShape(shapeRowsCol, texType) {\n    return shapeRowsCol[0] + \"_\" + shapeRowsCol[1] + \"_\" + texType;\n}\n"},"lineCount":81}},"hash":"287c61a46c2928dd2d669c4a622e051f","cacheData":{"env":{}}}