{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../utils/Class","loc":{"line":7,"column":20}},{"name":"./Frame","loc":{"line":8,"column":20}},{"name":"./TextureSource","loc":{"line":9,"column":28}}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar Frame = require('./Frame');\r\nvar TextureSource = require('./TextureSource');\r\n\r\n/**\r\n * @classdesc\r\n * A Texture consists of a source, usually an Image from the Cache, or a Canvas, and a collection\r\n * of Frames. The Frames represent the different areas of the Texture. For example a texture atlas\r\n * may have many Frames, one for each element within the atlas. Where-as a single image would have\r\n * just one frame, that encompasses the whole image.\r\n *\r\n * Textures are managed by the global TextureManager. This is a singleton class that is\r\n * responsible for creating and delivering Textures and their corresponding Frames to Game Objects.\r\n *\r\n * Sprites and other Game Objects get the texture data they need from the TextureManager.\r\n *\r\n * @class Texture\r\n * @memberOf Phaser.Textures\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Textures.TextureManager} manager - A reference to the Texture Manager this Texture belongs to.\r\n * @param {string} key - The unique string-based key of this Texture.\r\n * @param {(Image|HTMLCanvasElement)} source - The source that is used to create the texture. Usually an Image, but can also be a Canvas.\r\n * @param {number} [width] - The width of the Texture. This is optional and automatically derived from the source images.\r\n * @param {number} [height] - The height of the Texture. This is optional and automatically derived from the source images.\r\n */\r\nvar Texture = new Class({\r\n\r\n    initialize:\r\n\r\n    function Texture (manager, key, source, width, height)\r\n    {\r\n        if (!Array.isArray(source))\r\n        {\r\n            source = [ source ];\r\n        }\r\n\r\n        /**\r\n         * A reference to the Texture Manager this Texture belongs to.\r\n         *\r\n         * @name Phaser.Textures.Texture#manager\r\n         * @type {Phaser.Textures.TextureManager}\r\n         * @since 3.0.0\r\n         */\r\n        this.manager = manager;\r\n\r\n        /**\r\n         * The unique string-based key of this Texture.\r\n         *\r\n         * @name Phaser.Textures.Texture#key\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * An array of TextureSource instances.\r\n         * These are unique to this Texture and contain the actual Image (or Canvas) data.\r\n         *\r\n         * @name Phaser.Textures.Texture#source\r\n         * @type {Phaser.Textures.TextureSource[]}\r\n         * @since 3.0.0\r\n         */\r\n        this.source = [];\r\n\r\n        /**\r\n         * An array of TextureSource data instances.\r\n         * Used to store additional data images, such as normal maps or specular maps.\r\n         *\r\n         * @name Phaser.Textures.Texture#dataSource\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.dataSource = [];\r\n\r\n        /**\r\n         * A key-value object pair associating the unique Frame keys with the Frames objects.\r\n         *\r\n         * @name Phaser.Textures.Texture#frames\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.frames = {};\r\n\r\n        /**\r\n         * Any additional data that was set in the source JSON (if any),\r\n         * or any extra data you'd like to store relating to this texture\r\n         *\r\n         * @name Phaser.Textures.Texture#customData\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.customData = {};\r\n\r\n        /**\r\n         * The name of the first frame of the Texture.\r\n         *\r\n         * @name Phaser.Textures.Texture#firstFrame\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.firstFrame = '__BASE';\r\n\r\n        /**\r\n         * The total number of Frames in this Texture.\r\n         *\r\n         * @name Phaser.Textures.Texture#frameTotal\r\n         * @type {integer}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.frameTotal = 0;\r\n\r\n        //  Load the Sources\r\n        for (var i = 0; i < source.length; i++)\r\n        {\r\n            this.source.push(new TextureSource(this, source[i], width, height));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a new Frame to this Texture.\r\n     *\r\n     * A Frame is a rectangular region of a TextureSource with a unique index or string-based key.\r\n     *\r\n     * @method Phaser.Textures.Texture#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|string)} name - The name of this Frame. The name is unique within the Texture.\r\n     * @param {integer} sourceIndex - The index of the TextureSource that this Frame is a part of.\r\n     * @param {number} x - The x coordinate of the top-left of this Frame.\r\n     * @param {number} y - The y coordinate of the top-left of this Frame.\r\n     * @param {number} width - The width of this Frame.\r\n     * @param {number} height - The height of this Frame.\r\n     *\r\n     * @return {Phaser.Textures.Frame} The Frame that was added to this Texture.\r\n     */\r\n    add: function (name, sourceIndex, x, y, width, height)\r\n    {\r\n        var frame = new Frame(this, name, sourceIndex, x, y, width, height);\r\n\r\n        this.frames[name] = frame;\r\n\r\n        //  Set the first frame of the Texture (other than __BASE)\r\n        //  This is used to ensure we don't spam the display with entire\r\n        //  atlases of sprite sheets, but instead just the first frame of them\r\n        //  should the dev incorrectly specify the frame index\r\n        if (this.frameTotal === 1)\r\n        {\r\n            this.firstFrame = name;\r\n        }\r\n\r\n        this.frameTotal++;\r\n\r\n        return frame;\r\n    },\r\n\r\n    /**\r\n     * Checks to see if a Frame matching the given key exists within this Texture.\r\n     *\r\n     * @method Phaser.Textures.Texture#has\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} name - The key of the Frame to check for.\r\n     *\r\n     * @return {boolean} True if a Frame with the matching key exists in this Texture.\r\n     */\r\n    has: function (name)\r\n    {\r\n        return (this.frames[name]);\r\n    },\r\n\r\n    /**\r\n     * Gets a Frame from this Texture based on either the key or the index of the Frame.\r\n     *\r\n     * In a Texture Atlas Frames are typically referenced by a key.\r\n     * In a Sprite Sheet Frames are referenced by an index.\r\n     * Passing no value for the name returns the base texture.\r\n     *\r\n     * @method Phaser.Textures.Texture#get\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} [name] - The string-based name, or integer based index, of the Frame to get from this Texture.\r\n     *\r\n     * @return {Phaser.Textures.Frame} The Texture Frame.\r\n     */\r\n    get: function (name)\r\n    {\r\n        //  null, undefined, empty string, zero\r\n        if (!name)\r\n        {\r\n            name = this.firstFrame;\r\n        }\r\n\r\n        var frame = this.frames[name];\r\n\r\n        if (!frame)\r\n        {\r\n            console.warn('No Texture.frame found with name ' + name);\r\n\r\n            frame = this.frames[this.firstFrame];\r\n        }\r\n\r\n        return frame;\r\n    },\r\n\r\n    /**\r\n     * Takes the given TextureSource and returns the index of it within this Texture.\r\n     * If it's not in this Texture, it returns -1.\r\n     * Unless this Texture has multiple TextureSources, such as with a multi-atlas, this\r\n     * method will always return zero or -1.\r\n     *\r\n     * @method Phaser.Textures.Texture#getTextureSourceIndex\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Textures.TextureSource} source - The TextureSource to check.\r\n     *\r\n     * @return {integer} The index of the TextureSource within this Texture, or -1 if not in this Texture.\r\n     */\r\n    getTextureSourceIndex: function (source)\r\n    {\r\n        for (var i = 0; i < this.source.length; i++)\r\n        {\r\n            if (this.source[i] === source)\r\n            {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    },\r\n\r\n    /**\r\n     * Returns an array of all the Frames in the given TextureSource.\r\n     *\r\n     * @method Phaser.Textures.Texture#getFramesFromTextureSource\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} sourceIndex - The index of the TextureSource to get the Frames from.\r\n     *\r\n     * @return {Phaser.Textures.Frame[]} An array of Texture Frames.\r\n     */\r\n    getFramesFromTextureSource: function (sourceIndex)\r\n    {\r\n        var out = [];\r\n\r\n        for (var frameName in this.frames)\r\n        {\r\n            if (frameName === '__BASE')\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var frame = this.frames[frameName];\r\n\r\n            if (frame.sourceIndex === sourceIndex)\r\n            {\r\n                out.push(frame.name);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Returns an array with all of the names of the Frames in this Texture.\r\n     *\r\n     * Useful if you want to randomly assign a Frame to a Game Object, as you can\r\n     * pick a random element from the returned array.\r\n     *\r\n     * @method Phaser.Textures.Texture#getFrameNames\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [includeBase=false] - Include the `__BASE` Frame in the output array?\r\n     *\r\n     * @return {string[]} An array of all Frame names in this Texture.\r\n     */\r\n    getFrameNames: function (includeBase)\r\n    {\r\n        if (includeBase === undefined) { includeBase = false; }\r\n\r\n        var out = Object.keys(this.frames);\r\n\r\n        if (!includeBase)\r\n        {\r\n            var idx = out.indexOf('__BASE');\r\n\r\n            if (idx !== -1)\r\n            {\r\n                out.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Given a Frame name, return the source image it uses to render with.\r\n     *\r\n     * This will return the actual DOM Image or Canvas element.\r\n     *\r\n     * @method Phaser.Textures.Texture#getSourceImage\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} [name] - The string-based name, or integer based index, of the Frame to get from this Texture.\r\n     *\r\n     * @return {(HTMLImageElement|HTMLCanvasElement)} The DOM Image or Canvas Element.\r\n     */\r\n    getSourceImage: function (name)\r\n    {\r\n        if (name === undefined || name === null || this.frameTotal === 1)\r\n        {\r\n            name = '__BASE';\r\n        }\r\n\r\n        var frame = this.frames[name];\r\n\r\n        if (!frame)\r\n        {\r\n            console.warn('No Texture.frame found with name ' + name);\r\n\r\n            return this.frames['__BASE'].source.image;\r\n        }\r\n        else\r\n        {\r\n            return frame.source.image;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a data source image to this Texture.\r\n     *\r\n     * An example of a data source image would be a normal map, where all of the Frames for this Texture\r\n     * equally apply to the normal map.\r\n     *\r\n     * @method Phaser.Textures.Texture#setDataSource\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Image|HTMLCanvasElement)} data - The source image.\r\n     */\r\n    setDataSource: function (data)\r\n    {\r\n        if (!Array.isArray(data))\r\n        {\r\n            data = [ data ];\r\n        }\r\n\r\n        for (var i = 0; i < data.length; i++)\r\n        {\r\n            var source = this.source[i];\r\n\r\n            this.dataSource.push(new TextureSource(this, data[i], source.width, source.height));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the Filter Mode for this Texture.\r\n     *\r\n     * The mode can be either Linear, the default, or Nearest.\r\n     *\r\n     * For pixel-art you should use Nearest.\r\n     *\r\n     * The mode applies to the entire Texture, not just a specific Frame of it.\r\n     *\r\n     * @method Phaser.Textures.Texture#setFilter\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Textures.LINEAR|Phaser.Textures.NEAREST)} filterMode - The Filter Mode.\r\n     */\r\n    setFilter: function (filterMode)\r\n    {\r\n        var i;\r\n\r\n        for (i = 0; i < this.source.length; i++)\r\n        {\r\n            this.source[i].setFilter(filterMode);\r\n        }\r\n\r\n        for (i = 0; i < this.dataSource.length; i++)\r\n        {\r\n            this.dataSource[i].setFilter(filterMode);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Destroys this Texture and releases references to its sources and frames.\r\n     *\r\n     * @method Phaser.Textures.Texture#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        var i;\r\n\r\n        for (i = 0; i < this.source.length; i++)\r\n        {\r\n            this.source[i].destroy();\r\n        }\r\n\r\n        for (i = 0; i < this.dataSource.length; i++)\r\n        {\r\n            this.dataSource[i].destroy();\r\n        }\r\n\r\n        for (var frameName in this.frames)\r\n        {\r\n            var frame = this.frames[frameName];\r\n\r\n            frame.destroy();\r\n        }\r\n\r\n        this.source = [];\r\n        this.dataSource = [];\r\n        this.frames = {};\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Texture;\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/phaser/src/textures/Texture.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}}],"sources":{"node_modules/phaser/src/textures/Texture.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../utils/Class');\r\nvar Frame = require('./Frame');\r\nvar TextureSource = require('./TextureSource');\r\n\r\n/**\r\n * @classdesc\r\n * A Texture consists of a source, usually an Image from the Cache, or a Canvas, and a collection\r\n * of Frames. The Frames represent the different areas of the Texture. For example a texture atlas\r\n * may have many Frames, one for each element within the atlas. Where-as a single image would have\r\n * just one frame, that encompasses the whole image.\r\n *\r\n * Textures are managed by the global TextureManager. This is a singleton class that is\r\n * responsible for creating and delivering Textures and their corresponding Frames to Game Objects.\r\n *\r\n * Sprites and other Game Objects get the texture data they need from the TextureManager.\r\n *\r\n * @class Texture\r\n * @memberOf Phaser.Textures\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Textures.TextureManager} manager - A reference to the Texture Manager this Texture belongs to.\r\n * @param {string} key - The unique string-based key of this Texture.\r\n * @param {(Image|HTMLCanvasElement)} source - The source that is used to create the texture. Usually an Image, but can also be a Canvas.\r\n * @param {number} [width] - The width of the Texture. This is optional and automatically derived from the source images.\r\n * @param {number} [height] - The height of the Texture. This is optional and automatically derived from the source images.\r\n */\r\nvar Texture = new Class({\r\n\r\n    initialize:\r\n\r\n    function Texture (manager, key, source, width, height)\r\n    {\r\n        if (!Array.isArray(source))\r\n        {\r\n            source = [ source ];\r\n        }\r\n\r\n        /**\r\n         * A reference to the Texture Manager this Texture belongs to.\r\n         *\r\n         * @name Phaser.Textures.Texture#manager\r\n         * @type {Phaser.Textures.TextureManager}\r\n         * @since 3.0.0\r\n         */\r\n        this.manager = manager;\r\n\r\n        /**\r\n         * The unique string-based key of this Texture.\r\n         *\r\n         * @name Phaser.Textures.Texture#key\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.key = key;\r\n\r\n        /**\r\n         * An array of TextureSource instances.\r\n         * These are unique to this Texture and contain the actual Image (or Canvas) data.\r\n         *\r\n         * @name Phaser.Textures.Texture#source\r\n         * @type {Phaser.Textures.TextureSource[]}\r\n         * @since 3.0.0\r\n         */\r\n        this.source = [];\r\n\r\n        /**\r\n         * An array of TextureSource data instances.\r\n         * Used to store additional data images, such as normal maps or specular maps.\r\n         *\r\n         * @name Phaser.Textures.Texture#dataSource\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.dataSource = [];\r\n\r\n        /**\r\n         * A key-value object pair associating the unique Frame keys with the Frames objects.\r\n         *\r\n         * @name Phaser.Textures.Texture#frames\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.frames = {};\r\n\r\n        /**\r\n         * Any additional data that was set in the source JSON (if any),\r\n         * or any extra data you'd like to store relating to this texture\r\n         *\r\n         * @name Phaser.Textures.Texture#customData\r\n         * @type {object}\r\n         * @since 3.0.0\r\n         */\r\n        this.customData = {};\r\n\r\n        /**\r\n         * The name of the first frame of the Texture.\r\n         *\r\n         * @name Phaser.Textures.Texture#firstFrame\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.firstFrame = '__BASE';\r\n\r\n        /**\r\n         * The total number of Frames in this Texture.\r\n         *\r\n         * @name Phaser.Textures.Texture#frameTotal\r\n         * @type {integer}\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this.frameTotal = 0;\r\n\r\n        //  Load the Sources\r\n        for (var i = 0; i < source.length; i++)\r\n        {\r\n            this.source.push(new TextureSource(this, source[i], width, height));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a new Frame to this Texture.\r\n     *\r\n     * A Frame is a rectangular region of a TextureSource with a unique index or string-based key.\r\n     *\r\n     * @method Phaser.Textures.Texture#add\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|string)} name - The name of this Frame. The name is unique within the Texture.\r\n     * @param {integer} sourceIndex - The index of the TextureSource that this Frame is a part of.\r\n     * @param {number} x - The x coordinate of the top-left of this Frame.\r\n     * @param {number} y - The y coordinate of the top-left of this Frame.\r\n     * @param {number} width - The width of this Frame.\r\n     * @param {number} height - The height of this Frame.\r\n     *\r\n     * @return {Phaser.Textures.Frame} The Frame that was added to this Texture.\r\n     */\r\n    add: function (name, sourceIndex, x, y, width, height)\r\n    {\r\n        var frame = new Frame(this, name, sourceIndex, x, y, width, height);\r\n\r\n        this.frames[name] = frame;\r\n\r\n        //  Set the first frame of the Texture (other than __BASE)\r\n        //  This is used to ensure we don't spam the display with entire\r\n        //  atlases of sprite sheets, but instead just the first frame of them\r\n        //  should the dev incorrectly specify the frame index\r\n        if (this.frameTotal === 1)\r\n        {\r\n            this.firstFrame = name;\r\n        }\r\n\r\n        this.frameTotal++;\r\n\r\n        return frame;\r\n    },\r\n\r\n    /**\r\n     * Checks to see if a Frame matching the given key exists within this Texture.\r\n     *\r\n     * @method Phaser.Textures.Texture#has\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} name - The key of the Frame to check for.\r\n     *\r\n     * @return {boolean} True if a Frame with the matching key exists in this Texture.\r\n     */\r\n    has: function (name)\r\n    {\r\n        return (this.frames[name]);\r\n    },\r\n\r\n    /**\r\n     * Gets a Frame from this Texture based on either the key or the index of the Frame.\r\n     *\r\n     * In a Texture Atlas Frames are typically referenced by a key.\r\n     * In a Sprite Sheet Frames are referenced by an index.\r\n     * Passing no value for the name returns the base texture.\r\n     *\r\n     * @method Phaser.Textures.Texture#get\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} [name] - The string-based name, or integer based index, of the Frame to get from this Texture.\r\n     *\r\n     * @return {Phaser.Textures.Frame} The Texture Frame.\r\n     */\r\n    get: function (name)\r\n    {\r\n        //  null, undefined, empty string, zero\r\n        if (!name)\r\n        {\r\n            name = this.firstFrame;\r\n        }\r\n\r\n        var frame = this.frames[name];\r\n\r\n        if (!frame)\r\n        {\r\n            console.warn('No Texture.frame found with name ' + name);\r\n\r\n            frame = this.frames[this.firstFrame];\r\n        }\r\n\r\n        return frame;\r\n    },\r\n\r\n    /**\r\n     * Takes the given TextureSource and returns the index of it within this Texture.\r\n     * If it's not in this Texture, it returns -1.\r\n     * Unless this Texture has multiple TextureSources, such as with a multi-atlas, this\r\n     * method will always return zero or -1.\r\n     *\r\n     * @method Phaser.Textures.Texture#getTextureSourceIndex\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Textures.TextureSource} source - The TextureSource to check.\r\n     *\r\n     * @return {integer} The index of the TextureSource within this Texture, or -1 if not in this Texture.\r\n     */\r\n    getTextureSourceIndex: function (source)\r\n    {\r\n        for (var i = 0; i < this.source.length; i++)\r\n        {\r\n            if (this.source[i] === source)\r\n            {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    },\r\n\r\n    /**\r\n     * Returns an array of all the Frames in the given TextureSource.\r\n     *\r\n     * @method Phaser.Textures.Texture#getFramesFromTextureSource\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} sourceIndex - The index of the TextureSource to get the Frames from.\r\n     *\r\n     * @return {Phaser.Textures.Frame[]} An array of Texture Frames.\r\n     */\r\n    getFramesFromTextureSource: function (sourceIndex)\r\n    {\r\n        var out = [];\r\n\r\n        for (var frameName in this.frames)\r\n        {\r\n            if (frameName === '__BASE')\r\n            {\r\n                continue;\r\n            }\r\n\r\n            var frame = this.frames[frameName];\r\n\r\n            if (frame.sourceIndex === sourceIndex)\r\n            {\r\n                out.push(frame.name);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Returns an array with all of the names of the Frames in this Texture.\r\n     *\r\n     * Useful if you want to randomly assign a Frame to a Game Object, as you can\r\n     * pick a random element from the returned array.\r\n     *\r\n     * @method Phaser.Textures.Texture#getFrameNames\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [includeBase=false] - Include the `__BASE` Frame in the output array?\r\n     *\r\n     * @return {string[]} An array of all Frame names in this Texture.\r\n     */\r\n    getFrameNames: function (includeBase)\r\n    {\r\n        if (includeBase === undefined) { includeBase = false; }\r\n\r\n        var out = Object.keys(this.frames);\r\n\r\n        if (!includeBase)\r\n        {\r\n            var idx = out.indexOf('__BASE');\r\n\r\n            if (idx !== -1)\r\n            {\r\n                out.splice(idx, 1);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Given a Frame name, return the source image it uses to render with.\r\n     *\r\n     * This will return the actual DOM Image or Canvas element.\r\n     *\r\n     * @method Phaser.Textures.Texture#getSourceImage\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(string|integer)} [name] - The string-based name, or integer based index, of the Frame to get from this Texture.\r\n     *\r\n     * @return {(HTMLImageElement|HTMLCanvasElement)} The DOM Image or Canvas Element.\r\n     */\r\n    getSourceImage: function (name)\r\n    {\r\n        if (name === undefined || name === null || this.frameTotal === 1)\r\n        {\r\n            name = '__BASE';\r\n        }\r\n\r\n        var frame = this.frames[name];\r\n\r\n        if (!frame)\r\n        {\r\n            console.warn('No Texture.frame found with name ' + name);\r\n\r\n            return this.frames['__BASE'].source.image;\r\n        }\r\n        else\r\n        {\r\n            return frame.source.image;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a data source image to this Texture.\r\n     *\r\n     * An example of a data source image would be a normal map, where all of the Frames for this Texture\r\n     * equally apply to the normal map.\r\n     *\r\n     * @method Phaser.Textures.Texture#setDataSource\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Image|HTMLCanvasElement)} data - The source image.\r\n     */\r\n    setDataSource: function (data)\r\n    {\r\n        if (!Array.isArray(data))\r\n        {\r\n            data = [ data ];\r\n        }\r\n\r\n        for (var i = 0; i < data.length; i++)\r\n        {\r\n            var source = this.source[i];\r\n\r\n            this.dataSource.push(new TextureSource(this, data[i], source.width, source.height));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the Filter Mode for this Texture.\r\n     *\r\n     * The mode can be either Linear, the default, or Nearest.\r\n     *\r\n     * For pixel-art you should use Nearest.\r\n     *\r\n     * The mode applies to the entire Texture, not just a specific Frame of it.\r\n     *\r\n     * @method Phaser.Textures.Texture#setFilter\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Textures.LINEAR|Phaser.Textures.NEAREST)} filterMode - The Filter Mode.\r\n     */\r\n    setFilter: function (filterMode)\r\n    {\r\n        var i;\r\n\r\n        for (i = 0; i < this.source.length; i++)\r\n        {\r\n            this.source[i].setFilter(filterMode);\r\n        }\r\n\r\n        for (i = 0; i < this.dataSource.length; i++)\r\n        {\r\n            this.dataSource[i].setFilter(filterMode);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Destroys this Texture and releases references to its sources and frames.\r\n     *\r\n     * @method Phaser.Textures.Texture#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        var i;\r\n\r\n        for (i = 0; i < this.source.length; i++)\r\n        {\r\n            this.source[i].destroy();\r\n        }\r\n\r\n        for (i = 0; i < this.dataSource.length; i++)\r\n        {\r\n            this.dataSource[i].destroy();\r\n        }\r\n\r\n        for (var frameName in this.frames)\r\n        {\r\n            var frame = this.frames[frameName];\r\n\r\n            frame.destroy();\r\n        }\r\n\r\n        this.source = [];\r\n        this.dataSource = [];\r\n        this.frames = {};\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Texture;\r\n"},"lineCount":427}},"hash":"e4752ae3cedfeaad0fb12f36c22312bc","cacheData":{"env":{}}}