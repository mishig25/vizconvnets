{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../../utils/object/Clone","loc":{"line":7,"column":20}}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Clone = require('../../utils/object/Clone');\r\n\r\n/**\r\n * Parses a Texture Atlas JSON Array and adds the Frames to the Texture.\r\n * JSON format expected to match that defined by Texture Packer, with the frames property containing an array of Frames.\r\n *\r\n * @function Phaser.Textures.Parsers.JSONArray\r\n * @memberOf Phaser.Textures.Parsers\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Textures.Texture} texture - The Texture to add the Frames to.\r\n * @param {integer} sourceIndex - The index of the TextureSource.\r\n * @param {object} json - The JSON data.\r\n *\r\n * @return {Phaser.Textures.Texture} The Texture modified by this parser.\r\n */\r\nvar JSONArray = function (texture, sourceIndex, json)\r\n{\r\n    //  Malformed?\r\n    if (!json['frames'] && !json['textures'])\r\n    {\r\n        console.warn('Invalid Texture Atlas JSON Array given, missing \\'frames\\' and \\'textures\\' array');\r\n        return;\r\n    }\r\n\r\n    //  Add in a __BASE entry (for the entire atlas)\r\n    var source = texture.source[sourceIndex];\r\n\r\n    texture.add('__BASE', sourceIndex, 0, 0, source.width, source.height);\r\n\r\n    //  By this stage frames is a fully parsed array\r\n    var frames = (Array.isArray(json.textures)) ? json.textures[sourceIndex].frames : json.frames;\r\n\r\n    var newFrame;\r\n\r\n    for (var i = 0; i < frames.length; i++)\r\n    {\r\n        var src = frames[i];\r\n\r\n        //  The frame values are the exact coordinates to cut the frame out of the atlas from\r\n        newFrame = texture.add(src.filename, sourceIndex, src.frame.x, src.frame.y, src.frame.w, src.frame.h);\r\n\r\n        //  These are the original (non-trimmed) sprite values\r\n        if (src.trimmed)\r\n        {\r\n            newFrame.setTrim(\r\n                src.sourceSize.w,\r\n                src.sourceSize.h,\r\n                src.spriteSourceSize.x,\r\n                src.spriteSourceSize.y,\r\n                src.spriteSourceSize.w,\r\n                src.spriteSourceSize.h\r\n            );\r\n        }\r\n\r\n        if (src.rotated)\r\n        {\r\n            newFrame.rotated = true;\r\n            newFrame.updateUVsInverted();\r\n        }\r\n\r\n        if (src.anchor)\r\n        {\r\n            newFrame.customPivot = true;\r\n            newFrame.pivotX = src.anchor.x;\r\n            newFrame.pivotY = src.anchor.y;\r\n        }\r\n\r\n        //  Copy over any extra data\r\n        newFrame.customData = Clone(src);\r\n    }\r\n\r\n    //  Copy over any additional data that was in the JSON to Texture.customData\r\n    for (var dataKey in json)\r\n    {\r\n        if (dataKey === 'frames')\r\n        {\r\n            continue;\r\n        }\r\n\r\n        if (Array.isArray(json[dataKey]))\r\n        {\r\n            texture.customData[dataKey] = json[dataKey].slice(0);\r\n        }\r\n        else\r\n        {\r\n            texture.customData[dataKey] = json[dataKey];\r\n        }\r\n    }\r\n\r\n    return texture;\r\n};\r\n\r\nmodule.exports = JSONArray;\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/textures/parsers/JSONArray.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}}],"sources":{"node_modules/phaser/src/textures/parsers/JSONArray.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Clone = require('../../utils/object/Clone');\r\n\r\n/**\r\n * Parses a Texture Atlas JSON Array and adds the Frames to the Texture.\r\n * JSON format expected to match that defined by Texture Packer, with the frames property containing an array of Frames.\r\n *\r\n * @function Phaser.Textures.Parsers.JSONArray\r\n * @memberOf Phaser.Textures.Parsers\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Textures.Texture} texture - The Texture to add the Frames to.\r\n * @param {integer} sourceIndex - The index of the TextureSource.\r\n * @param {object} json - The JSON data.\r\n *\r\n * @return {Phaser.Textures.Texture} The Texture modified by this parser.\r\n */\r\nvar JSONArray = function (texture, sourceIndex, json)\r\n{\r\n    //  Malformed?\r\n    if (!json['frames'] && !json['textures'])\r\n    {\r\n        console.warn('Invalid Texture Atlas JSON Array given, missing \\'frames\\' and \\'textures\\' array');\r\n        return;\r\n    }\r\n\r\n    //  Add in a __BASE entry (for the entire atlas)\r\n    var source = texture.source[sourceIndex];\r\n\r\n    texture.add('__BASE', sourceIndex, 0, 0, source.width, source.height);\r\n\r\n    //  By this stage frames is a fully parsed array\r\n    var frames = (Array.isArray(json.textures)) ? json.textures[sourceIndex].frames : json.frames;\r\n\r\n    var newFrame;\r\n\r\n    for (var i = 0; i < frames.length; i++)\r\n    {\r\n        var src = frames[i];\r\n\r\n        //  The frame values are the exact coordinates to cut the frame out of the atlas from\r\n        newFrame = texture.add(src.filename, sourceIndex, src.frame.x, src.frame.y, src.frame.w, src.frame.h);\r\n\r\n        //  These are the original (non-trimmed) sprite values\r\n        if (src.trimmed)\r\n        {\r\n            newFrame.setTrim(\r\n                src.sourceSize.w,\r\n                src.sourceSize.h,\r\n                src.spriteSourceSize.x,\r\n                src.spriteSourceSize.y,\r\n                src.spriteSourceSize.w,\r\n                src.spriteSourceSize.h\r\n            );\r\n        }\r\n\r\n        if (src.rotated)\r\n        {\r\n            newFrame.rotated = true;\r\n            newFrame.updateUVsInverted();\r\n        }\r\n\r\n        if (src.anchor)\r\n        {\r\n            newFrame.customPivot = true;\r\n            newFrame.pivotX = src.anchor.x;\r\n            newFrame.pivotY = src.anchor.y;\r\n        }\r\n\r\n        //  Copy over any extra data\r\n        newFrame.customData = Clone(src);\r\n    }\r\n\r\n    //  Copy over any additional data that was in the JSON to Texture.customData\r\n    for (var dataKey in json)\r\n    {\r\n        if (dataKey === 'frames')\r\n        {\r\n            continue;\r\n        }\r\n\r\n        if (Array.isArray(json[dataKey]))\r\n        {\r\n            texture.customData[dataKey] = json[dataKey].slice(0);\r\n        }\r\n        else\r\n        {\r\n            texture.customData[dataKey] = json[dataKey];\r\n        }\r\n    }\r\n\r\n    return texture;\r\n};\r\n\r\nmodule.exports = JSONArray;\r\n"},"lineCount":101}},"hash":"d6a839865a9f0a66551ce51a9ce0bb25","cacheData":{"env":{}}}