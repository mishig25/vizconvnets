{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../../utils/object/GetFastValue","loc":{"line":7,"column":27}}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * Gets the tiles in the given rectangular area (in tile coordinates) of the layer.\r\n *\r\n * @function Phaser.Tilemaps.Components.GetTilesWithin\r\n * @since 3.0.0\r\n *\r\n * @param {integer} [tileX=0] - [description]\r\n * @param {integer} [tileY=0] - [description]\r\n * @param {integer} [width=max width based on tileX] - [description]\r\n * @param {integer} [height=max height based on tileY] - [description]\r\n * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n * -1 for an index.\r\n * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide on\r\n * at least one side.\r\n * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n * have at least one interesting face.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {Phaser.Tilemaps.Tile[]} Array of Tile objects.\r\n */\r\nvar GetTilesWithin = function (tileX, tileY, width, height, filteringOptions, layer)\r\n{\r\n    if (tileX === undefined) { tileX = 0; }\r\n    if (tileY === undefined) { tileY = 0; }\r\n    if (width === undefined) { width = layer.width; }\r\n    if (height === undefined) { height = layer.height; }\r\n\r\n    var isNotEmpty = GetFastValue(filteringOptions, 'isNotEmpty', false);\r\n    var isColliding = GetFastValue(filteringOptions, 'isColliding', false);\r\n    var hasInterestingFace = GetFastValue(filteringOptions, 'hasInterestingFace', false);\r\n\r\n    // Clip x, y to top left of map, while shrinking width/height to match.\r\n    if (tileX < 0)\r\n    {\r\n        width += tileX;\r\n        tileX = 0;\r\n    }\r\n    if (tileY < 0)\r\n    {\r\n        height += tileY;\r\n        tileY = 0;\r\n    }\r\n\r\n    // Clip width and height to bottom right of map.\r\n    if (tileX + width > layer.width)\r\n    {\r\n        width = Math.max(layer.width - tileX, 0);\r\n    }\r\n    if (tileY + height > layer.height)\r\n    {\r\n        height = Math.max(layer.height - tileY, 0);\r\n    }\r\n\r\n    var results = [];\r\n\r\n    for (var ty = tileY; ty < tileY + height; ty++)\r\n    {\r\n        for (var tx = tileX; tx < tileX + width; tx++)\r\n        {\r\n            var tile = layer.data[ty][tx];\r\n            if (tile !== null)\r\n            {\r\n                if (isNotEmpty && tile.index === -1) { continue; }\r\n                if (isColliding && !tile.collides) { continue; }\r\n                if (hasInterestingFace && !tile.hasInterestingFace) { continue; }\r\n                results.push(tile);\r\n            }\r\n        }\r\n    }\r\n\r\n    return results;\r\n};\r\n\r\nmodule.exports = GetTilesWithin;\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}}],"sources":{"node_modules/phaser/src/tilemaps/components/GetTilesWithin.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\n\r\n/**\r\n * Gets the tiles in the given rectangular area (in tile coordinates) of the layer.\r\n *\r\n * @function Phaser.Tilemaps.Components.GetTilesWithin\r\n * @since 3.0.0\r\n *\r\n * @param {integer} [tileX=0] - [description]\r\n * @param {integer} [tileY=0] - [description]\r\n * @param {integer} [width=max width based on tileX] - [description]\r\n * @param {integer} [height=max height based on tileY] - [description]\r\n * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n * -1 for an index.\r\n * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide on\r\n * at least one side.\r\n * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n * have at least one interesting face.\r\n * @param {Phaser.Tilemaps.LayerData} layer - The Tilemap Layer to act upon.\r\n * \r\n * @return {Phaser.Tilemaps.Tile[]} Array of Tile objects.\r\n */\r\nvar GetTilesWithin = function (tileX, tileY, width, height, filteringOptions, layer)\r\n{\r\n    if (tileX === undefined) { tileX = 0; }\r\n    if (tileY === undefined) { tileY = 0; }\r\n    if (width === undefined) { width = layer.width; }\r\n    if (height === undefined) { height = layer.height; }\r\n\r\n    var isNotEmpty = GetFastValue(filteringOptions, 'isNotEmpty', false);\r\n    var isColliding = GetFastValue(filteringOptions, 'isColliding', false);\r\n    var hasInterestingFace = GetFastValue(filteringOptions, 'hasInterestingFace', false);\r\n\r\n    // Clip x, y to top left of map, while shrinking width/height to match.\r\n    if (tileX < 0)\r\n    {\r\n        width += tileX;\r\n        tileX = 0;\r\n    }\r\n    if (tileY < 0)\r\n    {\r\n        height += tileY;\r\n        tileY = 0;\r\n    }\r\n\r\n    // Clip width and height to bottom right of map.\r\n    if (tileX + width > layer.width)\r\n    {\r\n        width = Math.max(layer.width - tileX, 0);\r\n    }\r\n    if (tileY + height > layer.height)\r\n    {\r\n        height = Math.max(layer.height - tileY, 0);\r\n    }\r\n\r\n    var results = [];\r\n\r\n    for (var ty = tileY; ty < tileY + height; ty++)\r\n    {\r\n        for (var tx = tileX; tx < tileX + width; tx++)\r\n        {\r\n            var tile = layer.data[ty][tx];\r\n            if (tile !== null)\r\n            {\r\n                if (isNotEmpty && tile.index === -1) { continue; }\r\n                if (isColliding && !tile.collides) { continue; }\r\n                if (hasInterestingFace && !tile.hasInterestingFace) { continue; }\r\n                results.push(tile);\r\n            }\r\n        }\r\n    }\r\n\r\n    return results;\r\n};\r\n\r\nmodule.exports = GetTilesWithin;\r\n"},"lineCount":84}},"hash":"49dd2572015196e322791611b16d45a3","cacheData":{"env":{}}}