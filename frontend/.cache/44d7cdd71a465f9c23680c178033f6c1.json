{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1522260134000},{"name":"@tensorflow/tfjs-core","loc":{"line":3,"column":26}},{"name":"./backend/tfjs_backend","loc":{"line":4,"column":16}},{"name":"./errors","loc":{"line":5,"column":23}},{"name":"./losses","loc":{"line":6,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nvar losses_1 = require(\"./losses\");\nfunction binaryAccuracy(yTrue, yPred) {\n    var threshold = K.scalarTimesArray(K.getScalar(0.5), tfjs_core_1.onesLike(yPred));\n    var yPredThresholded = K.cast(K.greater(yPred, threshold), yTrue.dtype);\n    return K.mean(K.equal(yTrue, yPredThresholded), -1);\n}\nexports.binaryAccuracy = binaryAccuracy;\nfunction categoricalAccuracy(yTrue, yPred) {\n    return K.cast(K.equal(K.argmax(yTrue, -1), K.argmax(yPred, -1)), 'float32');\n}\nexports.categoricalAccuracy = categoricalAccuracy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction categoricalCrossentropy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseCategoricalAccuracy = sparseCategoricalAccuracy;\nfunction sparseCategoricalCrossentropy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction topKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.topKCategoricalAccuracy = topKCategoricalAccuracy;\nfunction sparseTopKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseTopKCategoricalAccuracy = sparseTopKCategoricalAccuracy;\nexports.mse = losses_1.meanSquaredError;\nexports.MSE = losses_1.meanSquaredError;\nexports.mae = losses_1.meanAbsoluteError;\nexports.MAE = losses_1.meanAbsoluteError;\nexports.mape = losses_1.meanAbsolutePercentageError;\nexports.MAPE = losses_1.meanAbsolutePercentageError;\nexports.cosine = losses_1.cosineProximity;\nfunction get(identifier) {\n    var metricsMap = {\n        binaryAccuracy: binaryAccuracy,\n        categoricalAccuracy: categoricalAccuracy,\n        mse: exports.mse,\n        MSE: exports.MSE,\n        mae: exports.mae,\n        MAE: exports.MAE,\n        mape: exports.mape,\n        MAPE: exports.MAPE,\n        cosine: exports.cosine,\n    };\n    if (typeof identifier === 'string' && identifier in metricsMap) {\n        return metricsMap[identifier];\n    }\n    else if (typeof identifier !== 'string' && identifier != null) {\n        return identifier;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unknown metric \" + identifier);\n    }\n}\nexports.get = get;\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/metrics.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-layers/dist/metrics.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nvar losses_1 = require(\"./losses\");\nfunction binaryAccuracy(yTrue, yPred) {\n    var threshold = K.scalarTimesArray(K.getScalar(0.5), tfjs_core_1.onesLike(yPred));\n    var yPredThresholded = K.cast(K.greater(yPred, threshold), yTrue.dtype);\n    return K.mean(K.equal(yTrue, yPredThresholded), -1);\n}\nexports.binaryAccuracy = binaryAccuracy;\nfunction categoricalAccuracy(yTrue, yPred) {\n    return K.cast(K.equal(K.argmax(yTrue, -1), K.argmax(yPred, -1)), 'float32');\n}\nexports.categoricalAccuracy = categoricalAccuracy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction categoricalCrossentropy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseCategoricalAccuracy = sparseCategoricalAccuracy;\nfunction sparseCategoricalCrossentropy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction topKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.topKCategoricalAccuracy = topKCategoricalAccuracy;\nfunction sparseTopKCategoricalAccuracy(yTrue, yPred) {\n    throw new errors_1.NotImplementedError();\n}\nexports.sparseTopKCategoricalAccuracy = sparseTopKCategoricalAccuracy;\nexports.mse = losses_1.meanSquaredError;\nexports.MSE = losses_1.meanSquaredError;\nexports.mae = losses_1.meanAbsoluteError;\nexports.MAE = losses_1.meanAbsoluteError;\nexports.mape = losses_1.meanAbsolutePercentageError;\nexports.MAPE = losses_1.meanAbsolutePercentageError;\nexports.cosine = losses_1.cosineProximity;\nfunction get(identifier) {\n    var metricsMap = {\n        binaryAccuracy: binaryAccuracy,\n        categoricalAccuracy: categoricalAccuracy,\n        mse: exports.mse,\n        MSE: exports.MSE,\n        mae: exports.mae,\n        MAE: exports.MAE,\n        mape: exports.mape,\n        MAPE: exports.MAPE,\n        cosine: exports.cosine,\n    };\n    if (typeof identifier === 'string' && identifier in metricsMap) {\n        return metricsMap[identifier];\n    }\n    else if (typeof identifier !== 'string' && identifier != null) {\n        return identifier;\n    }\n    else {\n        throw new errors_1.ValueError(\"Unknown metric \" + identifier);\n    }\n}\nexports.get = get;\n"},"lineCount":71}},"hash":"e25535af5528069eeb4887ae352a4e13","cacheData":{"env":{}}}