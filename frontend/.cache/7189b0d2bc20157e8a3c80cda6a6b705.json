{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../display/canvas/CanvasPool","loc":{"line":7,"column":25}},{"name":"../utils/Class","loc":{"line":8,"column":20}},{"name":"../display/color/Color","loc":{"line":9,"column":20}},{"name":"eventemitter3","loc":{"line":10,"column":27}},{"name":"../create/GenerateTexture","loc":{"line":11,"column":30}},{"name":"../utils/object/GetValue","loc":{"line":12,"column":23}},{"name":"./parsers","loc":{"line":13,"column":21}},{"name":"./Texture","loc":{"line":14,"column":22}}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar CanvasPool = require('../display/canvas/CanvasPool');\r\nvar Class = require('../utils/Class');\r\nvar Color = require('../display/color/Color');\r\nvar EventEmitter = require('eventemitter3');\r\nvar GenerateTexture = require('../create/GenerateTexture');\r\nvar GetValue = require('../utils/object/GetValue');\r\nvar Parser = require('./parsers');\r\nvar Texture = require('./Texture');\r\n\r\n/**\r\n * @callback EachTextureCallback\r\n *\r\n * @param {Phaser.Textures.Texture} texture - [description]\r\n * @param {...*} [arguments] - Additional arguments that will be passed to the callback, after the child.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Textures are managed by the global TextureManager. This is a singleton class that is\r\n * responsible for creating and delivering Textures and their corresponding Frames to Game Objects.\r\n *\r\n * Sprites and other Game Objects get the texture data they need from the TextureManager.\r\n *\r\n * Access it via `scene.textures`.\r\n *\r\n * @class TextureManager\r\n * @extends EventEmitter\r\n * @memberOf Phaser.Textures\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - [description]\r\n */\r\nvar TextureManager = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function TextureManager (game)\r\n    {\r\n        EventEmitter.call(this);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#game\r\n         * @type {Phaser.Game}\r\n         * @since 3.0.0\r\n         */\r\n        this.game = game;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#name\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.name = 'TextureManager';\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#list\r\n         * @type {object}\r\n         * @default {}\r\n         * @since 3.0.0\r\n         */\r\n        this.list = {};\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#_tempCanvas\r\n         * @type {HTMLCanvasElement}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._tempCanvas = CanvasPool.create2D(this, 1, 1);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#_tempContext\r\n         * @type {CanvasRenderingContext2D}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._tempContext = this._tempCanvas.getContext('2d');\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#_pending\r\n         * @type {integer}\r\n         * @private\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this._pending = 0;\r\n\r\n        game.events.once('boot', this.boot, this);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Textures.TextureManager#boot\r\n     * @since 3.0.0\r\n     */\r\n    boot: function ()\r\n    {\r\n        this._pending = 2;\r\n\r\n        this.on('onload', this.updatePending, this);\r\n        this.on('onerror', this.updatePending, this);\r\n\r\n        this.addBase64('__DEFAULT', this.game.config.defaultImage);\r\n        this.addBase64('__MISSING', this.game.config.missingImage);\r\n\r\n        this.game.events.once('destroy', this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Textures.TextureManager#updatePending\r\n     * @since 3.0.0\r\n     */\r\n    updatePending: function ()\r\n    {\r\n        this._pending--;\r\n\r\n        if (this._pending === 0)\r\n        {\r\n            this.off('onload');\r\n            this.off('onerror');\r\n\r\n            this.game.events.emit('ready');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a new Texture to the Texture Manager created from the given Base64 encoded data.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addBase64\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {*} data - The Base64 encoded data.\r\n     */\r\n    addBase64: function (key, data)\r\n    {\r\n        var _this = this;\r\n\r\n        var image = new Image();\r\n\r\n        image.onerror = function ()\r\n        {\r\n            _this.emit('onerror', key);\r\n        };\r\n\r\n        image.onload = function ()\r\n        {\r\n            var texture = _this.create(key, image);\r\n\r\n            Parser.Image(texture, 0);\r\n\r\n            _this.emit('onload', key, texture);\r\n        };\r\n\r\n        image.src = data;\r\n    },\r\n\r\n    /**\r\n     * Adds a new Texture to the Texture Manager created from the given Image element.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addImage\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {HTMLImageElement} [dataSource] - An optional data Image element.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addImage: function (key, source, dataSource)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        Parser.Image(texture, 0);\r\n\r\n        if (dataSource)\r\n        {\r\n            texture.setDataSource(dataSource);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture using the given config values.\r\n     * Generated textures consist of a Canvas element to which the texture data is drawn.\r\n     * See the Phaser.Create function for the more direct way to create textures.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#generate\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {object} config - [description]\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    generate: function (key, config)\r\n    {\r\n        var canvas = CanvasPool.create(this, 1, 1);\r\n\r\n        config.canvas = canvas;\r\n\r\n        GenerateTexture(config);\r\n\r\n        return this.addCanvas(key, canvas);\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture using a blank Canvas element of the size given.\r\n     *\r\n     * Canvas elements are automatically pooled and calling this method will\r\n     * extract a free canvas from the CanvasPool, or create one if none are available.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#createCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {integer} width - The width of the Canvas element.\r\n     * @param {integer} height - The height of the Canvas element.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    createCanvas: function (key, width, height)\r\n    {\r\n        if (width === undefined) { width = 256; }\r\n        if (height === undefined) { height = 256; }\r\n\r\n        var canvas = CanvasPool.create(this, width, height);\r\n\r\n        return this.addCanvas(key, canvas);\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture object from an existing Canvas element and adds\r\n     * it to this Texture Manager.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLCanvasElement} source - The Canvas element to form the base of the new Texture.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addCanvas: function (key, source)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        Parser.Canvas(texture, 0);\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a new Texture Atlas to this Texture Manager.\r\n     * It can accept either JSON Array or JSON Hash formats, as exported by Texture Packer and similar software.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlas: function (key, source, data)\r\n    {\r\n        //  New Texture Packer format?\r\n        if (Array.isArray(data.textures) || Array.isArray(data.frames))\r\n        {\r\n            return this.addAtlasJSONArray(key, source, data);\r\n        }\r\n        else\r\n        {\r\n            return this.addAtlasJSONHash(key, source, data);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager.\r\n     * The frame data of the atlas must be stored in an Array within the JSON.\r\n     * This is known as a JSON Array in software such as Texture Packer.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasJSONArray\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasJSONArray: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            var singleAtlasFile = (data.length === 1); // multi-pack with one atlas file for all images\r\n            for (var i = 0; i < texture.source.length; i++)\r\n            {\r\n                var atlasData = singleAtlasFile ? data[0] : data[i];\r\n                Parser.JSONArray(texture, i, atlasData);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.JSONArray(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager.\r\n     * The frame data of the atlas must be stored in an Object within the JSON.\r\n     * This is known as a JSON Hash in software such as Texture Packer.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasJSONHash\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasJSONHash: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            for (var i = 0; i < data.length; i++)\r\n            {\r\n                Parser.JSONHash(texture, i, data[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.JSONHash(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Unity Texture Atlas to this Texture Manager.\r\n     * The data must be in the form of a Unity YAML file.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addUnityAtlas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addUnityAtlas: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        Parser.UnityYAML(texture, 0, data);\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Sprite Sheet to this Texture Manager.\r\n     *\r\n     * In Phaser terminology a Sprite Sheet is a texture containing different frames, but each frame is the exact\r\n     * same size and cannot be trimmed or rotated.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addSpriteSheet\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} config - The configuration object for this Sprite Sheet.\r\n     * @param {integer} config.frameWidth - The fixed width of each frame.\r\n     * @param {integer} [config.frameHeight] - The fixed height of each frame. If not set it will use the frameWidth as the height.\r\n     * @param {integer} [config.startFrame=0] - Skip a number of frames. Useful when there are multiple sprite sheets in one Texture.\r\n     * @param {integer} [config.endFrame=-1] - The total number of frames to extract from the Sprite Sheet. The default value of -1 means \"extract all frames\".\r\n     * @param {integer} [config.margin=0] - If the frames have been drawn with a margin, specify the amount here.\r\n     * @param {integer} [config.spacing=0] - If the frames have been drawn with spacing between them, specify the amount here.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addSpriteSheet: function (key, source, config)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        var width = texture.source[0].width;\r\n        var height = texture.source[0].height;\r\n\r\n        Parser.SpriteSheet(texture, 0, 0, 0, width, height, config);\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Sprite Sheet to this Texture Manager, where the Sprite Sheet exists as a Frame within a Texture Atlas.\r\n     *\r\n     * In Phaser terminology a Sprite Sheet is a texture containing different frames, but each frame is the exact\r\n     * same size and cannot be trimmed or rotated.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addSpriteSheetFromAtlas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {object} config - The configuration object for this Sprite Sheet.\r\n     * @param {string} config.atlas - The key of the Texture Atlas in which this Sprite Sheet can be found.\r\n     * @param {string} config.frame - The key of the Texture Atlas Frame in which this Sprite Sheet can be found.\r\n     * @param {integer} config.frameWidth - The fixed width of each frame.\r\n     * @param {integer} [config.frameHeight] - The fixed height of each frame. If not set it will use the frameWidth as the height.\r\n     * @param {integer} [config.startFrame=0] - Skip a number of frames. Useful when there are multiple sprite sheets in one Texture.\r\n     * @param {integer} [config.endFrame=-1] - The total number of frames to extract from the Sprite Sheet. The default value of -1 means \"extract all frames\".\r\n     * @param {integer} [config.margin=0] - If the frames have been drawn with a margin, specify the amount here.\r\n     * @param {integer} [config.spacing=0] - If the frames have been drawn with spacing between them, specify the amount here.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addSpriteSheetFromAtlas: function (key, config)\r\n    {\r\n        var atlasKey = GetValue(config, 'atlas', null);\r\n        var atlasFrame = GetValue(config, 'frame', null);\r\n\r\n        if (!atlasKey || !atlasFrame)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var atlas = this.get(atlasKey);\r\n        var sheet = atlas.get(atlasFrame);\r\n\r\n        if (sheet)\r\n        {\r\n            var texture = this.create(key, sheet.source.image);\r\n\r\n            if (sheet.trimmed)\r\n            {\r\n                //  If trimmed we need to help the parser adjust\r\n                Parser.SpriteSheetFromAtlas(texture, sheet, config);\r\n            }\r\n            else\r\n            {\r\n                Parser.SpriteSheet(texture, 0, sheet.cutX, sheet.cutY, sheet.cutWidth, sheet.cutHeight, config);\r\n            }\r\n\r\n            return texture;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager, where the atlas data is given\r\n     * in the Starling XML format.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasStarlingXML\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas XML data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasStarlingXML: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            for (var i = 0; i < data.length; i++)\r\n            {\r\n                Parser.StarlingXML(texture, i, data[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.StarlingXML(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager, where the atlas data is given\r\n     * in the Pyxel JSON format.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasPyxel\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas XML data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasPyxel: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            for (var i = 0; i < data.length; i++)\r\n            {\r\n                Parser.Pyxel(texture, i, data[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.Pyxel(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture using the given source and dimensions.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#create\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {integer} width - The width of the Texture.\r\n     * @param {integer} height - The height of the Texture.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    create: function (key, source, width, height)\r\n    {\r\n        var texture = new Texture(this, key, source, width, height);\r\n\r\n        this.list[key] = texture;\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Checks the given key to see if a Texture using it exists within this Texture Manager.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#exists\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     *\r\n     * @return {boolean} Returns `true` if a Texture matching the given key exists in this Texture Manager.\r\n     */\r\n    exists: function (key)\r\n    {\r\n        return (this.list.hasOwnProperty(key));\r\n    },\r\n\r\n    /**\r\n     * Returns a Texture from the Texture Manager that matches the given key.\r\n     * If the key is undefined it will return the `__DEFAULT` Texture.\r\n     * If the key is given, but not found, it will return the `__MISSING` Texture.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#get\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    get: function (key)\r\n    {\r\n        if (key === undefined) { key = '__DEFAULT'; }\r\n\r\n        if (this.list[key])\r\n        {\r\n            return this.list[key];\r\n        }\r\n        else\r\n        {\r\n            return this.list['__MISSING'];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Takes a Texture key and Frame name and returns a clone of that Frame if found.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#cloneFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame to be cloned.\r\n     *\r\n     * @return {Phaser.Textures.Frame} A Clone of the given Frame.\r\n     */\r\n    cloneFrame: function (key, frame)\r\n    {\r\n        if (this.list[key])\r\n        {\r\n            return this.list[key].get(frame).clone();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Takes a Texture key and Frame name and returns a reference to that Frame, if found.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#getFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame.\r\n     *\r\n     * @return {Phaser.Textures.Frame} A Texture Frame object.\r\n     */\r\n    getFrame: function (key, frame)\r\n    {\r\n        if (this.list[key])\r\n        {\r\n            return this.list[key].get(frame);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns an array with all of the keys of all Textures in this Texture Manager.\r\n     * The output array will exclude the `__DEFAULT` and `__MISSING` keys.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#getTextureKeys\r\n     * @since 3.0.0\r\n     *\r\n     * @return {string[]} An array containing all of the Texture keys stored in this Texture Manager.\r\n     */\r\n    getTextureKeys: function ()\r\n    {\r\n        var output = [];\r\n\r\n        for (var key in this.list)\r\n        {\r\n            if (key !== '__DEFAULT' && key !== '__MISSING')\r\n            {\r\n                output.push(key);\r\n            }\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Given a Texture and an `x` and `y` coordinate this method will return a new\r\n     * Color object that has been populated with the color and alpha values of the pixel\r\n     * at that location in the Texture.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#getPixel\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} x - The x coordinate of the pixel within the Texture.\r\n     * @param {integer} y - The y coordinate of the pixel within the Texture.\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame.\r\n     *\r\n     * @return {?Phaser.Display.Color} A Color object populated with the color values of the requested pixel,\r\n     * or `null` if the coordinates were out of bounds.\r\n     */\r\n    getPixel: function (x, y, key, frame)\r\n    {\r\n        var textureFrame = this.getFrame(key, frame);\r\n\r\n        if (textureFrame)\r\n        {\r\n            var source = textureFrame.source.image;\r\n\r\n            if (x >= 0 && x <= source.width && y >= 0 && y <= source.height)\r\n            {\r\n                x += textureFrame.cutX;\r\n                y += textureFrame.cutY;\r\n\r\n                // if (textureFrame.trimmed)\r\n                // {\r\n                //     x -= this.sprite.texture.trim.x;\r\n                //     y -= this.sprite.texture.trim.y;\r\n                // }\r\n\r\n                var context = this._tempContext;\r\n\r\n                context.clearRect(0, 0, 1, 1);\r\n                context.drawImage(source, x, y, 1, 1, 0, 0, 1, 1);\r\n\r\n                var rgb = context.getImageData(0, 0, 1, 1);\r\n\r\n                return new Color(rgb.data[0], rgb.data[1], rgb.data[2], rgb.data[3]);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Sets the given Game Objects `texture` and `frame` properties so that it uses\r\n     * the Texture and Frame specified in the `key` and `frame` arguments to this method.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} gameObject - [description]\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} The Game Object the texture was set on.\r\n     */\r\n    setTexture: function (gameObject, key, frame)\r\n    {\r\n        if (this.list[key])\r\n        {\r\n            gameObject.texture = this.list[key];\r\n            gameObject.frame = gameObject.texture.get(frame);\r\n        }\r\n\r\n        return gameObject;\r\n    },\r\n\r\n    /**\r\n     * Passes all Textures to the given callback.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#each\r\n     * @since 3.0.0\r\n     *\r\n     * @param {EachTextureCallback} callback - The callback function to be sent the Textures.\r\n     * @param {object} scope - The value to use as `this` when executing the callback.\r\n     * @param {...*} [arguments] - Additional arguments that will be passed to the callback, after the child.\r\n     */\r\n    each: function (callback, scope)\r\n    {\r\n        var args = [ null ];\r\n\r\n        for (var i = 1; i < arguments.length; i++)\r\n        {\r\n            args.push(arguments[i]);\r\n        }\r\n\r\n        for (var texture in this.list)\r\n        {\r\n            args[0] = this.list[texture];\r\n\r\n            callback.apply(scope, args);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Destroys the Texture Manager and all Textures stored within it.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        for (var texture in this.list)\r\n        {\r\n            this.list[texture].destroy();\r\n        }\r\n\r\n        this.list = {};\r\n\r\n        this.game = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = TextureManager;\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/phaser/src/textures/TextureManager.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}}],"sources":{"node_modules/phaser/src/textures/TextureManager.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar CanvasPool = require('../display/canvas/CanvasPool');\r\nvar Class = require('../utils/Class');\r\nvar Color = require('../display/color/Color');\r\nvar EventEmitter = require('eventemitter3');\r\nvar GenerateTexture = require('../create/GenerateTexture');\r\nvar GetValue = require('../utils/object/GetValue');\r\nvar Parser = require('./parsers');\r\nvar Texture = require('./Texture');\r\n\r\n/**\r\n * @callback EachTextureCallback\r\n *\r\n * @param {Phaser.Textures.Texture} texture - [description]\r\n * @param {...*} [arguments] - Additional arguments that will be passed to the callback, after the child.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Textures are managed by the global TextureManager. This is a singleton class that is\r\n * responsible for creating and delivering Textures and their corresponding Frames to Game Objects.\r\n *\r\n * Sprites and other Game Objects get the texture data they need from the TextureManager.\r\n *\r\n * Access it via `scene.textures`.\r\n *\r\n * @class TextureManager\r\n * @extends EventEmitter\r\n * @memberOf Phaser.Textures\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Game} game - [description]\r\n */\r\nvar TextureManager = new Class({\r\n\r\n    Extends: EventEmitter,\r\n\r\n    initialize:\r\n\r\n    function TextureManager (game)\r\n    {\r\n        EventEmitter.call(this);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#game\r\n         * @type {Phaser.Game}\r\n         * @since 3.0.0\r\n         */\r\n        this.game = game;\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#name\r\n         * @type {string}\r\n         * @since 3.0.0\r\n         */\r\n        this.name = 'TextureManager';\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#list\r\n         * @type {object}\r\n         * @default {}\r\n         * @since 3.0.0\r\n         */\r\n        this.list = {};\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#_tempCanvas\r\n         * @type {HTMLCanvasElement}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._tempCanvas = CanvasPool.create2D(this, 1, 1);\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#_tempContext\r\n         * @type {CanvasRenderingContext2D}\r\n         * @private\r\n         * @since 3.0.0\r\n         */\r\n        this._tempContext = this._tempCanvas.getContext('2d');\r\n\r\n        /**\r\n         * [description]\r\n         *\r\n         * @name Phaser.Textures.TextureManager#_pending\r\n         * @type {integer}\r\n         * @private\r\n         * @default 0\r\n         * @since 3.0.0\r\n         */\r\n        this._pending = 0;\r\n\r\n        game.events.once('boot', this.boot, this);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Textures.TextureManager#boot\r\n     * @since 3.0.0\r\n     */\r\n    boot: function ()\r\n    {\r\n        this._pending = 2;\r\n\r\n        this.on('onload', this.updatePending, this);\r\n        this.on('onerror', this.updatePending, this);\r\n\r\n        this.addBase64('__DEFAULT', this.game.config.defaultImage);\r\n        this.addBase64('__MISSING', this.game.config.missingImage);\r\n\r\n        this.game.events.once('destroy', this.destroy, this);\r\n    },\r\n\r\n    /**\r\n     * [description]\r\n     *\r\n     * @method Phaser.Textures.TextureManager#updatePending\r\n     * @since 3.0.0\r\n     */\r\n    updatePending: function ()\r\n    {\r\n        this._pending--;\r\n\r\n        if (this._pending === 0)\r\n        {\r\n            this.off('onload');\r\n            this.off('onerror');\r\n\r\n            this.game.events.emit('ready');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a new Texture to the Texture Manager created from the given Base64 encoded data.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addBase64\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {*} data - The Base64 encoded data.\r\n     */\r\n    addBase64: function (key, data)\r\n    {\r\n        var _this = this;\r\n\r\n        var image = new Image();\r\n\r\n        image.onerror = function ()\r\n        {\r\n            _this.emit('onerror', key);\r\n        };\r\n\r\n        image.onload = function ()\r\n        {\r\n            var texture = _this.create(key, image);\r\n\r\n            Parser.Image(texture, 0);\r\n\r\n            _this.emit('onload', key, texture);\r\n        };\r\n\r\n        image.src = data;\r\n    },\r\n\r\n    /**\r\n     * Adds a new Texture to the Texture Manager created from the given Image element.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addImage\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {HTMLImageElement} [dataSource] - An optional data Image element.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addImage: function (key, source, dataSource)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        Parser.Image(texture, 0);\r\n\r\n        if (dataSource)\r\n        {\r\n            texture.setDataSource(dataSource);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture using the given config values.\r\n     * Generated textures consist of a Canvas element to which the texture data is drawn.\r\n     * See the Phaser.Create function for the more direct way to create textures.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#generate\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {object} config - [description]\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    generate: function (key, config)\r\n    {\r\n        var canvas = CanvasPool.create(this, 1, 1);\r\n\r\n        config.canvas = canvas;\r\n\r\n        GenerateTexture(config);\r\n\r\n        return this.addCanvas(key, canvas);\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture using a blank Canvas element of the size given.\r\n     *\r\n     * Canvas elements are automatically pooled and calling this method will\r\n     * extract a free canvas from the CanvasPool, or create one if none are available.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#createCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {integer} width - The width of the Canvas element.\r\n     * @param {integer} height - The height of the Canvas element.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    createCanvas: function (key, width, height)\r\n    {\r\n        if (width === undefined) { width = 256; }\r\n        if (height === undefined) { height = 256; }\r\n\r\n        var canvas = CanvasPool.create(this, width, height);\r\n\r\n        return this.addCanvas(key, canvas);\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture object from an existing Canvas element and adds\r\n     * it to this Texture Manager.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addCanvas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLCanvasElement} source - The Canvas element to form the base of the new Texture.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addCanvas: function (key, source)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        Parser.Canvas(texture, 0);\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a new Texture Atlas to this Texture Manager.\r\n     * It can accept either JSON Array or JSON Hash formats, as exported by Texture Packer and similar software.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlas: function (key, source, data)\r\n    {\r\n        //  New Texture Packer format?\r\n        if (Array.isArray(data.textures) || Array.isArray(data.frames))\r\n        {\r\n            return this.addAtlasJSONArray(key, source, data);\r\n        }\r\n        else\r\n        {\r\n            return this.addAtlasJSONHash(key, source, data);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager.\r\n     * The frame data of the atlas must be stored in an Array within the JSON.\r\n     * This is known as a JSON Array in software such as Texture Packer.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasJSONArray\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasJSONArray: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            var singleAtlasFile = (data.length === 1); // multi-pack with one atlas file for all images\r\n            for (var i = 0; i < texture.source.length; i++)\r\n            {\r\n                var atlasData = singleAtlasFile ? data[0] : data[i];\r\n                Parser.JSONArray(texture, i, atlasData);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.JSONArray(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager.\r\n     * The frame data of the atlas must be stored in an Object within the JSON.\r\n     * This is known as a JSON Hash in software such as Texture Packer.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasJSONHash\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasJSONHash: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            for (var i = 0; i < data.length; i++)\r\n            {\r\n                Parser.JSONHash(texture, i, data[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.JSONHash(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Unity Texture Atlas to this Texture Manager.\r\n     * The data must be in the form of a Unity YAML file.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addUnityAtlas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addUnityAtlas: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        Parser.UnityYAML(texture, 0, data);\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Sprite Sheet to this Texture Manager.\r\n     *\r\n     * In Phaser terminology a Sprite Sheet is a texture containing different frames, but each frame is the exact\r\n     * same size and cannot be trimmed or rotated.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addSpriteSheet\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} config - The configuration object for this Sprite Sheet.\r\n     * @param {integer} config.frameWidth - The fixed width of each frame.\r\n     * @param {integer} [config.frameHeight] - The fixed height of each frame. If not set it will use the frameWidth as the height.\r\n     * @param {integer} [config.startFrame=0] - Skip a number of frames. Useful when there are multiple sprite sheets in one Texture.\r\n     * @param {integer} [config.endFrame=-1] - The total number of frames to extract from the Sprite Sheet. The default value of -1 means \"extract all frames\".\r\n     * @param {integer} [config.margin=0] - If the frames have been drawn with a margin, specify the amount here.\r\n     * @param {integer} [config.spacing=0] - If the frames have been drawn with spacing between them, specify the amount here.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addSpriteSheet: function (key, source, config)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        var width = texture.source[0].width;\r\n        var height = texture.source[0].height;\r\n\r\n        Parser.SpriteSheet(texture, 0, 0, 0, width, height, config);\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Sprite Sheet to this Texture Manager, where the Sprite Sheet exists as a Frame within a Texture Atlas.\r\n     *\r\n     * In Phaser terminology a Sprite Sheet is a texture containing different frames, but each frame is the exact\r\n     * same size and cannot be trimmed or rotated.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addSpriteSheetFromAtlas\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {object} config - The configuration object for this Sprite Sheet.\r\n     * @param {string} config.atlas - The key of the Texture Atlas in which this Sprite Sheet can be found.\r\n     * @param {string} config.frame - The key of the Texture Atlas Frame in which this Sprite Sheet can be found.\r\n     * @param {integer} config.frameWidth - The fixed width of each frame.\r\n     * @param {integer} [config.frameHeight] - The fixed height of each frame. If not set it will use the frameWidth as the height.\r\n     * @param {integer} [config.startFrame=0] - Skip a number of frames. Useful when there are multiple sprite sheets in one Texture.\r\n     * @param {integer} [config.endFrame=-1] - The total number of frames to extract from the Sprite Sheet. The default value of -1 means \"extract all frames\".\r\n     * @param {integer} [config.margin=0] - If the frames have been drawn with a margin, specify the amount here.\r\n     * @param {integer} [config.spacing=0] - If the frames have been drawn with spacing between them, specify the amount here.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addSpriteSheetFromAtlas: function (key, config)\r\n    {\r\n        var atlasKey = GetValue(config, 'atlas', null);\r\n        var atlasFrame = GetValue(config, 'frame', null);\r\n\r\n        if (!atlasKey || !atlasFrame)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var atlas = this.get(atlasKey);\r\n        var sheet = atlas.get(atlasFrame);\r\n\r\n        if (sheet)\r\n        {\r\n            var texture = this.create(key, sheet.source.image);\r\n\r\n            if (sheet.trimmed)\r\n            {\r\n                //  If trimmed we need to help the parser adjust\r\n                Parser.SpriteSheetFromAtlas(texture, sheet, config);\r\n            }\r\n            else\r\n            {\r\n                Parser.SpriteSheet(texture, 0, sheet.cutX, sheet.cutY, sheet.cutWidth, sheet.cutHeight, config);\r\n            }\r\n\r\n            return texture;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager, where the atlas data is given\r\n     * in the Starling XML format.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasStarlingXML\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas XML data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasStarlingXML: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            for (var i = 0; i < data.length; i++)\r\n            {\r\n                Parser.StarlingXML(texture, i, data[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.StarlingXML(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Adds a Texture Atlas to this Texture Manager, where the atlas data is given\r\n     * in the Pyxel JSON format.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#addAtlasPyxel\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {object} data - The Texture Atlas XML data.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    addAtlasPyxel: function (key, source, data)\r\n    {\r\n        var texture = this.create(key, source);\r\n\r\n        if (Array.isArray(data))\r\n        {\r\n            for (var i = 0; i < data.length; i++)\r\n            {\r\n                Parser.Pyxel(texture, i, data[i]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Parser.Pyxel(texture, 0, data);\r\n        }\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Creates a new Texture using the given source and dimensions.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#create\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {HTMLImageElement} source - The source Image element.\r\n     * @param {integer} width - The width of the Texture.\r\n     * @param {integer} height - The height of the Texture.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    create: function (key, source, width, height)\r\n    {\r\n        var texture = new Texture(this, key, source, width, height);\r\n\r\n        this.list[key] = texture;\r\n\r\n        return texture;\r\n    },\r\n\r\n    /**\r\n     * Checks the given key to see if a Texture using it exists within this Texture Manager.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#exists\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     *\r\n     * @return {boolean} Returns `true` if a Texture matching the given key exists in this Texture Manager.\r\n     */\r\n    exists: function (key)\r\n    {\r\n        return (this.list.hasOwnProperty(key));\r\n    },\r\n\r\n    /**\r\n     * Returns a Texture from the Texture Manager that matches the given key.\r\n     * If the key is undefined it will return the `__DEFAULT` Texture.\r\n     * If the key is given, but not found, it will return the `__MISSING` Texture.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#get\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     *\r\n     * @return {Phaser.Textures.Texture} The Texture that was created.\r\n     */\r\n    get: function (key)\r\n    {\r\n        if (key === undefined) { key = '__DEFAULT'; }\r\n\r\n        if (this.list[key])\r\n        {\r\n            return this.list[key];\r\n        }\r\n        else\r\n        {\r\n            return this.list['__MISSING'];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Takes a Texture key and Frame name and returns a clone of that Frame if found.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#cloneFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame to be cloned.\r\n     *\r\n     * @return {Phaser.Textures.Frame} A Clone of the given Frame.\r\n     */\r\n    cloneFrame: function (key, frame)\r\n    {\r\n        if (this.list[key])\r\n        {\r\n            return this.list[key].get(frame).clone();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Takes a Texture key and Frame name and returns a reference to that Frame, if found.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#getFrame\r\n     * @since 3.0.0\r\n     *\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame.\r\n     *\r\n     * @return {Phaser.Textures.Frame} A Texture Frame object.\r\n     */\r\n    getFrame: function (key, frame)\r\n    {\r\n        if (this.list[key])\r\n        {\r\n            return this.list[key].get(frame);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns an array with all of the keys of all Textures in this Texture Manager.\r\n     * The output array will exclude the `__DEFAULT` and `__MISSING` keys.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#getTextureKeys\r\n     * @since 3.0.0\r\n     *\r\n     * @return {string[]} An array containing all of the Texture keys stored in this Texture Manager.\r\n     */\r\n    getTextureKeys: function ()\r\n    {\r\n        var output = [];\r\n\r\n        for (var key in this.list)\r\n        {\r\n            if (key !== '__DEFAULT' && key !== '__MISSING')\r\n            {\r\n                output.push(key);\r\n            }\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Given a Texture and an `x` and `y` coordinate this method will return a new\r\n     * Color object that has been populated with the color and alpha values of the pixel\r\n     * at that location in the Texture.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#getPixel\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} x - The x coordinate of the pixel within the Texture.\r\n     * @param {integer} y - The y coordinate of the pixel within the Texture.\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame.\r\n     *\r\n     * @return {?Phaser.Display.Color} A Color object populated with the color values of the requested pixel,\r\n     * or `null` if the coordinates were out of bounds.\r\n     */\r\n    getPixel: function (x, y, key, frame)\r\n    {\r\n        var textureFrame = this.getFrame(key, frame);\r\n\r\n        if (textureFrame)\r\n        {\r\n            var source = textureFrame.source.image;\r\n\r\n            if (x >= 0 && x <= source.width && y >= 0 && y <= source.height)\r\n            {\r\n                x += textureFrame.cutX;\r\n                y += textureFrame.cutY;\r\n\r\n                // if (textureFrame.trimmed)\r\n                // {\r\n                //     x -= this.sprite.texture.trim.x;\r\n                //     y -= this.sprite.texture.trim.y;\r\n                // }\r\n\r\n                var context = this._tempContext;\r\n\r\n                context.clearRect(0, 0, 1, 1);\r\n                context.drawImage(source, x, y, 1, 1, 0, 0, 1, 1);\r\n\r\n                var rgb = context.getImageData(0, 0, 1, 1);\r\n\r\n                return new Color(rgb.data[0], rgb.data[1], rgb.data[2], rgb.data[3]);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Sets the given Game Objects `texture` and `frame` properties so that it uses\r\n     * the Texture and Frame specified in the `key` and `frame` arguments to this method.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#setTexture\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.GameObject} gameObject - [description]\r\n     * @param {string} key - The unique string-based key of the Texture.\r\n     * @param {(string|integer)} frame - The string or index of the Frame.\r\n     *\r\n     * @return {Phaser.GameObjects.GameObject} The Game Object the texture was set on.\r\n     */\r\n    setTexture: function (gameObject, key, frame)\r\n    {\r\n        if (this.list[key])\r\n        {\r\n            gameObject.texture = this.list[key];\r\n            gameObject.frame = gameObject.texture.get(frame);\r\n        }\r\n\r\n        return gameObject;\r\n    },\r\n\r\n    /**\r\n     * Passes all Textures to the given callback.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#each\r\n     * @since 3.0.0\r\n     *\r\n     * @param {EachTextureCallback} callback - The callback function to be sent the Textures.\r\n     * @param {object} scope - The value to use as `this` when executing the callback.\r\n     * @param {...*} [arguments] - Additional arguments that will be passed to the callback, after the child.\r\n     */\r\n    each: function (callback, scope)\r\n    {\r\n        var args = [ null ];\r\n\r\n        for (var i = 1; i < arguments.length; i++)\r\n        {\r\n            args.push(arguments[i]);\r\n        }\r\n\r\n        for (var texture in this.list)\r\n        {\r\n            args[0] = this.list[texture];\r\n\r\n            callback.apply(scope, args);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Destroys the Texture Manager and all Textures stored within it.\r\n     *\r\n     * @method Phaser.Textures.TextureManager#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        for (var texture in this.list)\r\n        {\r\n            this.list[texture].destroy();\r\n        }\r\n\r\n        this.list = {};\r\n\r\n        this.game = null;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = TextureManager;\r\n"},"lineCount":790}},"hash":"92c66ed2bf4b75c4defd570f29a5d9dd","cacheData":{"env":{}}}