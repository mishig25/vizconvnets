{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../geometry/Vertices","loc":{"line":15,"column":23}},{"name":"../geometry/Vector","loc":{"line":16,"column":21}},{"name":"../core/Sleeping","loc":{"line":17,"column":23}},{"name":"../core/Common","loc":{"line":18,"column":21}},{"name":"../geometry/Bounds","loc":{"line":19,"column":21}},{"name":"../geometry/Axes","loc":{"line":20,"column":19}}],"generated":{"js":"/**\r\n* The `Matter.Body` module contains methods for creating and manipulating body models.\r\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\r\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n\r\n* @class Body\r\n*/\r\n\r\nvar Body = {};\r\n\r\nmodule.exports = Body;\r\n\r\nvar Vertices = require('../geometry/Vertices');\r\nvar Vector = require('../geometry/Vector');\r\nvar Sleeping = require('../core/Sleeping');\r\nvar Common = require('../core/Common');\r\nvar Bounds = require('../geometry/Bounds');\r\nvar Axes = require('../geometry/Axes');\r\n\r\n(function() {\r\n\r\n    Body._inertiaScale = 4;\r\n    Body._nextCollidingGroupId = 1;\r\n    Body._nextNonCollidingGroupId = -1;\r\n    Body._nextCategory = 0x0001;\r\n\r\n    /**\r\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * Vertices must be specified in clockwise order.\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {body} body\r\n     */\r\n    Body.create = function(options) {\r\n        var defaults = {\r\n            id: Common.nextId(),\r\n            type: 'body',\r\n            label: 'Body',\r\n            gameObject: null,\r\n            parts: [],\r\n            plugin: {},\r\n            angle: 0,\r\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\r\n            position: { x: 0, y: 0 },\r\n            force: { x: 0, y: 0 },\r\n            torque: 0,\r\n            positionImpulse: { x: 0, y: 0 },\r\n            previousPositionImpulse: { x: 0, y: 0 },\r\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\r\n            totalContacts: 0,\r\n            speed: 0,\r\n            angularSpeed: 0,\r\n            velocity: { x: 0, y: 0 },\r\n            angularVelocity: 0,\r\n            isSensor: false,\r\n            isStatic: false,\r\n            isSleeping: false,\r\n            ignoreGravity: false,\r\n            ignorePointer: false,\r\n            motion: 0,\r\n            sleepThreshold: 60,\r\n            density: 0.001,\r\n            restitution: 0,\r\n            friction: 0.1,\r\n            frictionStatic: 0.5,\r\n            frictionAir: 0.01,\r\n            collisionFilter: {\r\n                category: 0x0001,\r\n                mask: 0xFFFFFFFF,\r\n                group: 0\r\n            },\r\n            slop: 0.05,\r\n            timeScale: 1,\r\n            render: {\r\n                visible: true,\r\n                opacity: 1,\r\n                sprite: {\r\n                    xScale: 1,\r\n                    yScale: 1,\r\n                    xOffset: 0,\r\n                    yOffset: 0\r\n                },\r\n                lineWidth: 0\r\n            },\r\n\r\n            events: null,\r\n            bounds: null,\r\n            chamfer: null,\r\n            circleRadius: 0,\r\n            positionPrev: null,\r\n            anglePrev: 0,\r\n            parent: null,\r\n\r\n            axes: null,\r\n            area: 0,\r\n            mass: 0,\r\n            inertia: 0,\r\n\r\n            _original: null\r\n        };\r\n\r\n        var body = Common.extend(defaults, options);\r\n\r\n        _initProperties(body, options);\r\n\r\n        return body;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique group index for which bodies will collide.\r\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\r\n     * See `body.collisionFilter` for more information.\r\n     * @method nextGroup\r\n     * @param {bool} [isNonColliding=false]\r\n     * @return {Number} Unique group index\r\n     */\r\n    Body.nextGroup = function(isNonColliding) {\r\n        if (isNonColliding)\r\n            return Body._nextNonCollidingGroupId--;\r\n\r\n        return Body._nextCollidingGroupId++;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\r\n     * There are 32 available. See `body.collisionFilter` for more information.\r\n     * @method nextCategory\r\n     * @return {Number} Unique category bitfield\r\n     */\r\n    Body.nextCategory = function() {\r\n        Body._nextCategory = Body._nextCategory << 1;\r\n        return Body._nextCategory;\r\n    };\r\n\r\n    /**\r\n     * Initialises body properties.\r\n     * @method _initProperties\r\n     * @private\r\n     * @param {body} body\r\n     * @param {} [options]\r\n     */\r\n    var _initProperties = function(body, options) {\r\n        options = options || {};\r\n\r\n        // init required properties (order is important)\r\n        Body.set(body, {\r\n            bounds: body.bounds || Bounds.create(body.vertices),\r\n            positionPrev: body.positionPrev || Vector.clone(body.position),\r\n            anglePrev: body.anglePrev || body.angle,\r\n            vertices: body.vertices,\r\n            parts: body.parts || [body],\r\n            isStatic: body.isStatic,\r\n            isSleeping: body.isSleeping,\r\n            parent: body.parent || body\r\n        });\r\n\r\n        Vertices.rotate(body.vertices, body.angle, body.position);\r\n        Axes.rotate(body.axes, body.angle);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n\r\n        // allow options to override the automatically calculated properties\r\n        Body.set(body, {\r\n            axes: options.axes || body.axes,\r\n            area: options.area || body.area,\r\n            mass: options.mass || body.mass,\r\n            inertia: options.inertia || body.inertia\r\n        });\r\n\r\n        // render properties\r\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\r\n            defaultStrokeStyle = '#000';\r\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\r\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\r\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\r\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\r\n    };\r\n\r\n    /**\r\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\r\n     * Prefer to use the actual setter functions in performance critical situations.\r\n     * @method set\r\n     * @param {body} body\r\n     * @param {object} settings A map of properties and values to set on the body.\r\n     */\r\n    Body.set = function(body, settings) {\r\n        var property,\r\n            value;\r\n\r\n        if (typeof settings === 'string') {\r\n            property = settings;\r\n            settings = {};\r\n            settings[property] = value;\r\n        }\r\n\r\n        for (property in settings) {\r\n\r\n            if (!settings.hasOwnProperty(property))\r\n                continue;\r\n\r\n            value = settings[property];\r\n            switch (property) {\r\n\r\n            case 'isStatic':\r\n                Body.setStatic(body, value);\r\n                break;\r\n            case 'isSleeping':\r\n                Sleeping.set(body, value);\r\n                break;\r\n            case 'mass':\r\n                Body.setMass(body, value);\r\n                break;\r\n            case 'density':\r\n                Body.setDensity(body, value);\r\n                break;\r\n            case 'inertia':\r\n                Body.setInertia(body, value);\r\n                break;\r\n            case 'vertices':\r\n                Body.setVertices(body, value);\r\n                break;\r\n            case 'position':\r\n                Body.setPosition(body, value);\r\n                break;\r\n            case 'angle':\r\n                Body.setAngle(body, value);\r\n                break;\r\n            case 'velocity':\r\n                Body.setVelocity(body, value);\r\n                break;\r\n            case 'angularVelocity':\r\n                Body.setAngularVelocity(body, value);\r\n                break;\r\n            case 'parts':\r\n                Body.setParts(body, value);\r\n                break;\r\n            default:\r\n                body[property] = value;\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\r\n     * @method setStatic\r\n     * @param {body} body\r\n     * @param {bool} isStatic\r\n     */\r\n    Body.setStatic = function(body, isStatic) {\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.isStatic = isStatic;\r\n\r\n            if (isStatic) {\r\n                part._original = {\r\n                    restitution: part.restitution,\r\n                    friction: part.friction,\r\n                    mass: part.mass,\r\n                    inertia: part.inertia,\r\n                    density: part.density,\r\n                    inverseMass: part.inverseMass,\r\n                    inverseInertia: part.inverseInertia\r\n                };\r\n\r\n                part.restitution = 0;\r\n                part.friction = 1;\r\n                part.mass = part.inertia = part.density = Infinity;\r\n                part.inverseMass = part.inverseInertia = 0;\r\n\r\n                part.positionPrev.x = part.position.x;\r\n                part.positionPrev.y = part.position.y;\r\n                part.anglePrev = part.angle;\r\n                part.angularVelocity = 0;\r\n                part.speed = 0;\r\n                part.angularSpeed = 0;\r\n                part.motion = 0;\r\n            } else if (part._original) {\r\n                part.restitution = part._original.restitution;\r\n                part.friction = part._original.friction;\r\n                part.mass = part._original.mass;\r\n                part.inertia = part._original.inertia;\r\n                part.density = part._original.density;\r\n                part.inverseMass = part._original.inverseMass;\r\n                part.inverseInertia = part._original.inverseInertia;\r\n\r\n                part._original = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\r\n     * @method setMass\r\n     * @param {body} body\r\n     * @param {number} mass\r\n     */\r\n    Body.setMass = function(body, mass) {\r\n        var moment = body.inertia / (body.mass / 6);\r\n        body.inertia = moment * (mass / 6);\r\n        body.inverseInertia = 1 / body.inertia;\r\n\r\n        body.mass = mass;\r\n        body.inverseMass = 1 / body.mass;\r\n        body.density = body.mass / body.area;\r\n    };\r\n\r\n    /**\r\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\r\n     * @method setDensity\r\n     * @param {body} body\r\n     * @param {number} density\r\n     */\r\n    Body.setDensity = function(body, density) {\r\n        Body.setMass(body, density * body.area);\r\n        body.density = density;\r\n    };\r\n\r\n    /**\r\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \r\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\r\n     * @method setInertia\r\n     * @param {body} body\r\n     * @param {number} inertia\r\n     */\r\n    Body.setInertia = function(body, inertia) {\r\n        body.inertia = inertia;\r\n        body.inverseInertia = 1 / body.inertia;\r\n    };\r\n\r\n    /**\r\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\r\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\r\n     * They are then automatically translated to world space based on `body.position`.\r\n     *\r\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\r\n     * Vertices must form a convex hull, concave hulls are not supported.\r\n     *\r\n     * @method setVertices\r\n     * @param {body} body\r\n     * @param {vector[]} vertices\r\n     */\r\n    Body.setVertices = function(body, vertices) {\r\n        // change vertices\r\n        if (vertices[0].body === body) {\r\n            body.vertices = vertices;\r\n        } else {\r\n            body.vertices = Vertices.create(vertices, body);\r\n        }\r\n\r\n        // update properties\r\n        body.axes = Axes.fromVertices(body.vertices);\r\n        body.area = Vertices.area(body.vertices);\r\n        Body.setMass(body, body.density * body.area);\r\n\r\n        // orient vertices around the centre of mass at origin (0, 0)\r\n        var centre = Vertices.centre(body.vertices);\r\n        Vertices.translate(body.vertices, centre, -1);\r\n\r\n        // update inertia while vertices are at origin (0, 0)\r\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\r\n\r\n        // update geometry\r\n        Vertices.translate(body.vertices, body.position);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\r\n     * Each part will have its parent set to `body`.\r\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\r\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\r\n     * @method setParts\r\n     * @param {body} body\r\n     * @param [body] parts\r\n     * @param {bool} [autoHull=true]\r\n     */\r\n    Body.setParts = function(body, parts, autoHull) {\r\n        var i;\r\n\r\n        // add all the parts, ensuring that the first part is always the parent body\r\n        parts = parts.slice(0);\r\n        body.parts.length = 0;\r\n        body.parts.push(body);\r\n        body.parent = body;\r\n\r\n        for (i = 0; i < parts.length; i++) {\r\n            var part = parts[i];\r\n            if (part !== body) {\r\n                part.parent = body;\r\n                body.parts.push(part);\r\n            }\r\n        }\r\n\r\n        if (body.parts.length === 1)\r\n            return;\r\n\r\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\r\n\r\n        // find the convex hull of all parts to set on the parent body\r\n        if (autoHull) {\r\n            var vertices = [];\r\n            for (i = 0; i < parts.length; i++) {\r\n                vertices = vertices.concat(parts[i].vertices);\r\n            }\r\n\r\n            Vertices.clockwiseSort(vertices);\r\n\r\n            var hull = Vertices.hull(vertices),\r\n                hullCentre = Vertices.centre(hull);\r\n\r\n            Body.setVertices(body, hull);\r\n            Vertices.translate(body.vertices, hullCentre);\r\n        }\r\n\r\n        // sum the properties of all compound parts of the parent body\r\n        var total = _totalProperties(body);\r\n\r\n        body.area = total.area;\r\n        body.parent = body;\r\n        body.position.x = total.centre.x;\r\n        body.position.y = total.centre.y;\r\n        body.positionPrev.x = total.centre.x;\r\n        body.positionPrev.y = total.centre.y;\r\n\r\n        Body.setMass(body, total.mass);\r\n        Body.setInertia(body, total.inertia);\r\n        Body.setPosition(body, total.centre);\r\n    };\r\n\r\n    /**\r\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\r\n     * @method setPosition\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     */\r\n    Body.setPosition = function(body, position) {\r\n        var delta = Vector.sub(position, body.position);\r\n        body.positionPrev.x += delta.x;\r\n        body.positionPrev.y += delta.y;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.position.x += delta.x;\r\n            part.position.y += delta.y;\r\n            Vertices.translate(part.vertices, delta);\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\r\n     * @method setAngle\r\n     * @param {body} body\r\n     * @param {number} angle\r\n     */\r\n    Body.setAngle = function(body, angle) {\r\n        var delta = angle - body.angle;\r\n        body.anglePrev += delta;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.angle += delta;\r\n            Vertices.rotate(part.vertices, delta, body.position);\r\n            Axes.rotate(part.axes, delta);\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n            if (i > 0) {\r\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setVelocity\r\n     * @param {body} body\r\n     * @param {vector} velocity\r\n     */\r\n    Body.setVelocity = function(body, velocity) {\r\n        body.positionPrev.x = body.position.x - velocity.x;\r\n        body.positionPrev.y = body.position.y - velocity.y;\r\n        body.velocity.x = velocity.x;\r\n        body.velocity.y = velocity.y;\r\n        body.speed = Vector.magnitude(body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setAngularVelocity\r\n     * @param {body} body\r\n     * @param {number} velocity\r\n     */\r\n    Body.setAngularVelocity = function(body, velocity) {\r\n        body.anglePrev = body.angle - velocity;\r\n        body.angularVelocity = velocity;\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n    };\r\n\r\n    /**\r\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\r\n     * @method translate\r\n     * @param {body} body\r\n     * @param {vector} translation\r\n     */\r\n    Body.translate = function(body, translation) {\r\n        Body.setPosition(body, Vector.add(body.position, translation));\r\n    };\r\n\r\n    /**\r\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\r\n     * @method rotate\r\n     * @param {body} body\r\n     * @param {number} rotation\r\n     * @param {vector} [point]\r\n     */\r\n    Body.rotate = function(body, rotation, point) {\r\n        if (!point) {\r\n            Body.setAngle(body, body.angle + rotation);\r\n        } else {\r\n            var cos = Math.cos(rotation),\r\n                sin = Math.sin(rotation),\r\n                dx = body.position.x - point.x,\r\n                dy = body.position.y - point.y;\r\n                \r\n            Body.setPosition(body, {\r\n                x: point.x + (dx * cos - dy * sin),\r\n                y: point.y + (dx * sin + dy * cos)\r\n            });\r\n\r\n            Body.setAngle(body, body.angle + rotation);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\r\n     * @method scale\r\n     * @param {body} body\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} [point]\r\n     */\r\n    Body.scale = function(body, scaleX, scaleY, point) {\r\n        point = point || body.position;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n\r\n            // scale position\r\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\r\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\r\n\r\n            // scale vertices\r\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\r\n\r\n            // update properties\r\n            part.axes = Axes.fromVertices(part.vertices);\r\n\r\n            if (!body.isStatic) {\r\n                part.area = Vertices.area(part.vertices);\r\n                Body.setMass(part, body.density * part.area);\r\n\r\n                // update inertia (requires vertices to be at origin)\r\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\r\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\r\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\r\n            }\r\n\r\n            // update bounds\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n\r\n        // handle circles\r\n        if (body.circleRadius) { \r\n            if (scaleX === scaleY) {\r\n                body.circleRadius *= scaleX;\r\n            } else {\r\n                // body is no longer a circle\r\n                body.circleRadius = null;\r\n            }\r\n        }\r\n\r\n        if (!body.isStatic) {\r\n            var total = _totalProperties(body);\r\n            body.area = total.area;\r\n            Body.setMass(body, total.mass);\r\n            Body.setInertia(body, total.inertia);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\r\n     * @method update\r\n     * @param {body} body\r\n     * @param {number} deltaTime\r\n     * @param {number} timeScale\r\n     * @param {number} correction\r\n     */\r\n    Body.update = function(body, deltaTime, timeScale, correction) {\r\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\r\n\r\n        // from the previous step\r\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\r\n            velocityPrevX = body.position.x - body.positionPrev.x,\r\n            velocityPrevY = body.position.y - body.positionPrev.y;\r\n\r\n        // update velocity with Verlet integration\r\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\r\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\r\n\r\n        body.positionPrev.x = body.position.x;\r\n        body.positionPrev.y = body.position.y;\r\n        body.position.x += body.velocity.x;\r\n        body.position.y += body.velocity.y;\r\n\r\n        // update angular velocity with Verlet integration\r\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\r\n        body.anglePrev = body.angle;\r\n        body.angle += body.angularVelocity;\r\n\r\n        // track speed and acceleration\r\n        body.speed = Vector.magnitude(body.velocity);\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n\r\n        // transform the body geometry\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n\r\n            Vertices.translate(part.vertices, body.velocity);\r\n            \r\n            if (i > 0) {\r\n                part.position.x += body.velocity.x;\r\n                part.position.y += body.velocity.y;\r\n            }\r\n\r\n            if (body.angularVelocity !== 0) {\r\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\r\n                Axes.rotate(part.axes, body.angularVelocity);\r\n                if (i > 0) {\r\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\r\n                }\r\n            }\r\n\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applies a force to a body from a given world-space position, including resulting torque.\r\n     * @method applyForce\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     * @param {vector} force\r\n     */\r\n    Body.applyForce = function(body, position, force) {\r\n        body.force.x += force.x;\r\n        body.force.y += force.y;\r\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\r\n        body.torque += offset.x * force.y - offset.y * force.x;\r\n    };\r\n\r\n    /**\r\n     * Returns the sums of the properties of all compound parts of the parent body.\r\n     * @method _totalProperties\r\n     * @private\r\n     * @param {body} body\r\n     * @return {}\r\n     */\r\n    var _totalProperties = function(body) {\r\n        // from equations at:\r\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\r\n        // http://output.to/sideway/default.asp?qno=121100087\r\n\r\n        var properties = {\r\n            mass: 0,\r\n            area: 0,\r\n            inertia: 0,\r\n            centre: { x: 0, y: 0 }\r\n        };\r\n\r\n        // sum the properties of all compound parts of the parent body\r\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\r\n            var part = body.parts[i],\r\n                mass = part.mass !== Infinity ? part.mass : 1;\r\n\r\n            properties.mass += part.mass;\r\n            properties.area += part.area;\r\n            properties.inertia += part.inertia;\r\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\r\n        }\r\n\r\n        properties.centre = Vector.div(properties.centre, properties.mass);\r\n\r\n        return properties;\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired when a body starts sleeping (where `this` is the body).\r\n    *\r\n    * @event sleepStart\r\n    * @this {body} The body that has started sleeping\r\n    * @param {} event An event object\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a body ends sleeping (where `this` is the body).\r\n    *\r\n    * @event sleepEnd\r\n    * @this {body} The body that has ended sleeping\r\n    * @param {} event An event object\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"body\"\r\n     * @readOnly\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage bodies.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Body\"\r\n     */\r\n\r\n    /**\r\n     * An array of bodies that make up this body. \r\n     * The first body in the array must always be a self reference to the current body instance.\r\n     * All bodies in the `parts` array together form a single rigid compound body.\r\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\r\n     * Parts themselves should never be added to a `World`, only the parent body should be.\r\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\r\n     *\r\n     * @property parts\r\n     * @type body[]\r\n     */\r\n\r\n    /**\r\n     * An object reserved for storing plugin-specific properties.\r\n     *\r\n     * @property plugin\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * A self reference if the body is _not_ a part of another body.\r\n     * Otherwise this is a reference to the body that this is a part of.\r\n     * See `body.parts`.\r\n     *\r\n     * @property parent\r\n     * @type body\r\n     */\r\n\r\n    /**\r\n     * A `Number` specifying the angle of the body, in radians.\r\n     *\r\n     * @property angle\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\r\n     * These should be provided about the origin `(0, 0)`. E.g.\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\r\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \r\n     *\r\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\r\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\r\n     *\r\n     * @property vertices\r\n     * @type vector[]\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the current world-space position of the body.\r\n     *\r\n     * @property position\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\r\n     *\r\n     * @property force\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\r\n     *\r\n     * @property torque\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\r\n     *\r\n     * @readOnly\r\n     * @property speed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\r\n     *\r\n     * @readOnly\r\n     * @property angularSpeed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property velocity\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property angularVelocity\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\r\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\r\n     *\r\n     * @property isStatic\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\r\n     *\r\n     * @property isSensor\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\r\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\r\n     *\r\n     * @property isSleeping\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\r\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\r\n     *\r\n     * @readOnly\r\n     * @property motion\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\r\n     *\r\n     * @property sleepThreshold\r\n     * @type number\r\n     * @default 60\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the density of the body, that is its mass per unit area.\r\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\r\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\r\n     *\r\n     * @property density\r\n     * @type number\r\n     * @default 0.001\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\r\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\r\n     *\r\n     * @property mass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\r\n     * If you modify this value, you must also modify the `body.mass` property.\r\n     *\r\n     * @property inverseMass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\r\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\r\n     *\r\n     * @property inertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\r\n     * If you modify this value, you must also modify the `body.inertia` property.\r\n     *\r\n     * @property inverseInertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \r\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.max(bodyA.restitution, bodyB.restitution)\r\n     *\r\n     * @property restitution\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means that the body may slide indefinitely.\r\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\r\n     *\r\n     * The effects of the value may be non-linear. \r\n     * High values may be unstable depending on the body.\r\n     * The engine uses a Coulomb friction model including static and kinetic friction.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.min(bodyA.friction, bodyB.friction)\r\n     *\r\n     * @property friction\r\n     * @type number\r\n     * @default 0.1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \r\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\r\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\r\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\r\n     *\r\n     * @property frictionStatic\r\n     * @type number\r\n     * @default 0.5\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the air friction of the body (air resistance). \r\n     * A value of `0` means the body will never slow as it moves through space.\r\n     * The higher the value, the faster a body slows when moving through space.\r\n     * The effects of the value are non-linear. \r\n     *\r\n     * @property frictionAir\r\n     * @type number\r\n     * @default 0.01\r\n     */\r\n\r\n    /**\r\n     * An `Object` that specifies the collision filtering properties of this body.\r\n     *\r\n     * Collisions between two bodies will obey the following rules:\r\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\r\n     *   they will always collide if the value is positive, and they will never collide\r\n     *   if the value is negative.\r\n     * - If the two bodies have different values of `collisionFilter.group` or if one\r\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\r\n     *\r\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\r\n     * value is used as a bit field and the category should have only one bit set, meaning that\r\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\r\n     * different collision categories available.\r\n     *\r\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\r\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\r\n     *\r\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\r\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\r\n     * are both true.\r\n     *\r\n     * @property collisionFilter\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An Integer `Number`, that specifies the collision group this body belongs to.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.group\r\n     * @type object\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A bit field that specifies the collision category this body belongs to.\r\n     * The category value should have only one bit set, for example `0x0001`.\r\n     * This means there are up to 32 unique collision categories available.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.category\r\n     * @type object\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A bit mask that specifies the collision categories this body may collide with.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.mask\r\n     * @type object\r\n     * @default -1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\r\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\r\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\r\n     *\r\n     * @property slop\r\n     * @type number\r\n     * @default 0.05\r\n     */\r\n\r\n    /**\r\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\r\n     *\r\n     * @property timeScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\r\n     *\r\n     * @property render\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates if the body should be rendered.\r\n     *\r\n     * @property render.visible\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * Sets the opacity to use when rendering.\r\n     *\r\n     * @property render.opacity\r\n     * @type number\r\n     * @default 1\r\n    */\r\n\r\n    /**\r\n     * An `Object` that defines the sprite properties to use when rendering, if any.\r\n     *\r\n     * @property render.sprite\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\r\n     *\r\n     * @property render.sprite.texture\r\n     * @type string\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.xScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.yScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n     /**\r\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\r\n      *\r\n      * @property render.sprite.xOffset\r\n      * @type number\r\n      * @default 0\r\n      */\r\n\r\n     /**\r\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\r\n      *\r\n      * @property render.sprite.yOffset\r\n      * @type number\r\n      * @default 0\r\n      */\r\n\r\n    /**\r\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\r\n     * A value of `0` means no outline will be rendered.\r\n     *\r\n     * @property render.lineWidth\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.fillStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.strokeStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * An array of unique axis vectors (edge normals) used for collision detection.\r\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\r\n     * They are constantly updated by `Body.update` during the simulation.\r\n     *\r\n     * @property axes\r\n     * @type vector[]\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\r\n     *\r\n     * @property area\r\n     * @type string\r\n     * @default \r\n     */\r\n\r\n    /**\r\n     * A `Bounds` object that defines the AABB region for the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\r\n     *\r\n     * @property bounds\r\n     * @type bounds\r\n     */\r\n\r\n})();\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/body/Body.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}}],"sources":{"node_modules/phaser/src/physics/matter-js/lib/body/Body.js":"/**\r\n* The `Matter.Body` module contains methods for creating and manipulating body models.\r\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\r\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n\r\n* @class Body\r\n*/\r\n\r\nvar Body = {};\r\n\r\nmodule.exports = Body;\r\n\r\nvar Vertices = require('../geometry/Vertices');\r\nvar Vector = require('../geometry/Vector');\r\nvar Sleeping = require('../core/Sleeping');\r\nvar Common = require('../core/Common');\r\nvar Bounds = require('../geometry/Bounds');\r\nvar Axes = require('../geometry/Axes');\r\n\r\n(function() {\r\n\r\n    Body._inertiaScale = 4;\r\n    Body._nextCollidingGroupId = 1;\r\n    Body._nextNonCollidingGroupId = -1;\r\n    Body._nextCategory = 0x0001;\r\n\r\n    /**\r\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * Vertices must be specified in clockwise order.\r\n     * See the properties section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {body} body\r\n     */\r\n    Body.create = function(options) {\r\n        var defaults = {\r\n            id: Common.nextId(),\r\n            type: 'body',\r\n            label: 'Body',\r\n            gameObject: null,\r\n            parts: [],\r\n            plugin: {},\r\n            angle: 0,\r\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\r\n            position: { x: 0, y: 0 },\r\n            force: { x: 0, y: 0 },\r\n            torque: 0,\r\n            positionImpulse: { x: 0, y: 0 },\r\n            previousPositionImpulse: { x: 0, y: 0 },\r\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\r\n            totalContacts: 0,\r\n            speed: 0,\r\n            angularSpeed: 0,\r\n            velocity: { x: 0, y: 0 },\r\n            angularVelocity: 0,\r\n            isSensor: false,\r\n            isStatic: false,\r\n            isSleeping: false,\r\n            ignoreGravity: false,\r\n            ignorePointer: false,\r\n            motion: 0,\r\n            sleepThreshold: 60,\r\n            density: 0.001,\r\n            restitution: 0,\r\n            friction: 0.1,\r\n            frictionStatic: 0.5,\r\n            frictionAir: 0.01,\r\n            collisionFilter: {\r\n                category: 0x0001,\r\n                mask: 0xFFFFFFFF,\r\n                group: 0\r\n            },\r\n            slop: 0.05,\r\n            timeScale: 1,\r\n            render: {\r\n                visible: true,\r\n                opacity: 1,\r\n                sprite: {\r\n                    xScale: 1,\r\n                    yScale: 1,\r\n                    xOffset: 0,\r\n                    yOffset: 0\r\n                },\r\n                lineWidth: 0\r\n            },\r\n\r\n            events: null,\r\n            bounds: null,\r\n            chamfer: null,\r\n            circleRadius: 0,\r\n            positionPrev: null,\r\n            anglePrev: 0,\r\n            parent: null,\r\n\r\n            axes: null,\r\n            area: 0,\r\n            mass: 0,\r\n            inertia: 0,\r\n\r\n            _original: null\r\n        };\r\n\r\n        var body = Common.extend(defaults, options);\r\n\r\n        _initProperties(body, options);\r\n\r\n        return body;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique group index for which bodies will collide.\r\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\r\n     * See `body.collisionFilter` for more information.\r\n     * @method nextGroup\r\n     * @param {bool} [isNonColliding=false]\r\n     * @return {Number} Unique group index\r\n     */\r\n    Body.nextGroup = function(isNonColliding) {\r\n        if (isNonColliding)\r\n            return Body._nextNonCollidingGroupId--;\r\n\r\n        return Body._nextCollidingGroupId++;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\r\n     * There are 32 available. See `body.collisionFilter` for more information.\r\n     * @method nextCategory\r\n     * @return {Number} Unique category bitfield\r\n     */\r\n    Body.nextCategory = function() {\r\n        Body._nextCategory = Body._nextCategory << 1;\r\n        return Body._nextCategory;\r\n    };\r\n\r\n    /**\r\n     * Initialises body properties.\r\n     * @method _initProperties\r\n     * @private\r\n     * @param {body} body\r\n     * @param {} [options]\r\n     */\r\n    var _initProperties = function(body, options) {\r\n        options = options || {};\r\n\r\n        // init required properties (order is important)\r\n        Body.set(body, {\r\n            bounds: body.bounds || Bounds.create(body.vertices),\r\n            positionPrev: body.positionPrev || Vector.clone(body.position),\r\n            anglePrev: body.anglePrev || body.angle,\r\n            vertices: body.vertices,\r\n            parts: body.parts || [body],\r\n            isStatic: body.isStatic,\r\n            isSleeping: body.isSleeping,\r\n            parent: body.parent || body\r\n        });\r\n\r\n        Vertices.rotate(body.vertices, body.angle, body.position);\r\n        Axes.rotate(body.axes, body.angle);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n\r\n        // allow options to override the automatically calculated properties\r\n        Body.set(body, {\r\n            axes: options.axes || body.axes,\r\n            area: options.area || body.area,\r\n            mass: options.mass || body.mass,\r\n            inertia: options.inertia || body.inertia\r\n        });\r\n\r\n        // render properties\r\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\r\n            defaultStrokeStyle = '#000';\r\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\r\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\r\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\r\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\r\n    };\r\n\r\n    /**\r\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\r\n     * Prefer to use the actual setter functions in performance critical situations.\r\n     * @method set\r\n     * @param {body} body\r\n     * @param {object} settings A map of properties and values to set on the body.\r\n     */\r\n    Body.set = function(body, settings) {\r\n        var property,\r\n            value;\r\n\r\n        if (typeof settings === 'string') {\r\n            property = settings;\r\n            settings = {};\r\n            settings[property] = value;\r\n        }\r\n\r\n        for (property in settings) {\r\n\r\n            if (!settings.hasOwnProperty(property))\r\n                continue;\r\n\r\n            value = settings[property];\r\n            switch (property) {\r\n\r\n            case 'isStatic':\r\n                Body.setStatic(body, value);\r\n                break;\r\n            case 'isSleeping':\r\n                Sleeping.set(body, value);\r\n                break;\r\n            case 'mass':\r\n                Body.setMass(body, value);\r\n                break;\r\n            case 'density':\r\n                Body.setDensity(body, value);\r\n                break;\r\n            case 'inertia':\r\n                Body.setInertia(body, value);\r\n                break;\r\n            case 'vertices':\r\n                Body.setVertices(body, value);\r\n                break;\r\n            case 'position':\r\n                Body.setPosition(body, value);\r\n                break;\r\n            case 'angle':\r\n                Body.setAngle(body, value);\r\n                break;\r\n            case 'velocity':\r\n                Body.setVelocity(body, value);\r\n                break;\r\n            case 'angularVelocity':\r\n                Body.setAngularVelocity(body, value);\r\n                break;\r\n            case 'parts':\r\n                Body.setParts(body, value);\r\n                break;\r\n            default:\r\n                body[property] = value;\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\r\n     * @method setStatic\r\n     * @param {body} body\r\n     * @param {bool} isStatic\r\n     */\r\n    Body.setStatic = function(body, isStatic) {\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.isStatic = isStatic;\r\n\r\n            if (isStatic) {\r\n                part._original = {\r\n                    restitution: part.restitution,\r\n                    friction: part.friction,\r\n                    mass: part.mass,\r\n                    inertia: part.inertia,\r\n                    density: part.density,\r\n                    inverseMass: part.inverseMass,\r\n                    inverseInertia: part.inverseInertia\r\n                };\r\n\r\n                part.restitution = 0;\r\n                part.friction = 1;\r\n                part.mass = part.inertia = part.density = Infinity;\r\n                part.inverseMass = part.inverseInertia = 0;\r\n\r\n                part.positionPrev.x = part.position.x;\r\n                part.positionPrev.y = part.position.y;\r\n                part.anglePrev = part.angle;\r\n                part.angularVelocity = 0;\r\n                part.speed = 0;\r\n                part.angularSpeed = 0;\r\n                part.motion = 0;\r\n            } else if (part._original) {\r\n                part.restitution = part._original.restitution;\r\n                part.friction = part._original.friction;\r\n                part.mass = part._original.mass;\r\n                part.inertia = part._original.inertia;\r\n                part.density = part._original.density;\r\n                part.inverseMass = part._original.inverseMass;\r\n                part.inverseInertia = part._original.inverseInertia;\r\n\r\n                part._original = null;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\r\n     * @method setMass\r\n     * @param {body} body\r\n     * @param {number} mass\r\n     */\r\n    Body.setMass = function(body, mass) {\r\n        var moment = body.inertia / (body.mass / 6);\r\n        body.inertia = moment * (mass / 6);\r\n        body.inverseInertia = 1 / body.inertia;\r\n\r\n        body.mass = mass;\r\n        body.inverseMass = 1 / body.mass;\r\n        body.density = body.mass / body.area;\r\n    };\r\n\r\n    /**\r\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\r\n     * @method setDensity\r\n     * @param {body} body\r\n     * @param {number} density\r\n     */\r\n    Body.setDensity = function(body, density) {\r\n        Body.setMass(body, density * body.area);\r\n        body.density = density;\r\n    };\r\n\r\n    /**\r\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \r\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\r\n     * @method setInertia\r\n     * @param {body} body\r\n     * @param {number} inertia\r\n     */\r\n    Body.setInertia = function(body, inertia) {\r\n        body.inertia = inertia;\r\n        body.inverseInertia = 1 / body.inertia;\r\n    };\r\n\r\n    /**\r\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\r\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\r\n     * They are then automatically translated to world space based on `body.position`.\r\n     *\r\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\r\n     * Vertices must form a convex hull, concave hulls are not supported.\r\n     *\r\n     * @method setVertices\r\n     * @param {body} body\r\n     * @param {vector[]} vertices\r\n     */\r\n    Body.setVertices = function(body, vertices) {\r\n        // change vertices\r\n        if (vertices[0].body === body) {\r\n            body.vertices = vertices;\r\n        } else {\r\n            body.vertices = Vertices.create(vertices, body);\r\n        }\r\n\r\n        // update properties\r\n        body.axes = Axes.fromVertices(body.vertices);\r\n        body.area = Vertices.area(body.vertices);\r\n        Body.setMass(body, body.density * body.area);\r\n\r\n        // orient vertices around the centre of mass at origin (0, 0)\r\n        var centre = Vertices.centre(body.vertices);\r\n        Vertices.translate(body.vertices, centre, -1);\r\n\r\n        // update inertia while vertices are at origin (0, 0)\r\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\r\n\r\n        // update geometry\r\n        Vertices.translate(body.vertices, body.position);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\r\n     * Each part will have its parent set to `body`.\r\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\r\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\r\n     * @method setParts\r\n     * @param {body} body\r\n     * @param [body] parts\r\n     * @param {bool} [autoHull=true]\r\n     */\r\n    Body.setParts = function(body, parts, autoHull) {\r\n        var i;\r\n\r\n        // add all the parts, ensuring that the first part is always the parent body\r\n        parts = parts.slice(0);\r\n        body.parts.length = 0;\r\n        body.parts.push(body);\r\n        body.parent = body;\r\n\r\n        for (i = 0; i < parts.length; i++) {\r\n            var part = parts[i];\r\n            if (part !== body) {\r\n                part.parent = body;\r\n                body.parts.push(part);\r\n            }\r\n        }\r\n\r\n        if (body.parts.length === 1)\r\n            return;\r\n\r\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\r\n\r\n        // find the convex hull of all parts to set on the parent body\r\n        if (autoHull) {\r\n            var vertices = [];\r\n            for (i = 0; i < parts.length; i++) {\r\n                vertices = vertices.concat(parts[i].vertices);\r\n            }\r\n\r\n            Vertices.clockwiseSort(vertices);\r\n\r\n            var hull = Vertices.hull(vertices),\r\n                hullCentre = Vertices.centre(hull);\r\n\r\n            Body.setVertices(body, hull);\r\n            Vertices.translate(body.vertices, hullCentre);\r\n        }\r\n\r\n        // sum the properties of all compound parts of the parent body\r\n        var total = _totalProperties(body);\r\n\r\n        body.area = total.area;\r\n        body.parent = body;\r\n        body.position.x = total.centre.x;\r\n        body.position.y = total.centre.y;\r\n        body.positionPrev.x = total.centre.x;\r\n        body.positionPrev.y = total.centre.y;\r\n\r\n        Body.setMass(body, total.mass);\r\n        Body.setInertia(body, total.inertia);\r\n        Body.setPosition(body, total.centre);\r\n    };\r\n\r\n    /**\r\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\r\n     * @method setPosition\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     */\r\n    Body.setPosition = function(body, position) {\r\n        var delta = Vector.sub(position, body.position);\r\n        body.positionPrev.x += delta.x;\r\n        body.positionPrev.y += delta.y;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.position.x += delta.x;\r\n            part.position.y += delta.y;\r\n            Vertices.translate(part.vertices, delta);\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\r\n     * @method setAngle\r\n     * @param {body} body\r\n     * @param {number} angle\r\n     */\r\n    Body.setAngle = function(body, angle) {\r\n        var delta = angle - body.angle;\r\n        body.anglePrev += delta;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n            part.angle += delta;\r\n            Vertices.rotate(part.vertices, delta, body.position);\r\n            Axes.rotate(part.axes, delta);\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n            if (i > 0) {\r\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setVelocity\r\n     * @param {body} body\r\n     * @param {vector} velocity\r\n     */\r\n    Body.setVelocity = function(body, velocity) {\r\n        body.positionPrev.x = body.position.x - velocity.x;\r\n        body.positionPrev.y = body.position.y - velocity.y;\r\n        body.velocity.x = velocity.x;\r\n        body.velocity.y = velocity.y;\r\n        body.speed = Vector.magnitude(body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setAngularVelocity\r\n     * @param {body} body\r\n     * @param {number} velocity\r\n     */\r\n    Body.setAngularVelocity = function(body, velocity) {\r\n        body.anglePrev = body.angle - velocity;\r\n        body.angularVelocity = velocity;\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n    };\r\n\r\n    /**\r\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\r\n     * @method translate\r\n     * @param {body} body\r\n     * @param {vector} translation\r\n     */\r\n    Body.translate = function(body, translation) {\r\n        Body.setPosition(body, Vector.add(body.position, translation));\r\n    };\r\n\r\n    /**\r\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\r\n     * @method rotate\r\n     * @param {body} body\r\n     * @param {number} rotation\r\n     * @param {vector} [point]\r\n     */\r\n    Body.rotate = function(body, rotation, point) {\r\n        if (!point) {\r\n            Body.setAngle(body, body.angle + rotation);\r\n        } else {\r\n            var cos = Math.cos(rotation),\r\n                sin = Math.sin(rotation),\r\n                dx = body.position.x - point.x,\r\n                dy = body.position.y - point.y;\r\n                \r\n            Body.setPosition(body, {\r\n                x: point.x + (dx * cos - dy * sin),\r\n                y: point.y + (dx * sin + dy * cos)\r\n            });\r\n\r\n            Body.setAngle(body, body.angle + rotation);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\r\n     * @method scale\r\n     * @param {body} body\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} [point]\r\n     */\r\n    Body.scale = function(body, scaleX, scaleY, point) {\r\n        point = point || body.position;\r\n\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n\r\n            // scale position\r\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\r\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\r\n\r\n            // scale vertices\r\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\r\n\r\n            // update properties\r\n            part.axes = Axes.fromVertices(part.vertices);\r\n\r\n            if (!body.isStatic) {\r\n                part.area = Vertices.area(part.vertices);\r\n                Body.setMass(part, body.density * part.area);\r\n\r\n                // update inertia (requires vertices to be at origin)\r\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\r\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\r\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\r\n            }\r\n\r\n            // update bounds\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n\r\n        // handle circles\r\n        if (body.circleRadius) { \r\n            if (scaleX === scaleY) {\r\n                body.circleRadius *= scaleX;\r\n            } else {\r\n                // body is no longer a circle\r\n                body.circleRadius = null;\r\n            }\r\n        }\r\n\r\n        if (!body.isStatic) {\r\n            var total = _totalProperties(body);\r\n            body.area = total.area;\r\n            Body.setMass(body, total.mass);\r\n            Body.setInertia(body, total.inertia);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\r\n     * @method update\r\n     * @param {body} body\r\n     * @param {number} deltaTime\r\n     * @param {number} timeScale\r\n     * @param {number} correction\r\n     */\r\n    Body.update = function(body, deltaTime, timeScale, correction) {\r\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\r\n\r\n        // from the previous step\r\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\r\n            velocityPrevX = body.position.x - body.positionPrev.x,\r\n            velocityPrevY = body.position.y - body.positionPrev.y;\r\n\r\n        // update velocity with Verlet integration\r\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\r\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\r\n\r\n        body.positionPrev.x = body.position.x;\r\n        body.positionPrev.y = body.position.y;\r\n        body.position.x += body.velocity.x;\r\n        body.position.y += body.velocity.y;\r\n\r\n        // update angular velocity with Verlet integration\r\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\r\n        body.anglePrev = body.angle;\r\n        body.angle += body.angularVelocity;\r\n\r\n        // track speed and acceleration\r\n        body.speed = Vector.magnitude(body.velocity);\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n\r\n        // transform the body geometry\r\n        for (var i = 0; i < body.parts.length; i++) {\r\n            var part = body.parts[i];\r\n\r\n            Vertices.translate(part.vertices, body.velocity);\r\n            \r\n            if (i > 0) {\r\n                part.position.x += body.velocity.x;\r\n                part.position.y += body.velocity.y;\r\n            }\r\n\r\n            if (body.angularVelocity !== 0) {\r\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\r\n                Axes.rotate(part.axes, body.angularVelocity);\r\n                if (i > 0) {\r\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\r\n                }\r\n            }\r\n\r\n            Bounds.update(part.bounds, part.vertices, body.velocity);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applies a force to a body from a given world-space position, including resulting torque.\r\n     * @method applyForce\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     * @param {vector} force\r\n     */\r\n    Body.applyForce = function(body, position, force) {\r\n        body.force.x += force.x;\r\n        body.force.y += force.y;\r\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\r\n        body.torque += offset.x * force.y - offset.y * force.x;\r\n    };\r\n\r\n    /**\r\n     * Returns the sums of the properties of all compound parts of the parent body.\r\n     * @method _totalProperties\r\n     * @private\r\n     * @param {body} body\r\n     * @return {}\r\n     */\r\n    var _totalProperties = function(body) {\r\n        // from equations at:\r\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\r\n        // http://output.to/sideway/default.asp?qno=121100087\r\n\r\n        var properties = {\r\n            mass: 0,\r\n            area: 0,\r\n            inertia: 0,\r\n            centre: { x: 0, y: 0 }\r\n        };\r\n\r\n        // sum the properties of all compound parts of the parent body\r\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\r\n            var part = body.parts[i],\r\n                mass = part.mass !== Infinity ? part.mass : 1;\r\n\r\n            properties.mass += part.mass;\r\n            properties.area += part.area;\r\n            properties.inertia += part.inertia;\r\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\r\n        }\r\n\r\n        properties.centre = Vector.div(properties.centre, properties.mass);\r\n\r\n        return properties;\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired when a body starts sleeping (where `this` is the body).\r\n    *\r\n    * @event sleepStart\r\n    * @this {body} The body that has started sleeping\r\n    * @param {} event An event object\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a body ends sleeping (where `this` is the body).\r\n    *\r\n    * @event sleepEnd\r\n    * @this {body} The body that has ended sleeping\r\n    * @param {} event An event object\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"body\"\r\n     * @readOnly\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage bodies.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Body\"\r\n     */\r\n\r\n    /**\r\n     * An array of bodies that make up this body. \r\n     * The first body in the array must always be a self reference to the current body instance.\r\n     * All bodies in the `parts` array together form a single rigid compound body.\r\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\r\n     * Parts themselves should never be added to a `World`, only the parent body should be.\r\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\r\n     *\r\n     * @property parts\r\n     * @type body[]\r\n     */\r\n\r\n    /**\r\n     * An object reserved for storing plugin-specific properties.\r\n     *\r\n     * @property plugin\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * A self reference if the body is _not_ a part of another body.\r\n     * Otherwise this is a reference to the body that this is a part of.\r\n     * See `body.parts`.\r\n     *\r\n     * @property parent\r\n     * @type body\r\n     */\r\n\r\n    /**\r\n     * A `Number` specifying the angle of the body, in radians.\r\n     *\r\n     * @property angle\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\r\n     * These should be provided about the origin `(0, 0)`. E.g.\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\r\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \r\n     *\r\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\r\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\r\n     *\r\n     * @property vertices\r\n     * @type vector[]\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the current world-space position of the body.\r\n     *\r\n     * @property position\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\r\n     *\r\n     * @property force\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\r\n     *\r\n     * @property torque\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\r\n     *\r\n     * @readOnly\r\n     * @property speed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\r\n     *\r\n     * @readOnly\r\n     * @property angularSpeed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property velocity\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property angularVelocity\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\r\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\r\n     *\r\n     * @property isStatic\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\r\n     *\r\n     * @property isSensor\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\r\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\r\n     *\r\n     * @property isSleeping\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\r\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\r\n     *\r\n     * @readOnly\r\n     * @property motion\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\r\n     *\r\n     * @property sleepThreshold\r\n     * @type number\r\n     * @default 60\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the density of the body, that is its mass per unit area.\r\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\r\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\r\n     *\r\n     * @property density\r\n     * @type number\r\n     * @default 0.001\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\r\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\r\n     *\r\n     * @property mass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\r\n     * If you modify this value, you must also modify the `body.mass` property.\r\n     *\r\n     * @property inverseMass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\r\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\r\n     *\r\n     * @property inertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\r\n     * If you modify this value, you must also modify the `body.inertia` property.\r\n     *\r\n     * @property inverseInertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \r\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.max(bodyA.restitution, bodyB.restitution)\r\n     *\r\n     * @property restitution\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means that the body may slide indefinitely.\r\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\r\n     *\r\n     * The effects of the value may be non-linear. \r\n     * High values may be unstable depending on the body.\r\n     * The engine uses a Coulomb friction model including static and kinetic friction.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.min(bodyA.friction, bodyB.friction)\r\n     *\r\n     * @property friction\r\n     * @type number\r\n     * @default 0.1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \r\n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\r\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\r\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\r\n     *\r\n     * @property frictionStatic\r\n     * @type number\r\n     * @default 0.5\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the air friction of the body (air resistance). \r\n     * A value of `0` means the body will never slow as it moves through space.\r\n     * The higher the value, the faster a body slows when moving through space.\r\n     * The effects of the value are non-linear. \r\n     *\r\n     * @property frictionAir\r\n     * @type number\r\n     * @default 0.01\r\n     */\r\n\r\n    /**\r\n     * An `Object` that specifies the collision filtering properties of this body.\r\n     *\r\n     * Collisions between two bodies will obey the following rules:\r\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\r\n     *   they will always collide if the value is positive, and they will never collide\r\n     *   if the value is negative.\r\n     * - If the two bodies have different values of `collisionFilter.group` or if one\r\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\r\n     *\r\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\r\n     * value is used as a bit field and the category should have only one bit set, meaning that\r\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\r\n     * different collision categories available.\r\n     *\r\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\r\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\r\n     *\r\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\r\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\r\n     * are both true.\r\n     *\r\n     * @property collisionFilter\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An Integer `Number`, that specifies the collision group this body belongs to.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.group\r\n     * @type object\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A bit field that specifies the collision category this body belongs to.\r\n     * The category value should have only one bit set, for example `0x0001`.\r\n     * This means there are up to 32 unique collision categories available.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.category\r\n     * @type object\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A bit mask that specifies the collision categories this body may collide with.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.mask\r\n     * @type object\r\n     * @default -1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\r\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\r\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\r\n     *\r\n     * @property slop\r\n     * @type number\r\n     * @default 0.05\r\n     */\r\n\r\n    /**\r\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\r\n     *\r\n     * @property timeScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\r\n     *\r\n     * @property render\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates if the body should be rendered.\r\n     *\r\n     * @property render.visible\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * Sets the opacity to use when rendering.\r\n     *\r\n     * @property render.opacity\r\n     * @type number\r\n     * @default 1\r\n    */\r\n\r\n    /**\r\n     * An `Object` that defines the sprite properties to use when rendering, if any.\r\n     *\r\n     * @property render.sprite\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\r\n     *\r\n     * @property render.sprite.texture\r\n     * @type string\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.xScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.yScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n     /**\r\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\r\n      *\r\n      * @property render.sprite.xOffset\r\n      * @type number\r\n      * @default 0\r\n      */\r\n\r\n     /**\r\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\r\n      *\r\n      * @property render.sprite.yOffset\r\n      * @type number\r\n      * @default 0\r\n      */\r\n\r\n    /**\r\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\r\n     * A value of `0` means no outline will be rendered.\r\n     *\r\n     * @property render.lineWidth\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.fillStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.strokeStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * An array of unique axis vectors (edge normals) used for collision detection.\r\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\r\n     * They are constantly updated by `Body.update` during the simulation.\r\n     *\r\n     * @property axes\r\n     * @type vector[]\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\r\n     *\r\n     * @property area\r\n     * @type string\r\n     * @default \r\n     */\r\n\r\n    /**\r\n     * A `Bounds` object that defines the AABB region for the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\r\n     *\r\n     * @property bounds\r\n     * @type bounds\r\n     */\r\n\r\n})();\r\n"},"lineCount":1203}},"hash":"a9b5e02cfc000a951745192020412893","cacheData":{"env":{}}}