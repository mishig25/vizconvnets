{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1522260134000},{"name":"../errors","loc":{"line":3,"column":23}},{"name":"./generic_utils","loc":{"line":4,"column":30}},{"name":"./math_utils","loc":{"line":5,"column":27}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../errors\");\nvar generic_utils_1 = require(\"./generic_utils\");\nvar math_utils_1 = require(\"./math_utils\");\nfunction normalizeArray(value, n, name) {\n    if (typeof value === 'number') {\n        return generic_utils_1.pyListRepeat(value, n);\n    }\n    else {\n        if (value.length !== n) {\n            throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                (value.length + \" elements.\"));\n        }\n        for (var i = 0; i < n; ++i) {\n            var singleValue = value[i];\n            if (!math_utils_1.isInteger(singleValue)) {\n                throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                    (JSON.stringify(value) + \" including a non-integer number \") +\n                    (\"\" + singleValue));\n            }\n        }\n        return value;\n    }\n}\nexports.normalizeArray = normalizeArray;\nfunction convOutputLength(inputLength, fliterSize, padding, stride, dilation) {\n    if (dilation === void 0) { dilation = 1; }\n    if (inputLength == null) {\n        return inputLength;\n    }\n    var dilatedFilterSize = fliterSize + (fliterSize - 1) * (dilation - 1);\n    var outputLength;\n    if (padding === 'same') {\n        outputLength = inputLength;\n    }\n    else {\n        outputLength = inputLength - dilatedFilterSize + 1;\n    }\n    return Math.floor((outputLength + stride - 1) / stride);\n}\nexports.convOutputLength = convOutputLength;\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-layers/dist/utils/conv_utils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar errors_1 = require(\"../errors\");\nvar generic_utils_1 = require(\"./generic_utils\");\nvar math_utils_1 = require(\"./math_utils\");\nfunction normalizeArray(value, n, name) {\n    if (typeof value === 'number') {\n        return generic_utils_1.pyListRepeat(value, n);\n    }\n    else {\n        if (value.length !== n) {\n            throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                (value.length + \" elements.\"));\n        }\n        for (var i = 0; i < n; ++i) {\n            var singleValue = value[i];\n            if (!math_utils_1.isInteger(singleValue)) {\n                throw new errors_1.ValueError(\"The \" + name + \" argument must be a tuple of \" + n + \" integers. Received: \" +\n                    (JSON.stringify(value) + \" including a non-integer number \") +\n                    (\"\" + singleValue));\n            }\n        }\n        return value;\n    }\n}\nexports.normalizeArray = normalizeArray;\nfunction convOutputLength(inputLength, fliterSize, padding, stride, dilation) {\n    if (dilation === void 0) { dilation = 1; }\n    if (inputLength == null) {\n        return inputLength;\n    }\n    var dilatedFilterSize = fliterSize + (fliterSize - 1) * (dilation - 1);\n    var outputLength;\n    if (padding === 'same') {\n        outputLength = inputLength;\n    }\n    else {\n        outputLength = inputLength - dilatedFilterSize + 1;\n    }\n    return Math.floor((outputLength + stride - 1) / stride);\n}\nexports.convOutputLength = convOutputLength;\n"},"lineCount":43}},"hash":"e2dd811badfbf7dcc5c9b43eb935fbac","cacheData":{"env":{}}}