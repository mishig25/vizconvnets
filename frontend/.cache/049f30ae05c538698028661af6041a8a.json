{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../math/Vector3","loc":{"line":7,"column":22}},{"name":"../math/Matrix4","loc":{"line":8,"column":22}},{"name":"../math/Quaternion","loc":{"line":9,"column":25}}],"generated":{"js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar Vector3 = require('../math/Vector3');\r\nvar Matrix4 = require('../math/Matrix4');\r\nvar Quaternion = require('../math/Quaternion');\r\n\r\nvar tmpMat4 = new Matrix4();\r\nvar tmpQuat = new Quaternion();\r\nvar tmpVec3 = new Vector3();\r\n\r\n/**\r\n * Rotates a vector in place by axis angle.\r\n *\r\n * This is the same as transforming a point by an \r\n * axis-angle quaternion, but it has higher precision.\r\n *\r\n * @function Phaser.Math.RotateVec3\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Math.Vector3} vec - [description]\r\n * @param {Phaser.Math.Vector3} axis - [description]\r\n * @param {float} radians - [description]\r\n *\r\n * @return {Phaser.Math.Vector3} [description]\r\n */\r\nvar RotateVec3 = function (vec, axis, radians)\r\n{\r\n    //  Set the quaternion to our axis angle\r\n    tmpQuat.setAxisAngle(axis, radians);\r\n\r\n    //  Create a rotation matrix from the axis angle\r\n    tmpMat4.fromRotationTranslation(tmpQuat, tmpVec3.set(0, 0, 0));\r\n\r\n    //  Multiply our vector by the rotation matrix\r\n    return vec.transformMat4(tmpMat4);\r\n};\r\n\r\nmodule.exports = RotateVec3;\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/math/RotateVec3.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}}],"sources":{"node_modules/phaser/src/math/RotateVec3.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\nvar Vector3 = require('../math/Vector3');\r\nvar Matrix4 = require('../math/Matrix4');\r\nvar Quaternion = require('../math/Quaternion');\r\n\r\nvar tmpMat4 = new Matrix4();\r\nvar tmpQuat = new Quaternion();\r\nvar tmpVec3 = new Vector3();\r\n\r\n/**\r\n * Rotates a vector in place by axis angle.\r\n *\r\n * This is the same as transforming a point by an \r\n * axis-angle quaternion, but it has higher precision.\r\n *\r\n * @function Phaser.Math.RotateVec3\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Math.Vector3} vec - [description]\r\n * @param {Phaser.Math.Vector3} axis - [description]\r\n * @param {float} radians - [description]\r\n *\r\n * @return {Phaser.Math.Vector3} [description]\r\n */\r\nvar RotateVec3 = function (vec, axis, radians)\r\n{\r\n    //  Set the quaternion to our axis angle\r\n    tmpQuat.setAxisAngle(axis, radians);\r\n\r\n    //  Create a rotation matrix from the axis angle\r\n    tmpMat4.fromRotationTranslation(tmpQuat, tmpVec3.set(0, 0, 0));\r\n\r\n    //  Multiply our vector by the rotation matrix\r\n    return vec.transformMat4(tmpMat4);\r\n};\r\n\r\nmodule.exports = RotateVec3;\r\n"},"lineCount":43}},"hash":"2d7cc8bdf52c0ca9139db504ad283539","cacheData":{"env":{}}}