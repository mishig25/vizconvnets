{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../point/Point","loc":{"line":7,"column":20}}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a uniformly distributed random point from anywhere within the given Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.Random\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get a random point from.\r\n * @param {(Phaser.Geom.Point|object)} [point] - A Point or point-like object to set the random `x` and `y` values in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object with the random values set in the `x` and `y` properties.\r\n */\r\nvar Random = function (ellipse, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var p = Math.random() * Math.PI * 2;\r\n    var s = Math.sqrt(Math.random());\r\n\r\n    out.x = ellipse.x + ((s * Math.cos(p)) * ellipse.width / 2);\r\n    out.y = ellipse.y + ((s * Math.sin(p)) * ellipse.height / 2);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Random;\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/geom/ellipse/Random.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/phaser/src/geom/ellipse/Random.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Point = require('../point/Point');\r\n\r\n/**\r\n * Returns a uniformly distributed random point from anywhere within the given Ellipse.\r\n *\r\n * @function Phaser.Geom.Ellipse.Random\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Geom.Ellipse} ellipse - The Ellipse to get a random point from.\r\n * @param {(Phaser.Geom.Point|object)} [point] - A Point or point-like object to set the random `x` and `y` values in.\r\n *\r\n * @return {(Phaser.Geom.Point|object)} A Point object with the random values set in the `x` and `y` properties.\r\n */\r\nvar Random = function (ellipse, out)\r\n{\r\n    if (out === undefined) { out = new Point(); }\r\n\r\n    var p = Math.random() * Math.PI * 2;\r\n    var s = Math.sqrt(Math.random());\r\n\r\n    out.x = ellipse.x + ((s * Math.cos(p)) * ellipse.width / 2);\r\n    out.y = ellipse.y + ((s * Math.sin(p)) * ellipse.height / 2);\r\n\r\n    return out;\r\n};\r\n\r\nmodule.exports = Random;\r\n"},"lineCount":34}},"hash":"1e4f5dbf35b5ef17cda76bd69cc4f824","cacheData":{"env":{}}}