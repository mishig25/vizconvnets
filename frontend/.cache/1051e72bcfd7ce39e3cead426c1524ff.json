{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1522260134000},{"name":"./backend/tfjs_backend","loc":{"line":3,"column":16}},{"name":"./errors","loc":{"line":4,"column":23}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nfunction meanSquaredError(yTrue, yPred) {\n    return K.mean(K.square(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanSquaredError = meanSquaredError;\nfunction meanAbsoluteError(yTrue, yPred) {\n    return K.mean(K.abs(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanAbsoluteError = meanAbsoluteError;\nfunction meanAbsolutePercentageError(yTrue, yPred) {\n    var diff = K.subtract(yTrue, yPred);\n    var clippedTrue = K.clip(K.abs(yTrue), K.epsilon(), Number.MAX_VALUE);\n    var absResult = K.abs(K.divide(diff, clippedTrue));\n    return K.scalarTimesArray(K.getScalar(100.0), K.mean(absResult, -1));\n}\nexports.meanAbsolutePercentageError = meanAbsolutePercentageError;\nfunction meanSquaredLogarithmicError(yTrue, yPred) {\n    var one = K.getScalar(1.0);\n    var clippedPred = K.clip(yPred, K.epsilon(), Number.MAX_VALUE);\n    var firstLog = K.log(K.scalarPlusArray(one, clippedPred));\n    var clippedTrue = K.clip(yTrue, K.epsilon(), Number.MAX_VALUE);\n    var secondLog = K.log(K.scalarPlusArray(one, clippedTrue));\n    return K.mean(K.square(K.subtract(firstLog, secondLog)), -1);\n}\nexports.meanSquaredLogarithmicError = meanSquaredLogarithmicError;\nfunction squaredHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(K.square(maxResult), -1);\n}\nexports.squaredHinge = squaredHinge;\nfunction hinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(maxResult, -1);\n}\nexports.hinge = hinge;\nfunction categoricalHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var pos = K.sum(K.multiply(yTrue, yPred), -1);\n    var neg = K.max(K.multiply(K.subtract(one, yTrue), yPred), -1);\n    return K.maximum(zeroTensor, K.scalarPlusArray(one, K.subtract(neg, pos)));\n}\nexports.categoricalHinge = categoricalHinge;\nfunction logcosh(yTrue, yPred) {\n    var log2 = K.getScalar(Math.log(2.0));\n    var predictionDiff = K.subtract(yPred, yTrue);\n    var logcoshResult = K.subtract(K.add(predictionDiff, K.softplus(K.scalarTimesArray(K.getScalar(-2.0), predictionDiff))), log2);\n    return K.mean(logcoshResult, -1);\n}\nexports.logcosh = logcosh;\nfunction categoricalCrossentropy(yTrue, yPred) {\n    return K.categoricalCrossentropy(yTrue, yPred);\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalCrossentropy(yTrue, yPred) {\n    return K.sparseCategoricalCrossentropy(yTrue, yPred);\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    return K.mean(K.binaryCrossentropy(yTrue, yPred), -1);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction kullbackLeiblerDivergence(yTrue, yPred) {\n    var clippedTrue = K.clip(yTrue, K.epsilon(), 1);\n    var clippedPred = K.clip(yPred, K.epsilon(), 1);\n    return K.sum(K.multiply(yTrue, K.log(K.divide(clippedTrue, clippedPred))), -1);\n}\nexports.kullbackLeiblerDivergence = kullbackLeiblerDivergence;\nfunction poisson(yTrue, yPred) {\n    var logPred = K.log(K.scalarPlusArray(K.getScalar(K.epsilon()), yPred));\n    return K.mean(K.subtract(yPred, K.multiply(yTrue, logPred)), -1);\n}\nexports.poisson = poisson;\nfunction cosineProximity(yTrue, yPred) {\n    var trueNormalized = K.l2Normalize(yTrue, -1);\n    var predNormalized = K.l2Normalize(yPred, -1);\n    var trueXPred = K.multiply(trueNormalized, predNormalized);\n    return K.neg(K.sum(trueXPred, -1));\n}\nexports.cosineProximity = cosineProximity;\nexports.mse = meanSquaredError;\nexports.MSE = meanSquaredError;\nexports.mae = meanAbsoluteError;\nexports.MAE = meanAbsoluteError;\nexports.mape = meanAbsolutePercentageError;\nexports.MAPE = meanAbsolutePercentageError;\nexports.msle = meanSquaredLogarithmicError;\nexports.MSLE = meanSquaredLogarithmicError;\nexports.kld = kullbackLeiblerDivergence;\nexports.KLD = kullbackLeiblerDivergence;\nexports.cosine = cosineProximity;\nfunction get(identifier) {\n    var lossesMap = {\n        meanSquaredError: meanSquaredError,\n        meanAbsoluteError: meanAbsoluteError,\n        meanAbsolutePercentageError: meanAbsolutePercentageError,\n        meanSquaredLogarithmicError: meanSquaredLogarithmicError,\n        squaredHinge: squaredHinge,\n        hinge: hinge,\n        categoricalHinge: categoricalHinge,\n        logcosh: logcosh,\n        categoricalCrossentropy: categoricalCrossentropy,\n        sparseCategoricalCrossentropy: sparseCategoricalCrossentropy,\n        binaryCrossentropy: binaryCrossentropy,\n        kullbackLeiblerDivergence: kullbackLeiblerDivergence,\n        poisson: poisson,\n        cosineProximity: cosineProximity\n    };\n    if (identifier in lossesMap) {\n        return lossesMap[identifier];\n    }\n    throw new errors_1.ValueError(\"Unknown loss \" + identifier);\n}\nexports.get = get;\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/losses.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-layers/dist/losses.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"./backend/tfjs_backend\");\nvar errors_1 = require(\"./errors\");\nfunction meanSquaredError(yTrue, yPred) {\n    return K.mean(K.square(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanSquaredError = meanSquaredError;\nfunction meanAbsoluteError(yTrue, yPred) {\n    return K.mean(K.abs(K.subtract(yPred, yTrue)), -1);\n}\nexports.meanAbsoluteError = meanAbsoluteError;\nfunction meanAbsolutePercentageError(yTrue, yPred) {\n    var diff = K.subtract(yTrue, yPred);\n    var clippedTrue = K.clip(K.abs(yTrue), K.epsilon(), Number.MAX_VALUE);\n    var absResult = K.abs(K.divide(diff, clippedTrue));\n    return K.scalarTimesArray(K.getScalar(100.0), K.mean(absResult, -1));\n}\nexports.meanAbsolutePercentageError = meanAbsolutePercentageError;\nfunction meanSquaredLogarithmicError(yTrue, yPred) {\n    var one = K.getScalar(1.0);\n    var clippedPred = K.clip(yPred, K.epsilon(), Number.MAX_VALUE);\n    var firstLog = K.log(K.scalarPlusArray(one, clippedPred));\n    var clippedTrue = K.clip(yTrue, K.epsilon(), Number.MAX_VALUE);\n    var secondLog = K.log(K.scalarPlusArray(one, clippedTrue));\n    return K.mean(K.square(K.subtract(firstLog, secondLog)), -1);\n}\nexports.meanSquaredLogarithmicError = meanSquaredLogarithmicError;\nfunction squaredHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(K.square(maxResult), -1);\n}\nexports.squaredHinge = squaredHinge;\nfunction hinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var maxResult = K.maximum(zeroTensor, K.subtract(one, K.multiply(yTrue, yPred)));\n    return K.mean(maxResult, -1);\n}\nexports.hinge = hinge;\nfunction categoricalHinge(yTrue, yPred) {\n    var zeroTensor = K.getScalar(0.0);\n    var one = K.getScalar(1.0);\n    var pos = K.sum(K.multiply(yTrue, yPred), -1);\n    var neg = K.max(K.multiply(K.subtract(one, yTrue), yPred), -1);\n    return K.maximum(zeroTensor, K.scalarPlusArray(one, K.subtract(neg, pos)));\n}\nexports.categoricalHinge = categoricalHinge;\nfunction logcosh(yTrue, yPred) {\n    var log2 = K.getScalar(Math.log(2.0));\n    var predictionDiff = K.subtract(yPred, yTrue);\n    var logcoshResult = K.subtract(K.add(predictionDiff, K.softplus(K.scalarTimesArray(K.getScalar(-2.0), predictionDiff))), log2);\n    return K.mean(logcoshResult, -1);\n}\nexports.logcosh = logcosh;\nfunction categoricalCrossentropy(yTrue, yPred) {\n    return K.categoricalCrossentropy(yTrue, yPred);\n}\nexports.categoricalCrossentropy = categoricalCrossentropy;\nfunction sparseCategoricalCrossentropy(yTrue, yPred) {\n    return K.sparseCategoricalCrossentropy(yTrue, yPred);\n}\nexports.sparseCategoricalCrossentropy = sparseCategoricalCrossentropy;\nfunction binaryCrossentropy(yTrue, yPred) {\n    return K.mean(K.binaryCrossentropy(yTrue, yPred), -1);\n}\nexports.binaryCrossentropy = binaryCrossentropy;\nfunction kullbackLeiblerDivergence(yTrue, yPred) {\n    var clippedTrue = K.clip(yTrue, K.epsilon(), 1);\n    var clippedPred = K.clip(yPred, K.epsilon(), 1);\n    return K.sum(K.multiply(yTrue, K.log(K.divide(clippedTrue, clippedPred))), -1);\n}\nexports.kullbackLeiblerDivergence = kullbackLeiblerDivergence;\nfunction poisson(yTrue, yPred) {\n    var logPred = K.log(K.scalarPlusArray(K.getScalar(K.epsilon()), yPred));\n    return K.mean(K.subtract(yPred, K.multiply(yTrue, logPred)), -1);\n}\nexports.poisson = poisson;\nfunction cosineProximity(yTrue, yPred) {\n    var trueNormalized = K.l2Normalize(yTrue, -1);\n    var predNormalized = K.l2Normalize(yPred, -1);\n    var trueXPred = K.multiply(trueNormalized, predNormalized);\n    return K.neg(K.sum(trueXPred, -1));\n}\nexports.cosineProximity = cosineProximity;\nexports.mse = meanSquaredError;\nexports.MSE = meanSquaredError;\nexports.mae = meanAbsoluteError;\nexports.MAE = meanAbsoluteError;\nexports.mape = meanAbsolutePercentageError;\nexports.MAPE = meanAbsolutePercentageError;\nexports.msle = meanSquaredLogarithmicError;\nexports.MSLE = meanSquaredLogarithmicError;\nexports.kld = kullbackLeiblerDivergence;\nexports.KLD = kullbackLeiblerDivergence;\nexports.cosine = cosineProximity;\nfunction get(identifier) {\n    var lossesMap = {\n        meanSquaredError: meanSquaredError,\n        meanAbsoluteError: meanAbsoluteError,\n        meanAbsolutePercentageError: meanAbsolutePercentageError,\n        meanSquaredLogarithmicError: meanSquaredLogarithmicError,\n        squaredHinge: squaredHinge,\n        hinge: hinge,\n        categoricalHinge: categoricalHinge,\n        logcosh: logcosh,\n        categoricalCrossentropy: categoricalCrossentropy,\n        sparseCategoricalCrossentropy: sparseCategoricalCrossentropy,\n        binaryCrossentropy: binaryCrossentropy,\n        kullbackLeiblerDivergence: kullbackLeiblerDivergence,\n        poisson: poisson,\n        cosineProximity: cosineProximity\n    };\n    if (identifier in lossesMap) {\n        return lossesMap[identifier];\n    }\n    throw new errors_1.ValueError(\"Unknown loss \" + identifier);\n}\nexports.get = get;\n"},"lineCount":122}},"hash":"e563f8a944cbc598adeddbfda4c4fe34","cacheData":{"env":{}}}