{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"./lib/factory/Bodies","loc":{"line":7,"column":21}},{"name":"./lib/body/Body","loc":{"line":8,"column":19}},{"name":"../../utils/Class","loc":{"line":9,"column":20}},{"name":"./components","loc":{"line":10,"column":25}},{"name":"../../utils/object/GetFastValue","loc":{"line":11,"column":27}},{"name":"../../utils/object/HasValue","loc":{"line":12,"column":23}},{"name":"./lib/geometry/Vertices","loc":{"line":13,"column":23}}],"generated":{"js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Bodies = require('./lib/factory/Bodies');\r\nvar Body = require('./lib/body/Body');\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('./components');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar HasValue = require('../../utils/object/HasValue');\r\nvar Vertices = require('./lib/geometry/Vertices');\r\n\r\n/**\r\n * @classdesc\r\n * A wrapper around a Tile that provides access to a corresponding Matter body. A tile can only\r\n * have one Matter body associated with it. You can either pass in an existing Matter body for\r\n * the tile or allow the constructor to create the corresponding body for you. If the Tile has a\r\n * collision group (defined in Tiled), those shapes will be used to create the body. If not, the\r\n * tile's rectangle bounding box will be used.\r\n *\r\n * The corresponding body will be accessible on the Tile itself via Tile.physics.matterBody.\r\n *\r\n * Note: not all Tiled collision shapes are supported. See\r\n * Phaser.Physics.Matter.TileBody#setFromTileCollision for more information.\r\n *\r\n * @class TileBody\r\n * @memberOf Phaser.Physics.Matter\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Matter.Components.Bounce\r\n * @extends Phaser.Physics.Matter.Components.Collision\r\n * @extends Phaser.Physics.Matter.Components.Friction\r\n * @extends Phaser.Physics.Matter.Components.Gravity\r\n * @extends Phaser.Physics.Matter.Components.Mass\r\n * @extends Phaser.Physics.Matter.Components.Sensor\r\n * @extends Phaser.Physics.Matter.Components.Sleep\r\n * @extends Phaser.Physics.Matter.Components.Static\r\n *\r\n * @param {Phaser.Physics.Matter.World} world - [description]\r\n * @param {Phaser.GameObjects.Tile} tile - The target tile that should have a Matter body.\r\n * @param {object} [options] - Options to be used when creating the Matter body. See\r\n * Phaser.Physics.Matter.Matter.Body for a list of what Matter accepts.\r\n * @param {Phaser.Physics.Matter.Matter.Body} [options.body=null] - An existing Matter body to\r\n * be used instead of creating a new one.\r\n * @param {boolean} [options.isStatic=true] - Whether or not the newly created body should be\r\n * made static. This defaults to true since typically tiles should not be moved.\r\n * @param {boolean} [options.addToWorld=true] - Whether or not to add the newly created body (or\r\n * existing body if options.body is used) to the Matter world.\r\n */\r\nvar MatterTileBody = new Class({\r\n\r\n    Mixins: [\r\n        Components.Bounce,\r\n        Components.Collision,\r\n        Components.Friction,\r\n        Components.Gravity,\r\n        Components.Mass,\r\n        Components.Sensor,\r\n        Components.Sleep,\r\n        Components.Static\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function MatterTileBody (world, tile, options)\r\n    {\r\n        /**\r\n         * The tile object the body is associated with.\r\n         *\r\n         * @name Phaser.Physics.Matter.TileBody#tile\r\n         * @type {Phaser.GameObjects.Tile}\r\n         * @since 3.0.0\r\n         */\r\n        this.tile = tile;\r\n\r\n        /**\r\n         * The Matter world the body exists within.\r\n         *\r\n         * @name Phaser.Physics.Matter.TileBody#world\r\n         * @type {Phaser.Physics.Matter.World}\r\n         * @since 3.0.0\r\n         */\r\n        this.world = world;\r\n\r\n        // Install a reference to 'this' on the tile and ensure there can only be one matter body\r\n        // associated with the tile\r\n        if (tile.physics.matterBody)\r\n        {\r\n            tile.physics.matterBody.destroy();\r\n        }\r\n\r\n        tile.physics.matterBody = this;\r\n\r\n        // Set the body either from an existing body (if provided), the shapes in the tileset\r\n        // collision layer (if it exists) or a rectangle matching the tile.\r\n        var body = GetFastValue(options, 'body', null);\r\n\r\n        var addToWorld = GetFastValue(options, 'addToWorld', true);\r\n\r\n        if (!body)\r\n        {\r\n            var collisionGroup = tile.getCollisionGroup();\r\n            var collisionObjects = GetFastValue(collisionGroup, 'objects', []);\r\n\r\n            if (collisionObjects.length > 0)\r\n            {\r\n                this.setFromTileCollision(options);\r\n            }\r\n            else\r\n            {\r\n                this.setFromTileRectangle(options);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.setBody(body, addToWorld);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the current body to a rectangle that matches the bounds of the tile.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#setFromTileRectangle\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} [options] - Options to be used when creating the Matter body. See\r\n     * Phaser.Physics.Matter.Matter.Body for a list of what Matter accepts.\r\n     * @param {boolean} [options.isStatic=true] - Whether or not the newly created body should be\r\n     * made static. This defaults to true since typically tiles should not be moved.\r\n     * @param {boolean} [options.addToWorld=true] - Whether or not to add the newly created body (or\r\n     * existing body if options.body is used) to the Matter world.\r\n     * \r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    setFromTileRectangle: function (options)\r\n    {\r\n        if (options === undefined) { options = {}; }\r\n        if (!HasValue(options, 'isStatic')) { options.isStatic = true; }\r\n        if (!HasValue(options, 'addToWorld')) { options.addToWorld = true; }\r\n\r\n        var bounds = this.tile.getBounds();\r\n        var cx = bounds.x + (bounds.width / 2);\r\n        var cy = bounds.y + (bounds.height / 2);\r\n        var body = Bodies.rectangle(cx, cy, bounds.width, bounds.height, options);\r\n\r\n        this.setBody(body, options.addToWorld);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the current body from the collision group associated with the Tile. This is typically\r\n     * set up in Tiled's collision editor.\r\n     *\r\n     * Note: Matter doesn't support all shapes from Tiled. Rectangles and polygons are directly\r\n     * supported. Ellipses are converted into circle bodies. Polylines are treated as if they are\r\n     * closed polygons. If a tile has multiple shapes, a multi-part body will be created. Concave\r\n     * shapes are supported if poly-decomp library is included. Decomposition is not guaranteed to\r\n     * work for complex shapes (e.g. holes), so it's often best to manually decompose a concave\r\n     * polygon into multiple convex polygons yourself.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#setFromTileCollision\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} [options] - Options to be used when creating the Matter body. See\r\n     * Phaser.Physics.Matter.Matter.Body for a list of what Matter accepts.\r\n     * @param {boolean} [options.isStatic=true] - Whether or not the newly created body should be\r\n     * made static. This defaults to true since typically tiles should not be moved.\r\n     * @param {boolean} [options.addToWorld=true] - Whether or not to add the newly created body (or\r\n     * existing body if options.body is used) to the Matter world.\r\n     * \r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    setFromTileCollision: function (options)\r\n    {\r\n        if (options === undefined) { options = {}; }\r\n        if (!HasValue(options, 'isStatic')) { options.isStatic = true; }\r\n        if (!HasValue(options, 'addToWorld')) { options.addToWorld = true; }\r\n\r\n        var sx = this.tile.tilemapLayer.scaleX;\r\n        var sy = this.tile.tilemapLayer.scaleY;\r\n        var tileX = this.tile.getLeft();\r\n        var tileY = this.tile.getTop();\r\n        var collisionGroup = this.tile.getCollisionGroup();\r\n        var collisionObjects = GetFastValue(collisionGroup, 'objects', []);\r\n\r\n        var parts = [];\r\n\r\n        for (var i = 0; i < collisionObjects.length; i++)\r\n        {\r\n            var object = collisionObjects[i];\r\n            var ox = tileX + (object.x * sx);\r\n            var oy = tileY + (object.y * sy);\r\n            var ow = object.width * sx;\r\n            var oh = object.height * sy;\r\n            var body = null;\r\n\r\n            if (object.rectangle)\r\n            {\r\n                body = Bodies.rectangle(ox + ow / 2, oy + oh / 2, ow, oh, options);\r\n            }\r\n            else if (object.ellipse)\r\n            {\r\n                body = Bodies.circle(ox + ow / 2, oy + oh / 2, ow / 2, options);\r\n            }\r\n            else if (object.polygon || object.polyline)\r\n            {\r\n                // Polygons and polylines are both treated as closed polygons\r\n                var originalPoints = object.polygon ? object.polygon : object.polyline;\r\n\r\n                var points = originalPoints.map(function (p)\r\n                {\r\n                    return { x: p.x * sx, y: p.y * sy };\r\n                });\r\n\r\n                var vertices = Vertices.create(points);\r\n\r\n                // Points are relative to the object's origin (first point placed in Tiled), but\r\n                // matter expects points to be relative to the center of mass. This only applies to\r\n                // convex shapes. When a concave shape is decomposed, multiple parts are created and\r\n                // the individual parts are positioned relative to (ox, oy).\r\n                if (Vertices.isConvex(points))\r\n                {\r\n                    var center = Vertices.centre(vertices);\r\n                    ox += center.x;\r\n                    oy += center.y;\r\n                }\r\n\r\n                body = Bodies.fromVertices(ox, oy, vertices, options);\r\n            }\r\n\r\n            if (body)\r\n            {\r\n                parts.push(body);\r\n            }\r\n        }\r\n\r\n        if (parts.length === 1)\r\n        {\r\n            this.setBody(parts[0], options.addToWorld);\r\n        }\r\n        else if (parts.length > 1)\r\n        {\r\n            options.parts = parts;\r\n            this.setBody(Body.create(options), options.addToWorld);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the current body to the given body. This will remove the previous body, if one already\r\n     * exists.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#setBody\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Physics.Matter.Matter.Body} body - The new Matter body to use.\r\n     * @param {boolean} [addToWorld=true] - Whether or not to add the body to the Matter world.\r\n     * \r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    setBody: function (body, addToWorld)\r\n    {\r\n        if (addToWorld === undefined) { addToWorld = true; }\r\n\r\n        if (this.body)\r\n        {\r\n            this.removeBody();\r\n        }\r\n\r\n        this.body = body;\r\n        this.body.gameObject = this;\r\n\r\n        if (addToWorld)\r\n        {\r\n            this.world.add(this.body);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes the current body from the TileBody and from the Matter world\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#removeBody\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    removeBody: function ()\r\n    {\r\n        if (this.body)\r\n        {\r\n            this.world.remove(this.body);\r\n            this.body.gameObject = undefined;\r\n            this.body = undefined;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes the current body from the tile and the world.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#removeBody\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.removeBody();\r\n        this.tile.physics.matterBody = undefined;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = MatterTileBody;\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/MatterTileBody.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}}],"sources":{"node_modules/phaser/src/physics/matter-js/MatterTileBody.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Bodies = require('./lib/factory/Bodies');\r\nvar Body = require('./lib/body/Body');\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('./components');\r\nvar GetFastValue = require('../../utils/object/GetFastValue');\r\nvar HasValue = require('../../utils/object/HasValue');\r\nvar Vertices = require('./lib/geometry/Vertices');\r\n\r\n/**\r\n * @classdesc\r\n * A wrapper around a Tile that provides access to a corresponding Matter body. A tile can only\r\n * have one Matter body associated with it. You can either pass in an existing Matter body for\r\n * the tile or allow the constructor to create the corresponding body for you. If the Tile has a\r\n * collision group (defined in Tiled), those shapes will be used to create the body. If not, the\r\n * tile's rectangle bounding box will be used.\r\n *\r\n * The corresponding body will be accessible on the Tile itself via Tile.physics.matterBody.\r\n *\r\n * Note: not all Tiled collision shapes are supported. See\r\n * Phaser.Physics.Matter.TileBody#setFromTileCollision for more information.\r\n *\r\n * @class TileBody\r\n * @memberOf Phaser.Physics.Matter\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.Physics.Matter.Components.Bounce\r\n * @extends Phaser.Physics.Matter.Components.Collision\r\n * @extends Phaser.Physics.Matter.Components.Friction\r\n * @extends Phaser.Physics.Matter.Components.Gravity\r\n * @extends Phaser.Physics.Matter.Components.Mass\r\n * @extends Phaser.Physics.Matter.Components.Sensor\r\n * @extends Phaser.Physics.Matter.Components.Sleep\r\n * @extends Phaser.Physics.Matter.Components.Static\r\n *\r\n * @param {Phaser.Physics.Matter.World} world - [description]\r\n * @param {Phaser.GameObjects.Tile} tile - The target tile that should have a Matter body.\r\n * @param {object} [options] - Options to be used when creating the Matter body. See\r\n * Phaser.Physics.Matter.Matter.Body for a list of what Matter accepts.\r\n * @param {Phaser.Physics.Matter.Matter.Body} [options.body=null] - An existing Matter body to\r\n * be used instead of creating a new one.\r\n * @param {boolean} [options.isStatic=true] - Whether or not the newly created body should be\r\n * made static. This defaults to true since typically tiles should not be moved.\r\n * @param {boolean} [options.addToWorld=true] - Whether or not to add the newly created body (or\r\n * existing body if options.body is used) to the Matter world.\r\n */\r\nvar MatterTileBody = new Class({\r\n\r\n    Mixins: [\r\n        Components.Bounce,\r\n        Components.Collision,\r\n        Components.Friction,\r\n        Components.Gravity,\r\n        Components.Mass,\r\n        Components.Sensor,\r\n        Components.Sleep,\r\n        Components.Static\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function MatterTileBody (world, tile, options)\r\n    {\r\n        /**\r\n         * The tile object the body is associated with.\r\n         *\r\n         * @name Phaser.Physics.Matter.TileBody#tile\r\n         * @type {Phaser.GameObjects.Tile}\r\n         * @since 3.0.0\r\n         */\r\n        this.tile = tile;\r\n\r\n        /**\r\n         * The Matter world the body exists within.\r\n         *\r\n         * @name Phaser.Physics.Matter.TileBody#world\r\n         * @type {Phaser.Physics.Matter.World}\r\n         * @since 3.0.0\r\n         */\r\n        this.world = world;\r\n\r\n        // Install a reference to 'this' on the tile and ensure there can only be one matter body\r\n        // associated with the tile\r\n        if (tile.physics.matterBody)\r\n        {\r\n            tile.physics.matterBody.destroy();\r\n        }\r\n\r\n        tile.physics.matterBody = this;\r\n\r\n        // Set the body either from an existing body (if provided), the shapes in the tileset\r\n        // collision layer (if it exists) or a rectangle matching the tile.\r\n        var body = GetFastValue(options, 'body', null);\r\n\r\n        var addToWorld = GetFastValue(options, 'addToWorld', true);\r\n\r\n        if (!body)\r\n        {\r\n            var collisionGroup = tile.getCollisionGroup();\r\n            var collisionObjects = GetFastValue(collisionGroup, 'objects', []);\r\n\r\n            if (collisionObjects.length > 0)\r\n            {\r\n                this.setFromTileCollision(options);\r\n            }\r\n            else\r\n            {\r\n                this.setFromTileRectangle(options);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.setBody(body, addToWorld);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the current body to a rectangle that matches the bounds of the tile.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#setFromTileRectangle\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} [options] - Options to be used when creating the Matter body. See\r\n     * Phaser.Physics.Matter.Matter.Body for a list of what Matter accepts.\r\n     * @param {boolean} [options.isStatic=true] - Whether or not the newly created body should be\r\n     * made static. This defaults to true since typically tiles should not be moved.\r\n     * @param {boolean} [options.addToWorld=true] - Whether or not to add the newly created body (or\r\n     * existing body if options.body is used) to the Matter world.\r\n     * \r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    setFromTileRectangle: function (options)\r\n    {\r\n        if (options === undefined) { options = {}; }\r\n        if (!HasValue(options, 'isStatic')) { options.isStatic = true; }\r\n        if (!HasValue(options, 'addToWorld')) { options.addToWorld = true; }\r\n\r\n        var bounds = this.tile.getBounds();\r\n        var cx = bounds.x + (bounds.width / 2);\r\n        var cy = bounds.y + (bounds.height / 2);\r\n        var body = Bodies.rectangle(cx, cy, bounds.width, bounds.height, options);\r\n\r\n        this.setBody(body, options.addToWorld);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the current body from the collision group associated with the Tile. This is typically\r\n     * set up in Tiled's collision editor.\r\n     *\r\n     * Note: Matter doesn't support all shapes from Tiled. Rectangles and polygons are directly\r\n     * supported. Ellipses are converted into circle bodies. Polylines are treated as if they are\r\n     * closed polygons. If a tile has multiple shapes, a multi-part body will be created. Concave\r\n     * shapes are supported if poly-decomp library is included. Decomposition is not guaranteed to\r\n     * work for complex shapes (e.g. holes), so it's often best to manually decompose a concave\r\n     * polygon into multiple convex polygons yourself.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#setFromTileCollision\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} [options] - Options to be used when creating the Matter body. See\r\n     * Phaser.Physics.Matter.Matter.Body for a list of what Matter accepts.\r\n     * @param {boolean} [options.isStatic=true] - Whether or not the newly created body should be\r\n     * made static. This defaults to true since typically tiles should not be moved.\r\n     * @param {boolean} [options.addToWorld=true] - Whether or not to add the newly created body (or\r\n     * existing body if options.body is used) to the Matter world.\r\n     * \r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    setFromTileCollision: function (options)\r\n    {\r\n        if (options === undefined) { options = {}; }\r\n        if (!HasValue(options, 'isStatic')) { options.isStatic = true; }\r\n        if (!HasValue(options, 'addToWorld')) { options.addToWorld = true; }\r\n\r\n        var sx = this.tile.tilemapLayer.scaleX;\r\n        var sy = this.tile.tilemapLayer.scaleY;\r\n        var tileX = this.tile.getLeft();\r\n        var tileY = this.tile.getTop();\r\n        var collisionGroup = this.tile.getCollisionGroup();\r\n        var collisionObjects = GetFastValue(collisionGroup, 'objects', []);\r\n\r\n        var parts = [];\r\n\r\n        for (var i = 0; i < collisionObjects.length; i++)\r\n        {\r\n            var object = collisionObjects[i];\r\n            var ox = tileX + (object.x * sx);\r\n            var oy = tileY + (object.y * sy);\r\n            var ow = object.width * sx;\r\n            var oh = object.height * sy;\r\n            var body = null;\r\n\r\n            if (object.rectangle)\r\n            {\r\n                body = Bodies.rectangle(ox + ow / 2, oy + oh / 2, ow, oh, options);\r\n            }\r\n            else if (object.ellipse)\r\n            {\r\n                body = Bodies.circle(ox + ow / 2, oy + oh / 2, ow / 2, options);\r\n            }\r\n            else if (object.polygon || object.polyline)\r\n            {\r\n                // Polygons and polylines are both treated as closed polygons\r\n                var originalPoints = object.polygon ? object.polygon : object.polyline;\r\n\r\n                var points = originalPoints.map(function (p)\r\n                {\r\n                    return { x: p.x * sx, y: p.y * sy };\r\n                });\r\n\r\n                var vertices = Vertices.create(points);\r\n\r\n                // Points are relative to the object's origin (first point placed in Tiled), but\r\n                // matter expects points to be relative to the center of mass. This only applies to\r\n                // convex shapes. When a concave shape is decomposed, multiple parts are created and\r\n                // the individual parts are positioned relative to (ox, oy).\r\n                if (Vertices.isConvex(points))\r\n                {\r\n                    var center = Vertices.centre(vertices);\r\n                    ox += center.x;\r\n                    oy += center.y;\r\n                }\r\n\r\n                body = Bodies.fromVertices(ox, oy, vertices, options);\r\n            }\r\n\r\n            if (body)\r\n            {\r\n                parts.push(body);\r\n            }\r\n        }\r\n\r\n        if (parts.length === 1)\r\n        {\r\n            this.setBody(parts[0], options.addToWorld);\r\n        }\r\n        else if (parts.length > 1)\r\n        {\r\n            options.parts = parts;\r\n            this.setBody(Body.create(options), options.addToWorld);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets the current body to the given body. This will remove the previous body, if one already\r\n     * exists.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#setBody\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Physics.Matter.Matter.Body} body - The new Matter body to use.\r\n     * @param {boolean} [addToWorld=true] - Whether or not to add the body to the Matter world.\r\n     * \r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    setBody: function (body, addToWorld)\r\n    {\r\n        if (addToWorld === undefined) { addToWorld = true; }\r\n\r\n        if (this.body)\r\n        {\r\n            this.removeBody();\r\n        }\r\n\r\n        this.body = body;\r\n        this.body.gameObject = this;\r\n\r\n        if (addToWorld)\r\n        {\r\n            this.world.add(this.body);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes the current body from the TileBody and from the Matter world\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#removeBody\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    removeBody: function ()\r\n    {\r\n        if (this.body)\r\n        {\r\n            this.world.remove(this.body);\r\n            this.body.gameObject = undefined;\r\n            this.body = undefined;\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes the current body from the tile and the world.\r\n     *\r\n     * @method Phaser.Physics.Matter.TileBody#removeBody\r\n     * @since 3.0.0\r\n     *\r\n     * @return {Phaser.Physics.Matter.TileBody} This TileBody object.\r\n     */\r\n    destroy: function ()\r\n    {\r\n        this.removeBody();\r\n        this.tile.physics.matterBody = undefined;\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = MatterTileBody;\r\n"},"lineCount":323}},"hash":"4e88ca81782df36dd3a289deb894ce2f","cacheData":{"env":{}}}