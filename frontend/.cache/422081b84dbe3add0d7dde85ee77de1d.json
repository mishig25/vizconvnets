{"dependencies":[{"name":"/home/mishig/Desktop/vizgithub/frontend/package.json","includedInParent":true,"mtime":1523230167415},{"name":"/home/mishig/Desktop/vizgithub/frontend/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1522260134000},{"name":"../backend/tfjs_backend","loc":{"line":13,"column":16}},{"name":"../engine/topology","loc":{"line":14,"column":25}},{"name":"../errors","loc":{"line":15,"column":23}},{"name":"../utils/generic_utils","loc":{"line":16,"column":28}},{"name":"./serialization","loc":{"line":17,"column":30}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"../backend/tfjs_backend\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar serialization_1 = require(\"./serialization\");\nvar Wrapper = (function (_super) {\n    __extends(Wrapper, _super);\n    function Wrapper(config) {\n        var _this = _super.call(this, config) || this;\n        _this.layer = config.layer;\n        _this.inputMap = {};\n        return _this;\n    }\n    Wrapper.prototype.build = function (inputShape) {\n        this.built = true;\n    };\n    Object.defineProperty(Wrapper.prototype, \"trainable\", {\n        get: function () {\n            if (this.layer != null) {\n                return this.layer.trainable;\n            }\n            else {\n                return false;\n            }\n        },\n        set: function (value) {\n            if (this.layer != null) {\n                this.layer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.layer.trainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.layer.nonTrainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"updates\", {\n        get: function () {\n            return this.layer._updates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"losses\", {\n        get: function () {\n            return this.layer.losses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Wrapper.prototype.getWeights = function () {\n        return this.layer.getWeights();\n    };\n    Wrapper.prototype.setWeights = function (weights) {\n        this.layer.setWeights(weights);\n    };\n    Wrapper.prototype.getConfig = function () {\n        var config = {\n            'layer': {\n                'className': this.layer.constructor.name,\n                'config': this.layer.getConfig(),\n            }\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    Wrapper.fromConfig = function (cls, config, customObjects) {\n        if (customObjects === void 0) { customObjects = {}; }\n        var layerConfig = config['layer'];\n        var layer = serialization_1.deserialize(layerConfig, customObjects);\n        delete config['layer'];\n        var newConfig = { layer: layer };\n        Object.assign(newConfig, config);\n        return new cls(newConfig);\n    };\n    return Wrapper;\n}(topology_1.Layer));\nexports.Wrapper = Wrapper;\nvar TimeDistributed = (function (_super) {\n    __extends(TimeDistributed, _super);\n    function TimeDistributed(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        return _this;\n    }\n    TimeDistributed.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length < 3) {\n            throw new errors_1.ValueError(\"TimeDistributed layer expects an input shape >= 3D, but received \" +\n                (\"input shape \" + JSON.stringify(inputShape)));\n        }\n        this.inputSpec = [{ shape: inputShape }];\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        if (!this.layer.built) {\n            this.layer.build(childInputShape);\n            this.layer.built = true;\n        }\n        _super.prototype.build.call(this, inputShape);\n    };\n    TimeDistributed.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        var childOutputShape = this.layer.computeOutputShape(childInputShape);\n        var timesteps = inputShape[1];\n        return [childOutputShape[0], timesteps].concat(childOutputShape.slice(1));\n    };\n    TimeDistributed.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var step = function (inputs, states) {\n            var output = _this.layer.call(inputs, kwargs);\n            return [output, []];\n        };\n        var rnnOutputs = K.rnn(step, inputs, [], false, null, null, false, inputs.shape[1]);\n        var y = rnnOutputs[1];\n        return y;\n    };\n    return TimeDistributed;\n}(Wrapper));\nexports.TimeDistributed = TimeDistributed;\ngeneric_utils.ClassNameMap.register('TimeDistributed', TimeDistributed);\nvar BidirectionalMergeMode;\n(function (BidirectionalMergeMode) {\n    BidirectionalMergeMode[BidirectionalMergeMode[\"SUM\"] = 0] = \"SUM\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"MUL\"] = 1] = \"MUL\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"CONCAT\"] = 2] = \"CONCAT\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"AVE\"] = 3] = \"AVE\";\n})(BidirectionalMergeMode = exports.BidirectionalMergeMode || (exports.BidirectionalMergeMode = {}));\ngeneric_utils.SerializableEnumRegistry.register('merge_mode', {\n    'sum': BidirectionalMergeMode.SUM,\n    'mul': BidirectionalMergeMode.MUL,\n    'concat': BidirectionalMergeMode.CONCAT,\n    'ave': BidirectionalMergeMode.AVE,\n});\nvar Bidirectional = (function (_super) {\n    __extends(Bidirectional, _super);\n    function Bidirectional(config) {\n        var _this = _super.call(this, config) || this;\n        _this.forwardLayer = config.layer;\n        var layerConfig = config.layer.getConfig();\n        layerConfig['goBackwards'] =\n            layerConfig['goBackwards'] === true ? false : true;\n        _this.backwardLayer = serialization_1.deserialize({ className: config.layer.constructor.name, config: layerConfig });\n        _this.forwardLayer.name = 'forward_' + _this.forwardLayer.name;\n        _this.backwardLayer.name = 'backward_' + _this.backwardLayer.name;\n        _this.mergeMode = config.mergeMode;\n        if (config.weights) {\n            throw new errors_1.NotImplementedError('weights support is not implemented for Bidirectional layer yet.');\n        }\n        _this._stateful = config.layer.stateful;\n        _this.returnSequences = config.layer.returnSequences;\n        _this.returnState = config.layer.returnState;\n        _this.supportsMasking = true;\n        _this._trainable = true;\n        _this.inputSpec = config.layer.inputSpec;\n        return _this;\n    }\n    Object.defineProperty(Bidirectional.prototype, \"trainable\", {\n        get: function () {\n            return this._trainable;\n        },\n        set: function (value) {\n            this._trainable = value;\n            if (this.forwardLayer != null) {\n                this.forwardLayer.trainable = value;\n            }\n            if (this.backwardLayer != null) {\n                this.backwardLayer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bidirectional.prototype.getWeights = function () {\n        return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights());\n    };\n    Bidirectional.prototype.setWeights = function (weights) {\n        var numWeights = weights.length;\n        var numeightsOver2 = Math.floor(numWeights / 2);\n        this.forwardLayer.setWeights(weights.slice(0, numeightsOver2));\n        this.backwardLayer.setWeights(weights.slice(numeightsOver2));\n    };\n    Bidirectional.prototype.computeOutputShape = function (inputShape) {\n        var layerShapes = this.forwardLayer.computeOutputShape(inputShape);\n        if (!(Array.isArray(layerShapes) && Array.isArray(layerShapes[0]))) {\n            layerShapes = [layerShapes];\n        }\n        layerShapes = layerShapes;\n        var outputShape;\n        var outputShapes;\n        var stateShape;\n        if (this.returnState) {\n            stateShape = layerShapes.slice(1);\n            outputShape = layerShapes[0];\n        }\n        else {\n            outputShape = layerShapes[0];\n        }\n        outputShape = outputShape;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            outputShape[outputShape.length - 1] *= 2;\n            outputShapes = [outputShape];\n        }\n        else if (this.mergeMode == null) {\n            outputShapes = [outputShape, outputShape.slice()];\n        }\n        else {\n            outputShapes = [outputShape];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return outputShapes.concat(stateShape).concat(stateShape.slice());\n            }\n            return [outputShape].concat(stateShape).concat(stateShape.slice());\n        }\n        return generic_utils.singletonOrArray(outputShapes);\n    };\n    Bidirectional.prototype.apply = function (inputs, kwargs) {\n        var initialState = null;\n        if (kwargs != null) {\n            initialState = kwargs['initialState'];\n        }\n        if (Array.isArray(inputs)) {\n            initialState = inputs.slice(1);\n            inputs = inputs[0];\n        }\n        if (initialState == null || initialState.length === 0) {\n            var applyOutputs = _super.prototype.apply.call(this, inputs, kwargs);\n            return applyOutputs;\n        }\n        else {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n    };\n    Bidirectional.prototype.call = function (inputs, kwargs) {\n        if (kwargs['mask'] != null) {\n            throw new errors_1.NotImplementedError('The support for masking is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        if (kwargs['initialState'] != null) {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        var y = this.forwardLayer.call(inputs, kwargs);\n        var yRev = this.backwardLayer.call(inputs, kwargs);\n        var states;\n        if (this.returnState) {\n            if (Array.isArray(y)) {\n                states = y.slice(1).concat(yRev.slice(1));\n            }\n            else {\n            }\n            y = y[0];\n            yRev = yRev[0];\n        }\n        if (this.returnSequences) {\n            yRev = K.reverse(yRev, 1);\n        }\n        var output;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            output = K.concatenate([y, yRev]);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.SUM) {\n            output = K.add(y, yRev);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.AVE) {\n            output = K.scalarTimesArray(K.getScalar(0.5), K.add(y, yRev));\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.MUL) {\n            output = K.multiply(y, yRev);\n        }\n        else if (this.mergeMode == null) {\n            output = [y, yRev];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return output.concat(states);\n            }\n            return [output].concat(states);\n        }\n        return output;\n    };\n    Bidirectional.prototype.resetStates = function (states) {\n        this.forwardLayer.resetStates();\n        this.backwardLayer.resetStates();\n    };\n    Bidirectional.prototype.build = function (inputShape) {\n        var _this = this;\n        K.nameScope(this.forwardLayer.name, function () {\n            _this.forwardLayer.build(inputShape);\n        });\n        K.nameScope(this.backwardLayer.name, function () {\n            _this.backwardLayer.build(inputShape);\n        });\n        this.built = true;\n    };\n    Object.defineProperty(Bidirectional.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bidirectional.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Bidirectional;\n}(Wrapper));\nexports.Bidirectional = Bidirectional;\ngeneric_utils.ClassNameMap.register('Bidirectional', Bidirectional);\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-layers/dist/layers/wrappers.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"../backend/tfjs_backend\");\nvar topology_1 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar serialization_1 = require(\"./serialization\");\nvar Wrapper = (function (_super) {\n    __extends(Wrapper, _super);\n    function Wrapper(config) {\n        var _this = _super.call(this, config) || this;\n        _this.layer = config.layer;\n        _this.inputMap = {};\n        return _this;\n    }\n    Wrapper.prototype.build = function (inputShape) {\n        this.built = true;\n    };\n    Object.defineProperty(Wrapper.prototype, \"trainable\", {\n        get: function () {\n            if (this.layer != null) {\n                return this.layer.trainable;\n            }\n            else {\n                return false;\n            }\n        },\n        set: function (value) {\n            if (this.layer != null) {\n                this.layer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.layer.trainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.layer.nonTrainableWeights;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"updates\", {\n        get: function () {\n            return this.layer._updates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Wrapper.prototype, \"losses\", {\n        get: function () {\n            return this.layer.losses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Wrapper.prototype.getWeights = function () {\n        return this.layer.getWeights();\n    };\n    Wrapper.prototype.setWeights = function (weights) {\n        this.layer.setWeights(weights);\n    };\n    Wrapper.prototype.getConfig = function () {\n        var config = {\n            'layer': {\n                'className': this.layer.constructor.name,\n                'config': this.layer.getConfig(),\n            }\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    Wrapper.fromConfig = function (cls, config, customObjects) {\n        if (customObjects === void 0) { customObjects = {}; }\n        var layerConfig = config['layer'];\n        var layer = serialization_1.deserialize(layerConfig, customObjects);\n        delete config['layer'];\n        var newConfig = { layer: layer };\n        Object.assign(newConfig, config);\n        return new cls(newConfig);\n    };\n    return Wrapper;\n}(topology_1.Layer));\nexports.Wrapper = Wrapper;\nvar TimeDistributed = (function (_super) {\n    __extends(TimeDistributed, _super);\n    function TimeDistributed(config) {\n        var _this = _super.call(this, config) || this;\n        _this.supportsMasking = true;\n        return _this;\n    }\n    TimeDistributed.prototype.build = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        if (inputShape.length < 3) {\n            throw new errors_1.ValueError(\"TimeDistributed layer expects an input shape >= 3D, but received \" +\n                (\"input shape \" + JSON.stringify(inputShape)));\n        }\n        this.inputSpec = [{ shape: inputShape }];\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        if (!this.layer.built) {\n            this.layer.build(childInputShape);\n            this.layer.built = true;\n        }\n        _super.prototype.build.call(this, inputShape);\n    };\n    TimeDistributed.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var childInputShape = [inputShape[0]].concat(inputShape.slice(2));\n        var childOutputShape = this.layer.computeOutputShape(childInputShape);\n        var timesteps = inputShape[1];\n        return [childOutputShape[0], timesteps].concat(childOutputShape.slice(1));\n    };\n    TimeDistributed.prototype.call = function (inputs, kwargs) {\n        var _this = this;\n        inputs = generic_utils.getExactlyOneTensor(inputs);\n        var step = function (inputs, states) {\n            var output = _this.layer.call(inputs, kwargs);\n            return [output, []];\n        };\n        var rnnOutputs = K.rnn(step, inputs, [], false, null, null, false, inputs.shape[1]);\n        var y = rnnOutputs[1];\n        return y;\n    };\n    return TimeDistributed;\n}(Wrapper));\nexports.TimeDistributed = TimeDistributed;\ngeneric_utils.ClassNameMap.register('TimeDistributed', TimeDistributed);\nvar BidirectionalMergeMode;\n(function (BidirectionalMergeMode) {\n    BidirectionalMergeMode[BidirectionalMergeMode[\"SUM\"] = 0] = \"SUM\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"MUL\"] = 1] = \"MUL\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"CONCAT\"] = 2] = \"CONCAT\";\n    BidirectionalMergeMode[BidirectionalMergeMode[\"AVE\"] = 3] = \"AVE\";\n})(BidirectionalMergeMode = exports.BidirectionalMergeMode || (exports.BidirectionalMergeMode = {}));\ngeneric_utils.SerializableEnumRegistry.register('merge_mode', {\n    'sum': BidirectionalMergeMode.SUM,\n    'mul': BidirectionalMergeMode.MUL,\n    'concat': BidirectionalMergeMode.CONCAT,\n    'ave': BidirectionalMergeMode.AVE,\n});\nvar Bidirectional = (function (_super) {\n    __extends(Bidirectional, _super);\n    function Bidirectional(config) {\n        var _this = _super.call(this, config) || this;\n        _this.forwardLayer = config.layer;\n        var layerConfig = config.layer.getConfig();\n        layerConfig['goBackwards'] =\n            layerConfig['goBackwards'] === true ? false : true;\n        _this.backwardLayer = serialization_1.deserialize({ className: config.layer.constructor.name, config: layerConfig });\n        _this.forwardLayer.name = 'forward_' + _this.forwardLayer.name;\n        _this.backwardLayer.name = 'backward_' + _this.backwardLayer.name;\n        _this.mergeMode = config.mergeMode;\n        if (config.weights) {\n            throw new errors_1.NotImplementedError('weights support is not implemented for Bidirectional layer yet.');\n        }\n        _this._stateful = config.layer.stateful;\n        _this.returnSequences = config.layer.returnSequences;\n        _this.returnState = config.layer.returnState;\n        _this.supportsMasking = true;\n        _this._trainable = true;\n        _this.inputSpec = config.layer.inputSpec;\n        return _this;\n    }\n    Object.defineProperty(Bidirectional.prototype, \"trainable\", {\n        get: function () {\n            return this._trainable;\n        },\n        set: function (value) {\n            this._trainable = value;\n            if (this.forwardLayer != null) {\n                this.forwardLayer.trainable = value;\n            }\n            if (this.backwardLayer != null) {\n                this.backwardLayer.trainable = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Bidirectional.prototype.getWeights = function () {\n        return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights());\n    };\n    Bidirectional.prototype.setWeights = function (weights) {\n        var numWeights = weights.length;\n        var numeightsOver2 = Math.floor(numWeights / 2);\n        this.forwardLayer.setWeights(weights.slice(0, numeightsOver2));\n        this.backwardLayer.setWeights(weights.slice(numeightsOver2));\n    };\n    Bidirectional.prototype.computeOutputShape = function (inputShape) {\n        var layerShapes = this.forwardLayer.computeOutputShape(inputShape);\n        if (!(Array.isArray(layerShapes) && Array.isArray(layerShapes[0]))) {\n            layerShapes = [layerShapes];\n        }\n        layerShapes = layerShapes;\n        var outputShape;\n        var outputShapes;\n        var stateShape;\n        if (this.returnState) {\n            stateShape = layerShapes.slice(1);\n            outputShape = layerShapes[0];\n        }\n        else {\n            outputShape = layerShapes[0];\n        }\n        outputShape = outputShape;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            outputShape[outputShape.length - 1] *= 2;\n            outputShapes = [outputShape];\n        }\n        else if (this.mergeMode == null) {\n            outputShapes = [outputShape, outputShape.slice()];\n        }\n        else {\n            outputShapes = [outputShape];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return outputShapes.concat(stateShape).concat(stateShape.slice());\n            }\n            return [outputShape].concat(stateShape).concat(stateShape.slice());\n        }\n        return generic_utils.singletonOrArray(outputShapes);\n    };\n    Bidirectional.prototype.apply = function (inputs, kwargs) {\n        var initialState = null;\n        if (kwargs != null) {\n            initialState = kwargs['initialState'];\n        }\n        if (Array.isArray(inputs)) {\n            initialState = inputs.slice(1);\n            inputs = inputs[0];\n        }\n        if (initialState == null || initialState.length === 0) {\n            var applyOutputs = _super.prototype.apply.call(this, inputs, kwargs);\n            return applyOutputs;\n        }\n        else {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n    };\n    Bidirectional.prototype.call = function (inputs, kwargs) {\n        if (kwargs['mask'] != null) {\n            throw new errors_1.NotImplementedError('The support for masking is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        if (kwargs['initialState'] != null) {\n            throw new errors_1.NotImplementedError('The support for initial states is not implemented for ' +\n                'Bidirectional layers yet.');\n        }\n        var y = this.forwardLayer.call(inputs, kwargs);\n        var yRev = this.backwardLayer.call(inputs, kwargs);\n        var states;\n        if (this.returnState) {\n            if (Array.isArray(y)) {\n                states = y.slice(1).concat(yRev.slice(1));\n            }\n            else {\n            }\n            y = y[0];\n            yRev = yRev[0];\n        }\n        if (this.returnSequences) {\n            yRev = K.reverse(yRev, 1);\n        }\n        var output;\n        if (this.mergeMode === BidirectionalMergeMode.CONCAT) {\n            output = K.concatenate([y, yRev]);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.SUM) {\n            output = K.add(y, yRev);\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.AVE) {\n            output = K.scalarTimesArray(K.getScalar(0.5), K.add(y, yRev));\n        }\n        else if (this.mergeMode === BidirectionalMergeMode.MUL) {\n            output = K.multiply(y, yRev);\n        }\n        else if (this.mergeMode == null) {\n            output = [y, yRev];\n        }\n        if (this.returnState) {\n            if (this.mergeMode == null) {\n                return output.concat(states);\n            }\n            return [output].concat(states);\n        }\n        return output;\n    };\n    Bidirectional.prototype.resetStates = function (states) {\n        this.forwardLayer.resetStates();\n        this.backwardLayer.resetStates();\n    };\n    Bidirectional.prototype.build = function (inputShape) {\n        var _this = this;\n        K.nameScope(this.forwardLayer.name, function () {\n            _this.forwardLayer.build(inputShape);\n        });\n        K.nameScope(this.backwardLayer.name, function () {\n            _this.backwardLayer.build(inputShape);\n        });\n        this.built = true;\n    };\n    Object.defineProperty(Bidirectional.prototype, \"trainableWeights\", {\n        get: function () {\n            return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Bidirectional.prototype, \"nonTrainableWeights\", {\n        get: function () {\n            return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Bidirectional;\n}(Wrapper));\nexports.Bidirectional = Bidirectional;\ngeneric_utils.ClassNameMap.register('Bidirectional', Bidirectional);\n"},"lineCount":340}},"hash":"d39e01b713f5d858df4c381f90da5ef8","cacheData":{"env":{}}}