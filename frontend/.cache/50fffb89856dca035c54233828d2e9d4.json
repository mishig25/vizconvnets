{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"../geometry/Vector","loc":{"line":15,"column":21}},{"name":"../core/Common","loc":{"line":16,"column":21}}],"generated":{"js":"/**\r\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\r\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\r\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Vertices\r\n*/\r\n\r\nvar Vertices = {};\r\n\r\nmodule.exports = Vertices;\r\n\r\nvar Vector = require('../geometry/Vector');\r\nvar Common = require('../core/Common');\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new set of `Matter.Body` compatible vertices.\r\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\r\n     * but with some additional references required for efficient collision detection routines.\r\n     *\r\n     * Vertices must be specified in clockwise order.\r\n     *\r\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\r\n     *\r\n     * @method create\r\n     * @param {vector[]} points\r\n     * @param {body} body\r\n     */\r\n    Vertices.create = function(points, body) {\r\n        var vertices = [];\r\n\r\n        for (var i = 0; i < points.length; i++) {\r\n            var point = points[i],\r\n                vertex = {\r\n                    x: point.x,\r\n                    y: point.y,\r\n                    index: i,\r\n                    body: body,\r\n                    isInternal: false,\r\n                    contact: null\r\n                };\r\n\r\n            vertex.contact = {\r\n                vertex: vertex,\r\n                normalImpulse: 0,\r\n                tangentImpulse: 0\r\n            };\r\n\r\n            vertices.push(vertex);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \r\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\r\n     * For parsing SVG paths, see `Svg.pathToVertices`.\r\n     * @method fromPath\r\n     * @param {string} path\r\n     * @param {body} body\r\n     * @return {vertices} vertices\r\n     */\r\n    Vertices.fromPath = function(path, body) {\r\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\r\n            points = [];\r\n\r\n        path.replace(pathPattern, function(match, x, y) {\r\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\r\n        });\r\n\r\n        return Vertices.create(points, body);\r\n    };\r\n\r\n    /**\r\n     * Returns the centre (centroid) of the set of vertices.\r\n     * @method centre\r\n     * @param {vertices} vertices\r\n     * @return {vector} The centre point\r\n     */\r\n    Vertices.centre = function(vertices) {\r\n        var area = Vertices.area(vertices, true),\r\n            centre = { x: 0, y: 0 },\r\n            cross,\r\n            temp,\r\n            j;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            j = (i + 1) % vertices.length;\r\n            cross = Vector.cross(vertices[i], vertices[j]);\r\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\r\n            centre = Vector.add(centre, temp);\r\n        }\r\n\r\n        return Vector.div(centre, 6 * area);\r\n    };\r\n\r\n    /**\r\n     * Returns the average (mean) of the set of vertices.\r\n     * @method mean\r\n     * @param {vertices} vertices\r\n     * @return {vector} The average point\r\n     */\r\n    Vertices.mean = function(vertices) {\r\n        var average = { x: 0, y: 0 };\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            average.x += vertices[i].x;\r\n            average.y += vertices[i].y;\r\n        }\r\n\r\n        return Vector.div(average, vertices.length);\r\n    };\r\n\r\n    /**\r\n     * Returns the area of the set of vertices.\r\n     * @method area\r\n     * @param {vertices} vertices\r\n     * @param {bool} signed\r\n     * @return {number} The area\r\n     */\r\n    Vertices.area = function(vertices, signed) {\r\n        var area = 0,\r\n            j = vertices.length - 1;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\r\n            j = i;\r\n        }\r\n\r\n        if (signed)\r\n            return area / 2;\r\n\r\n        return Math.abs(area) / 2;\r\n    };\r\n\r\n    /**\r\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\r\n     * @method inertia\r\n     * @param {vertices} vertices\r\n     * @param {number} mass\r\n     * @return {number} The polygon's moment of inertia\r\n     */\r\n    Vertices.inertia = function(vertices, mass) {\r\n        var numerator = 0,\r\n            denominator = 0,\r\n            v = vertices,\r\n            cross,\r\n            j;\r\n\r\n        // find the polygon's moment of inertia, using second moment of area\r\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\r\n        for (var n = 0; n < v.length; n++) {\r\n            j = (n + 1) % v.length;\r\n            cross = Math.abs(Vector.cross(v[j], v[n]));\r\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\r\n            denominator += cross;\r\n        }\r\n\r\n        return (mass / 6) * (numerator / denominator);\r\n    };\r\n\r\n    /**\r\n     * Translates the set of vertices in-place.\r\n     * @method translate\r\n     * @param {vertices} vertices\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     */\r\n    Vertices.translate = function(vertices, vector, scalar) {\r\n        var i;\r\n        if (scalar) {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x * scalar;\r\n                vertices[i].y += vector.y * scalar;\r\n            }\r\n        } else {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x;\r\n                vertices[i].y += vector.y;\r\n            }\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Rotates the set of vertices in-place.\r\n     * @method rotate\r\n     * @param {vertices} vertices\r\n     * @param {number} angle\r\n     * @param {vector} point\r\n     */\r\n    Vertices.rotate = function(vertices, angle, point) {\r\n        if (angle === 0)\r\n            return;\r\n\r\n        var cos = Math.cos(angle),\r\n            sin = Math.sin(angle);\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                dx = vertice.x - point.x,\r\n                dy = vertice.y - point.y;\r\n                \r\n            vertice.x = point.x + (dx * cos - dy * sin);\r\n            vertice.y = point.y + (dx * sin + dy * cos);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the `point` is inside the set of `vertices`.\r\n     * @method contains\r\n     * @param {vertices} vertices\r\n     * @param {vector} point\r\n     * @return {boolean} True if the vertices contains point, otherwise false\r\n     */\r\n    Vertices.contains = function(vertices, point) {\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                nextVertice = vertices[(i + 1) % vertices.length];\r\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Scales the vertices from a point (default is centre) in-place.\r\n     * @method scale\r\n     * @param {vertices} vertices\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} point\r\n     */\r\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\r\n        if (scaleX === 1 && scaleY === 1)\r\n            return vertices;\r\n\r\n        point = point || Vertices.centre(vertices);\r\n\r\n        var vertex,\r\n            delta;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            vertex = vertices[i];\r\n            delta = Vector.sub(vertex, point);\r\n            vertices[i].x = point.x + delta.x * scaleX;\r\n            vertices[i].y = point.y + delta.y * scaleY;\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\r\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\r\n     * @method chamfer\r\n     * @param {vertices} vertices\r\n     * @param {number[]} radius\r\n     * @param {number} quality\r\n     * @param {number} qualityMin\r\n     * @param {number} qualityMax\r\n     */\r\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\r\n\r\n        if (typeof radius === 'number') {\r\n            radius = [radius];\r\n        } else {\r\n            radius = radius || [8];\r\n        }\r\n\r\n        if (!radius.length)\r\n            radius = [radius];\r\n\r\n        // quality defaults to -1, which is auto\r\n        quality = (typeof quality !== 'undefined') ? quality : -1;\r\n        qualityMin = qualityMin || 2;\r\n        qualityMax = qualityMax || 14;\r\n\r\n        var newVertices = [];\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\r\n                vertex = vertices[i],\r\n                nextVertex = vertices[(i + 1) % vertices.length],\r\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\r\n\r\n            if (currentRadius === 0) {\r\n                newVertices.push(vertex);\r\n                continue;\r\n            }\r\n\r\n            var prevNormal = Vector.normalise({ \r\n                x: vertex.y - prevVertex.y, \r\n                y: prevVertex.x - vertex.x\r\n            });\r\n\r\n            var nextNormal = Vector.normalise({ \r\n                x: nextVertex.y - vertex.y, \r\n                y: vertex.x - nextVertex.x\r\n            });\r\n\r\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\r\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\r\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\r\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\r\n\r\n            var precision = quality;\r\n\r\n            if (quality === -1) {\r\n                // automatically decide precision\r\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\r\n            }\r\n\r\n            precision = Common.clamp(precision, qualityMin, qualityMax);\r\n\r\n            // use an even value for precision, more likely to reduce axes by using symmetry\r\n            if (precision % 2 === 1)\r\n                precision += 1;\r\n\r\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\r\n                theta = alpha / precision;\r\n\r\n            for (var j = 0; j < precision; j++) {\r\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\r\n            }\r\n        }\r\n\r\n        return newVertices;\r\n    };\r\n\r\n    /**\r\n     * Sorts the input vertices into clockwise order in place.\r\n     * @method clockwiseSort\r\n     * @param {vertices} vertices\r\n     * @return {vertices} vertices\r\n     */\r\n    Vertices.clockwiseSort = function(vertices) {\r\n        var centre = Vertices.mean(vertices);\r\n\r\n        vertices.sort(function(vertexA, vertexB) {\r\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\r\n        });\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\r\n     * @method isConvex\r\n     * @param {vertices} vertices\r\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\r\n     */\r\n    Vertices.isConvex = function(vertices) {\r\n        // http://paulbourke.net/geometry/polygonmesh/\r\n        // Copyright (c) Paul Bourke (use permitted)\r\n\r\n        var flag = 0,\r\n            n = vertices.length,\r\n            i,\r\n            j,\r\n            k,\r\n            z;\r\n\r\n        if (n < 3)\r\n            return null;\r\n\r\n        for (i = 0; i < n; i++) {\r\n            j = (i + 1) % n;\r\n            k = (i + 2) % n;\r\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\r\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\r\n\r\n            if (z < 0) {\r\n                flag |= 1;\r\n            } else if (z > 0) {\r\n                flag |= 2;\r\n            }\r\n\r\n            if (flag === 3) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (flag !== 0){\r\n            return true;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the convex hull of the input vertices as a new array of points.\r\n     * @method hull\r\n     * @param {vertices} vertices\r\n     * @return [vertex] vertices\r\n     */\r\n    Vertices.hull = function(vertices) {\r\n        // http://geomalgorithms.com/a10-_hull-1.html\r\n\r\n        var upper = [],\r\n            lower = [], \r\n            vertex,\r\n            i;\r\n\r\n        // sort vertices on x-axis (y-axis for ties)\r\n        vertices = vertices.slice(0);\r\n        vertices.sort(function(vertexA, vertexB) {\r\n            var dx = vertexA.x - vertexB.x;\r\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\r\n        });\r\n\r\n        // build lower hull\r\n        for (i = 0; i < vertices.length; i += 1) {\r\n            vertex = vertices[i];\r\n\r\n            while (lower.length >= 2 \r\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\r\n                lower.pop();\r\n            }\r\n\r\n            lower.push(vertex);\r\n        }\r\n\r\n        // build upper hull\r\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\r\n            vertex = vertices[i];\r\n\r\n            while (upper.length >= 2 \r\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\r\n                upper.pop();\r\n            }\r\n\r\n            upper.push(vertex);\r\n        }\r\n\r\n        // concatenation of the lower and upper hulls gives the convex hull\r\n        // omit last points because they are repeated at the beginning of the other list\r\n        upper.pop();\r\n        lower.pop();\r\n\r\n        return upper.concat(lower);\r\n    };\r\n\r\n})();\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}}],"sources":{"node_modules/phaser/src/physics/matter-js/lib/geometry/Vertices.js":"/**\r\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\r\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\r\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\r\n*\r\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\r\n*\r\n* @class Vertices\r\n*/\r\n\r\nvar Vertices = {};\r\n\r\nmodule.exports = Vertices;\r\n\r\nvar Vector = require('../geometry/Vector');\r\nvar Common = require('../core/Common');\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new set of `Matter.Body` compatible vertices.\r\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\r\n     * but with some additional references required for efficient collision detection routines.\r\n     *\r\n     * Vertices must be specified in clockwise order.\r\n     *\r\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\r\n     *\r\n     * @method create\r\n     * @param {vector[]} points\r\n     * @param {body} body\r\n     */\r\n    Vertices.create = function(points, body) {\r\n        var vertices = [];\r\n\r\n        for (var i = 0; i < points.length; i++) {\r\n            var point = points[i],\r\n                vertex = {\r\n                    x: point.x,\r\n                    y: point.y,\r\n                    index: i,\r\n                    body: body,\r\n                    isInternal: false,\r\n                    contact: null\r\n                };\r\n\r\n            vertex.contact = {\r\n                vertex: vertex,\r\n                normalImpulse: 0,\r\n                tangentImpulse: 0\r\n            };\r\n\r\n            vertices.push(vertex);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \r\n     * into a `Matter.Vertices` object for the given `Matter.Body`.\r\n     * For parsing SVG paths, see `Svg.pathToVertices`.\r\n     * @method fromPath\r\n     * @param {string} path\r\n     * @param {body} body\r\n     * @return {vertices} vertices\r\n     */\r\n    Vertices.fromPath = function(path, body) {\r\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\r\n            points = [];\r\n\r\n        path.replace(pathPattern, function(match, x, y) {\r\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\r\n        });\r\n\r\n        return Vertices.create(points, body);\r\n    };\r\n\r\n    /**\r\n     * Returns the centre (centroid) of the set of vertices.\r\n     * @method centre\r\n     * @param {vertices} vertices\r\n     * @return {vector} The centre point\r\n     */\r\n    Vertices.centre = function(vertices) {\r\n        var area = Vertices.area(vertices, true),\r\n            centre = { x: 0, y: 0 },\r\n            cross,\r\n            temp,\r\n            j;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            j = (i + 1) % vertices.length;\r\n            cross = Vector.cross(vertices[i], vertices[j]);\r\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\r\n            centre = Vector.add(centre, temp);\r\n        }\r\n\r\n        return Vector.div(centre, 6 * area);\r\n    };\r\n\r\n    /**\r\n     * Returns the average (mean) of the set of vertices.\r\n     * @method mean\r\n     * @param {vertices} vertices\r\n     * @return {vector} The average point\r\n     */\r\n    Vertices.mean = function(vertices) {\r\n        var average = { x: 0, y: 0 };\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            average.x += vertices[i].x;\r\n            average.y += vertices[i].y;\r\n        }\r\n\r\n        return Vector.div(average, vertices.length);\r\n    };\r\n\r\n    /**\r\n     * Returns the area of the set of vertices.\r\n     * @method area\r\n     * @param {vertices} vertices\r\n     * @param {bool} signed\r\n     * @return {number} The area\r\n     */\r\n    Vertices.area = function(vertices, signed) {\r\n        var area = 0,\r\n            j = vertices.length - 1;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\r\n            j = i;\r\n        }\r\n\r\n        if (signed)\r\n            return area / 2;\r\n\r\n        return Math.abs(area) / 2;\r\n    };\r\n\r\n    /**\r\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\r\n     * @method inertia\r\n     * @param {vertices} vertices\r\n     * @param {number} mass\r\n     * @return {number} The polygon's moment of inertia\r\n     */\r\n    Vertices.inertia = function(vertices, mass) {\r\n        var numerator = 0,\r\n            denominator = 0,\r\n            v = vertices,\r\n            cross,\r\n            j;\r\n\r\n        // find the polygon's moment of inertia, using second moment of area\r\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\r\n        for (var n = 0; n < v.length; n++) {\r\n            j = (n + 1) % v.length;\r\n            cross = Math.abs(Vector.cross(v[j], v[n]));\r\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\r\n            denominator += cross;\r\n        }\r\n\r\n        return (mass / 6) * (numerator / denominator);\r\n    };\r\n\r\n    /**\r\n     * Translates the set of vertices in-place.\r\n     * @method translate\r\n     * @param {vertices} vertices\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     */\r\n    Vertices.translate = function(vertices, vector, scalar) {\r\n        var i;\r\n        if (scalar) {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x * scalar;\r\n                vertices[i].y += vector.y * scalar;\r\n            }\r\n        } else {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x;\r\n                vertices[i].y += vector.y;\r\n            }\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Rotates the set of vertices in-place.\r\n     * @method rotate\r\n     * @param {vertices} vertices\r\n     * @param {number} angle\r\n     * @param {vector} point\r\n     */\r\n    Vertices.rotate = function(vertices, angle, point) {\r\n        if (angle === 0)\r\n            return;\r\n\r\n        var cos = Math.cos(angle),\r\n            sin = Math.sin(angle);\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                dx = vertice.x - point.x,\r\n                dy = vertice.y - point.y;\r\n                \r\n            vertice.x = point.x + (dx * cos - dy * sin);\r\n            vertice.y = point.y + (dx * sin + dy * cos);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the `point` is inside the set of `vertices`.\r\n     * @method contains\r\n     * @param {vertices} vertices\r\n     * @param {vector} point\r\n     * @return {boolean} True if the vertices contains point, otherwise false\r\n     */\r\n    Vertices.contains = function(vertices, point) {\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                nextVertice = vertices[(i + 1) % vertices.length];\r\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Scales the vertices from a point (default is centre) in-place.\r\n     * @method scale\r\n     * @param {vertices} vertices\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} point\r\n     */\r\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\r\n        if (scaleX === 1 && scaleY === 1)\r\n            return vertices;\r\n\r\n        point = point || Vertices.centre(vertices);\r\n\r\n        var vertex,\r\n            delta;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            vertex = vertices[i];\r\n            delta = Vector.sub(vertex, point);\r\n            vertices[i].x = point.x + delta.x * scaleX;\r\n            vertices[i].y = point.y + delta.y * scaleY;\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\r\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\r\n     * @method chamfer\r\n     * @param {vertices} vertices\r\n     * @param {number[]} radius\r\n     * @param {number} quality\r\n     * @param {number} qualityMin\r\n     * @param {number} qualityMax\r\n     */\r\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\r\n\r\n        if (typeof radius === 'number') {\r\n            radius = [radius];\r\n        } else {\r\n            radius = radius || [8];\r\n        }\r\n\r\n        if (!radius.length)\r\n            radius = [radius];\r\n\r\n        // quality defaults to -1, which is auto\r\n        quality = (typeof quality !== 'undefined') ? quality : -1;\r\n        qualityMin = qualityMin || 2;\r\n        qualityMax = qualityMax || 14;\r\n\r\n        var newVertices = [];\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\r\n                vertex = vertices[i],\r\n                nextVertex = vertices[(i + 1) % vertices.length],\r\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\r\n\r\n            if (currentRadius === 0) {\r\n                newVertices.push(vertex);\r\n                continue;\r\n            }\r\n\r\n            var prevNormal = Vector.normalise({ \r\n                x: vertex.y - prevVertex.y, \r\n                y: prevVertex.x - vertex.x\r\n            });\r\n\r\n            var nextNormal = Vector.normalise({ \r\n                x: nextVertex.y - vertex.y, \r\n                y: vertex.x - nextVertex.x\r\n            });\r\n\r\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\r\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\r\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\r\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\r\n\r\n            var precision = quality;\r\n\r\n            if (quality === -1) {\r\n                // automatically decide precision\r\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\r\n            }\r\n\r\n            precision = Common.clamp(precision, qualityMin, qualityMax);\r\n\r\n            // use an even value for precision, more likely to reduce axes by using symmetry\r\n            if (precision % 2 === 1)\r\n                precision += 1;\r\n\r\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\r\n                theta = alpha / precision;\r\n\r\n            for (var j = 0; j < precision; j++) {\r\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\r\n            }\r\n        }\r\n\r\n        return newVertices;\r\n    };\r\n\r\n    /**\r\n     * Sorts the input vertices into clockwise order in place.\r\n     * @method clockwiseSort\r\n     * @param {vertices} vertices\r\n     * @return {vertices} vertices\r\n     */\r\n    Vertices.clockwiseSort = function(vertices) {\r\n        var centre = Vertices.mean(vertices);\r\n\r\n        vertices.sort(function(vertexA, vertexB) {\r\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\r\n        });\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\r\n     * @method isConvex\r\n     * @param {vertices} vertices\r\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\r\n     */\r\n    Vertices.isConvex = function(vertices) {\r\n        // http://paulbourke.net/geometry/polygonmesh/\r\n        // Copyright (c) Paul Bourke (use permitted)\r\n\r\n        var flag = 0,\r\n            n = vertices.length,\r\n            i,\r\n            j,\r\n            k,\r\n            z;\r\n\r\n        if (n < 3)\r\n            return null;\r\n\r\n        for (i = 0; i < n; i++) {\r\n            j = (i + 1) % n;\r\n            k = (i + 2) % n;\r\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\r\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\r\n\r\n            if (z < 0) {\r\n                flag |= 1;\r\n            } else if (z > 0) {\r\n                flag |= 2;\r\n            }\r\n\r\n            if (flag === 3) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (flag !== 0){\r\n            return true;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the convex hull of the input vertices as a new array of points.\r\n     * @method hull\r\n     * @param {vertices} vertices\r\n     * @return [vertex] vertices\r\n     */\r\n    Vertices.hull = function(vertices) {\r\n        // http://geomalgorithms.com/a10-_hull-1.html\r\n\r\n        var upper = [],\r\n            lower = [], \r\n            vertex,\r\n            i;\r\n\r\n        // sort vertices on x-axis (y-axis for ties)\r\n        vertices = vertices.slice(0);\r\n        vertices.sort(function(vertexA, vertexB) {\r\n            var dx = vertexA.x - vertexB.x;\r\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\r\n        });\r\n\r\n        // build lower hull\r\n        for (i = 0; i < vertices.length; i += 1) {\r\n            vertex = vertices[i];\r\n\r\n            while (lower.length >= 2 \r\n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\r\n                lower.pop();\r\n            }\r\n\r\n            lower.push(vertex);\r\n        }\r\n\r\n        // build upper hull\r\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\r\n            vertex = vertices[i];\r\n\r\n            while (upper.length >= 2 \r\n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\r\n                upper.pop();\r\n            }\r\n\r\n            upper.push(vertex);\r\n        }\r\n\r\n        // concatenation of the lower and upper hulls gives the convex hull\r\n        // omit last points because they are repeated at the beginning of the other list\r\n        upper.pop();\r\n        lower.pop();\r\n\r\n        return upper.concat(lower);\r\n    };\r\n\r\n})();\r\n"},"lineCount":459}},"hash":"70d50f5de69768d0e94bf327ff5a5bc3","cacheData":{"env":{}}}