{"dependencies":[{"name":"/home/mishig/Desktop/vizgithub/frontend/package.json","includedInParent":true,"mtime":1523230167415},{"name":"/home/mishig/Desktop/vizgithub/frontend/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":0},{"name":"../environment","loc":{"line":13,"column":28}},{"name":"../globals","loc":{"line":14,"column":24}},{"name":"../ops/ops","loc":{"line":15,"column":20}},{"name":"./optimizer","loc":{"line":16,"column":26}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar RMSPropOptimizer = (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, decay, momentum, epsilon) {\n        if (decay === void 0) { decay = 0.9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedMeanSquares = {};\n        _this.accumulatedMoments = {};\n        _this.c = globals_1.keep(ops_1.scalar(learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(epsilon));\n        _this.decay = globals_1.keep(ops_1.scalar(decay));\n        _this.momentum = globals_1.keep(ops_1.scalar(momentum));\n        _this.oneMinusDecay = globals_1.keep(ops_1.scalar(1 - decay));\n        return _this;\n    }\n    RMSPropOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedMeanSquares[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanSquares[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            if (this_1.accumulatedMoments[variableName] == null) {\n                var trainable_2 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMoments[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_2);\n                });\n            }\n            var accumulatedMeanSquare = this_1.accumulatedMeanSquares[variableName];\n            var accumulatedMoments = this_1.accumulatedMoments[variableName];\n            var gradient = variableGradients[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedMeanSquare = _this.decay.mul(accumulatedMeanSquare)\n                    .add(_this.oneMinusDecay.mul(gradient.square()));\n                var newAccumulatedMoments = _this.momentum.mul(accumulatedMoments)\n                    .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare.add(_this.epsilon).sqrt()));\n                _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare);\n                _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                var newValue = value.sub(newAccumulatedMoments);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.epsilon.dispose();\n        this.decay.dispose();\n        this.momentum.dispose();\n        this.oneMinusDecay.dispose();\n        if (this.accumulatedMeanSquares != null) {\n            Object.keys(this.accumulatedMeanSquares)\n                .forEach(function (name) { return _this.accumulatedMeanSquares[name].dispose(); });\n        }\n        if (this.accumulatedMoments != null) {\n            Object.keys(this.accumulatedMoments)\n                .forEach(function (name) { return _this.accumulatedMoments[name].dispose(); });\n        }\n    };\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-core/dist/optimizers/rmsprop_optimizer.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar ops_1 = require(\"../ops/ops\");\nvar optimizer_1 = require(\"./optimizer\");\nvar RMSPropOptimizer = (function (_super) {\n    __extends(RMSPropOptimizer, _super);\n    function RMSPropOptimizer(learningRate, decay, momentum, epsilon) {\n        if (decay === void 0) { decay = 0.9; }\n        if (momentum === void 0) { momentum = 0.0; }\n        if (epsilon === void 0) { epsilon = 1e-8; }\n        var _this = _super.call(this) || this;\n        _this.learningRate = learningRate;\n        _this.accumulatedMeanSquares = {};\n        _this.accumulatedMoments = {};\n        _this.c = globals_1.keep(ops_1.scalar(learningRate));\n        _this.epsilon = globals_1.keep(ops_1.scalar(epsilon));\n        _this.decay = globals_1.keep(ops_1.scalar(decay));\n        _this.momentum = globals_1.keep(ops_1.scalar(momentum));\n        _this.oneMinusDecay = globals_1.keep(ops_1.scalar(1 - decay));\n        return _this;\n    }\n    RMSPropOptimizer.prototype.applyGradients = function (variableGradients) {\n        var _this = this;\n        var _loop_1 = function (variableName) {\n            var value = environment_1.ENV.engine.registeredVariables[variableName];\n            if (this_1.accumulatedMeanSquares[variableName] == null) {\n                var trainable_1 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMeanSquares[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_1);\n                });\n            }\n            if (this_1.accumulatedMoments[variableName] == null) {\n                var trainable_2 = false;\n                globals_1.tidy(function () {\n                    _this.accumulatedMoments[variableName] =\n                        ops_1.zerosLike(value).variable(trainable_2);\n                });\n            }\n            var accumulatedMeanSquare = this_1.accumulatedMeanSquares[variableName];\n            var accumulatedMoments = this_1.accumulatedMoments[variableName];\n            var gradient = variableGradients[variableName];\n            globals_1.tidy(function () {\n                var newAccumulatedMeanSquare = _this.decay.mul(accumulatedMeanSquare)\n                    .add(_this.oneMinusDecay.mul(gradient.square()));\n                var newAccumulatedMoments = _this.momentum.mul(accumulatedMoments)\n                    .add(_this.c.mul(gradient).div(newAccumulatedMeanSquare.add(_this.epsilon).sqrt()));\n                _this.accumulatedMeanSquares[variableName].assign(newAccumulatedMeanSquare);\n                _this.accumulatedMoments[variableName].assign(newAccumulatedMoments);\n                var newValue = value.sub(newAccumulatedMoments);\n                value.assign(newValue);\n            });\n        };\n        var this_1 = this;\n        for (var variableName in variableGradients) {\n            _loop_1(variableName);\n        }\n    };\n    RMSPropOptimizer.prototype.dispose = function () {\n        var _this = this;\n        this.c.dispose();\n        this.epsilon.dispose();\n        this.decay.dispose();\n        this.momentum.dispose();\n        this.oneMinusDecay.dispose();\n        if (this.accumulatedMeanSquares != null) {\n            Object.keys(this.accumulatedMeanSquares)\n                .forEach(function (name) { return _this.accumulatedMeanSquares[name].dispose(); });\n        }\n        if (this.accumulatedMoments != null) {\n            Object.keys(this.accumulatedMoments)\n                .forEach(function (name) { return _this.accumulatedMoments[name].dispose(); });\n        }\n    };\n    return RMSPropOptimizer;\n}(optimizer_1.Optimizer));\nexports.RMSPropOptimizer = RMSPropOptimizer;\n"},"lineCount":90}},"hash":"4491e655439937992452e58d16cf3af1","cacheData":{"env":{}}}