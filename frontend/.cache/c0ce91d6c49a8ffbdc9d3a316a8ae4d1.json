{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":0},{"name":"../../util","loc":{"line":4,"column":19}},{"name":"../../environment","loc":{"line":5,"column":28}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MAX_TEXTURE_SIZE = null;\nvar util = require(\"../../util\");\nvar environment_1 = require(\"../../environment\");\nfunction createWebGLRenderingContext(attributes) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    return createWebGLRenderingContextFromCanvas(canvas, attributes);\n}\nexports.createWebGLRenderingContext = createWebGLRenderingContext;\nfunction createWebGLRenderingContextFromCanvas(canvas, attributes) {\n    var gl;\n    var webglVersion = environment_1.ENV.get('WEBGL_VERSION');\n    if (webglVersion === 2) {\n        gl = canvas.getContext('webgl2', attributes);\n    }\n    else if (webglVersion === 1) {\n        gl = (canvas.getContext('webgl', attributes) ||\n            canvas.getContext('experimental-webgl', attributes));\n    }\n    if (webglVersion === 0 || gl == null) {\n        throw new Error('This browser does not support WebGL.');\n    }\n    return gl;\n}\nexports.createWebGLRenderingContextFromCanvas = createWebGLRenderingContextFromCanvas;\nfunction callAndCheck(gl, func) {\n    var returnValue = func();\n    checkWebGLError(gl);\n    return returnValue;\n}\nexports.callAndCheck = callAndCheck;\nvar webGLDebugErrorCheckingEnabled = false;\nfunction enableDebugWebGLErrorChecking(enabled) {\n    webGLDebugErrorCheckingEnabled = enabled;\n}\nexports.enableDebugWebGLErrorChecking = enableDebugWebGLErrorChecking;\nfunction checkWebGLError(gl) {\n    if (webGLDebugErrorCheckingEnabled) {\n        var error = gl.getError();\n        if (error !== gl.NO_ERROR) {\n            throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n        }\n    }\n}\nexports.checkWebGLError = checkWebGLError;\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return \"Unknown error code \" + status;\n    }\n}\nexports.getWebGLErrorMessage = getWebGLErrorMessage;\nfunction getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, function () { return gl.getExtension(extensionName); }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexports.getExtensionOrThrow = getExtensionOrThrow;\nfunction createVertexShader(gl, vertexShaderSource) {\n    var vertexShader = throwIfNull(gl, function () { return gl.createShader(gl.VERTEX_SHADER); }, 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(vertexShader, vertexShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(vertexShader); });\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexports.createVertexShader = createVertexShader;\nfunction createFragmentShader(gl, fragmentShaderSource) {\n    var fragmentShader = throwIfNull(gl, function () { return gl.createShader(gl.FRAGMENT_SHADER); }, 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(fragmentShader, fragmentShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(fragmentShader); });\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nexports.createFragmentShader = createFragmentShader;\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(\"Couldn't parse line number in error: \" + shaderInfoLog);\n        console.log(shaderSource);\n        return;\n    }\n    var lineNumber = +lineNumberRegexResult[1];\n    var shaderLines = shaderSource.split('\\n');\n    var pad = shaderLines.length.toString().length + 2;\n    var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n        return util.rightPad((lineNumber + 1).toString(), pad) + line;\n    });\n    var maxLineLength = 0;\n    for (var i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(\"%c \" + util.rightPad(errorLine[0], maxLineLength), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl) {\n    return throwIfNull(gl, function () { return gl.createProgram(); }, 'Unable to create WebGLProgram.');\n}\nexports.createProgram = createProgram;\nfunction linkProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.linkProgram(program); });\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexports.linkProgram = linkProgram;\nfunction validateProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.validateProgram(program); });\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexports.validateProgram = validateProgram;\nfunction createStaticVertexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticVertexBuffer = createStaticVertexBuffer;\nfunction createStaticIndexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticIndexBuffer = createStaticIndexBuffer;\nfunction queryMaxTextureSize(gl) {\n    if (MAX_TEXTURE_SIZE != null) {\n        return MAX_TEXTURE_SIZE;\n    }\n    MAX_TEXTURE_SIZE =\n        callAndCheck(gl, function () { return gl.getParameter(gl.MAX_TEXTURE_SIZE); });\n    return MAX_TEXTURE_SIZE;\n}\nexports.queryMaxTextureSize = queryMaxTextureSize;\nfunction getChannelsPerTexture() {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return 4;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexports.getChannelsPerTexture = getChannelsPerTexture;\nfunction createTexture(gl) {\n    return throwIfNull(gl, function () { return gl.createTexture(); }, 'Unable to create WebGLTexture.');\n}\nexports.createTexture = createTexture;\nfunction validateTextureSize(gl, width, height) {\n    var maxTextureSize = queryMaxTextureSize(gl);\n    if ((width <= 0) || (height <= 0)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        var max = \"[\" + maxTextureSize + \"x\" + maxTextureSize + \"]\";\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexports.validateTextureSize = validateTextureSize;\nfunction createFramebuffer(gl) {\n    return throwIfNull(gl, function () { return gl.createFramebuffer(); }, 'Unable to create WebGLFramebuffer.');\n}\nexports.createFramebuffer = createFramebuffer;\nfunction bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n    var loc = gl.getAttribLocation(program, attribute);\n    if (loc === -1) {\n        return;\n    }\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes); });\n    callAndCheck(gl, function () { return gl.enableVertexAttribArray(loc); });\n}\nexports.bindVertexBufferToProgramAttribute = bindVertexBufferToProgramAttribute;\nfunction bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n}\nexports.bindTextureUnit = bindTextureUnit;\nfunction unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.unbindTextureUnit = unbindTextureUnit;\nfunction getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, function () { return gl.getUniformLocation(program, uniformName); }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexports.getProgramUniformLocationOrThrow = getProgramUniformLocationOrThrow;\nfunction getProgramUniformLocation(gl, program, uniformName) {\n    return gl.getUniformLocation(program, uniformName);\n}\nexports.getProgramUniformLocation = getProgramUniformLocation;\nfunction bindTextureToProgramUniformSampler(gl, program, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, function () { return bindTextureUnit(gl, texture, textureUnit); });\n    callAndCheck(gl, function () { return gl.uniform1i(uniformSamplerLocation, textureUnit); });\n}\nexports.bindTextureToProgramUniformSampler = bindTextureToProgramUniformSampler;\nfunction bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n    callAndCheck(gl, function () { return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); });\n    callAndCheck(gl, function () { return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height); });\n}\nexports.bindCanvasToFramebuffer = bindCanvasToFramebuffer;\nfunction bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); });\n}\nexports.bindColorTextureToFramebuffer = bindColorTextureToFramebuffer;\nfunction unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0); });\n}\nexports.unbindColorTextureFromFramebuffer = unbindColorTextureFromFramebuffer;\nfunction validateFramebuffer(gl) {\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexports.validateFramebuffer = validateFramebuffer;\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return \"unknown error \" + status;\n    }\n}\nexports.getFramebufferErrorMessage = getFramebufferErrorMessage;\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    var tOrNull = callAndCheck(gl, function () { return returnTOrNull(); });\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    var glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\" + maxTextureUnit + \"]\";\n        throw new Error(\"textureUnit must be in \" + textureUnitRange + \".\");\n    }\n}\nfunction getTextureShapeFromLogicalShape(gl, logShape) {\n    if (logShape.length !== 2) {\n        var squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    var maxTexSize = queryMaxTextureSize(gl);\n    var size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [size, 1];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        return util.sizeToSquarishShape(size);\n    }\n}\nexports.getTextureShapeFromLogicalShape = getTextureShapeFromLogicalShape;\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-core/dist/kernels/webgl/webgl_util.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MAX_TEXTURE_SIZE = null;\nvar util = require(\"../../util\");\nvar environment_1 = require(\"../../environment\");\nfunction createWebGLRenderingContext(attributes) {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    return createWebGLRenderingContextFromCanvas(canvas, attributes);\n}\nexports.createWebGLRenderingContext = createWebGLRenderingContext;\nfunction createWebGLRenderingContextFromCanvas(canvas, attributes) {\n    var gl;\n    var webglVersion = environment_1.ENV.get('WEBGL_VERSION');\n    if (webglVersion === 2) {\n        gl = canvas.getContext('webgl2', attributes);\n    }\n    else if (webglVersion === 1) {\n        gl = (canvas.getContext('webgl', attributes) ||\n            canvas.getContext('experimental-webgl', attributes));\n    }\n    if (webglVersion === 0 || gl == null) {\n        throw new Error('This browser does not support WebGL.');\n    }\n    return gl;\n}\nexports.createWebGLRenderingContextFromCanvas = createWebGLRenderingContextFromCanvas;\nfunction callAndCheck(gl, func) {\n    var returnValue = func();\n    checkWebGLError(gl);\n    return returnValue;\n}\nexports.callAndCheck = callAndCheck;\nvar webGLDebugErrorCheckingEnabled = false;\nfunction enableDebugWebGLErrorChecking(enabled) {\n    webGLDebugErrorCheckingEnabled = enabled;\n}\nexports.enableDebugWebGLErrorChecking = enableDebugWebGLErrorChecking;\nfunction checkWebGLError(gl) {\n    if (webGLDebugErrorCheckingEnabled) {\n        var error = gl.getError();\n        if (error !== gl.NO_ERROR) {\n            throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n        }\n    }\n}\nexports.checkWebGLError = checkWebGLError;\nfunction getWebGLErrorMessage(gl, status) {\n    switch (status) {\n        case gl.NO_ERROR:\n            return 'NO_ERROR';\n        case gl.INVALID_ENUM:\n            return 'INVALID_ENUM';\n        case gl.INVALID_VALUE:\n            return 'INVALID_VALUE';\n        case gl.INVALID_OPERATION:\n            return 'INVALID_OPERATION';\n        case gl.INVALID_FRAMEBUFFER_OPERATION:\n            return 'INVALID_FRAMEBUFFER_OPERATION';\n        case gl.OUT_OF_MEMORY:\n            return 'OUT_OF_MEMORY';\n        case gl.CONTEXT_LOST_WEBGL:\n            return 'CONTEXT_LOST_WEBGL';\n        default:\n            return \"Unknown error code \" + status;\n    }\n}\nexports.getWebGLErrorMessage = getWebGLErrorMessage;\nfunction getExtensionOrThrow(gl, extensionName) {\n    return throwIfNull(gl, function () { return gl.getExtension(extensionName); }, 'Extension \"' + extensionName + '\" not supported on this browser.');\n}\nexports.getExtensionOrThrow = getExtensionOrThrow;\nfunction createVertexShader(gl, vertexShaderSource) {\n    var vertexShader = throwIfNull(gl, function () { return gl.createShader(gl.VERTEX_SHADER); }, 'Unable to create vertex WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(vertexShader, vertexShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(vertexShader); });\n    if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n        console.log(gl.getShaderInfoLog(vertexShader));\n        throw new Error('Failed to compile vertex shader.');\n    }\n    return vertexShader;\n}\nexports.createVertexShader = createVertexShader;\nfunction createFragmentShader(gl, fragmentShaderSource) {\n    var fragmentShader = throwIfNull(gl, function () { return gl.createShader(gl.FRAGMENT_SHADER); }, 'Unable to create fragment WebGLShader.');\n    callAndCheck(gl, function () { return gl.shaderSource(fragmentShader, fragmentShaderSource); });\n    callAndCheck(gl, function () { return gl.compileShader(fragmentShader); });\n    if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n        logShaderSourceAndInfoLog(fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n        throw new Error('Failed to compile fragment shader.');\n    }\n    return fragmentShader;\n}\nexports.createFragmentShader = createFragmentShader;\nvar lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(shaderSource, shaderInfoLog) {\n    var lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n    if (lineNumberRegexResult == null) {\n        console.log(\"Couldn't parse line number in error: \" + shaderInfoLog);\n        console.log(shaderSource);\n        return;\n    }\n    var lineNumber = +lineNumberRegexResult[1];\n    var shaderLines = shaderSource.split('\\n');\n    var pad = shaderLines.length.toString().length + 2;\n    var linesWithLineNumbers = shaderLines.map(function (line, lineNumber) {\n        return util.rightPad((lineNumber + 1).toString(), pad) + line;\n    });\n    var maxLineLength = 0;\n    for (var i = 0; i < linesWithLineNumbers.length; i++) {\n        maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n    }\n    var beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n    var errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n    var afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n    console.log(beforeErrorLines.join('\\n'));\n    console.log(shaderInfoLog.split('\\n')[0]);\n    console.log(\"%c \" + util.rightPad(errorLine[0], maxLineLength), 'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n    console.log(afterErrorLines.join('\\n'));\n}\nfunction createProgram(gl) {\n    return throwIfNull(gl, function () { return gl.createProgram(); }, 'Unable to create WebGLProgram.');\n}\nexports.createProgram = createProgram;\nfunction linkProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.linkProgram(program); });\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Failed to link vertex and fragment shaders.');\n    }\n}\nexports.linkProgram = linkProgram;\nfunction validateProgram(gl, program) {\n    callAndCheck(gl, function () { return gl.validateProgram(program); });\n    if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n        console.log(gl.getProgramInfoLog(program));\n        throw new Error('Shader program validation failed.');\n    }\n}\nexports.validateProgram = validateProgram;\nfunction createStaticVertexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticVertexBuffer = createStaticVertexBuffer;\nfunction createStaticIndexBuffer(gl, data) {\n    var buffer = throwIfNull(gl, function () { return gl.createBuffer(); }, 'Unable to create WebGLBuffer');\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); });\n    return buffer;\n}\nexports.createStaticIndexBuffer = createStaticIndexBuffer;\nfunction queryMaxTextureSize(gl) {\n    if (MAX_TEXTURE_SIZE != null) {\n        return MAX_TEXTURE_SIZE;\n    }\n    MAX_TEXTURE_SIZE =\n        callAndCheck(gl, function () { return gl.getParameter(gl.MAX_TEXTURE_SIZE); });\n    return MAX_TEXTURE_SIZE;\n}\nexports.queryMaxTextureSize = queryMaxTextureSize;\nfunction getChannelsPerTexture() {\n    if (!environment_1.ENV.get('WEBGL_FLOAT_TEXTURE_ENABLED')) {\n        return 4;\n    }\n    if (environment_1.ENV.get('WEBGL_VERSION') === 2) {\n        return 1;\n    }\n    return 4;\n}\nexports.getChannelsPerTexture = getChannelsPerTexture;\nfunction createTexture(gl) {\n    return throwIfNull(gl, function () { return gl.createTexture(); }, 'Unable to create WebGLTexture.');\n}\nexports.createTexture = createTexture;\nfunction validateTextureSize(gl, width, height) {\n    var maxTextureSize = queryMaxTextureSize(gl);\n    if ((width <= 0) || (height <= 0)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        throw new Error('Requested texture size ' + requested + ' is invalid.');\n    }\n    if ((width > maxTextureSize) || (height > maxTextureSize)) {\n        var requested = \"[\" + width + \"x\" + height + \"]\";\n        var max = \"[\" + maxTextureSize + \"x\" + maxTextureSize + \"]\";\n        throw new Error('Requested texture size ' + requested +\n            ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n    }\n}\nexports.validateTextureSize = validateTextureSize;\nfunction createFramebuffer(gl) {\n    return throwIfNull(gl, function () { return gl.createFramebuffer(); }, 'Unable to create WebGLFramebuffer.');\n}\nexports.createFramebuffer = createFramebuffer;\nfunction bindVertexBufferToProgramAttribute(gl, program, attribute, buffer, arrayEntriesPerItem, itemStrideInBytes, itemOffsetInBytes) {\n    var loc = gl.getAttribLocation(program, attribute);\n    if (loc === -1) {\n        return;\n    }\n    callAndCheck(gl, function () { return gl.bindBuffer(gl.ARRAY_BUFFER, buffer); });\n    callAndCheck(gl, function () { return gl.vertexAttribPointer(loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes, itemOffsetInBytes); });\n    callAndCheck(gl, function () { return gl.enableVertexAttribArray(loc); });\n}\nexports.bindVertexBufferToProgramAttribute = bindVertexBufferToProgramAttribute;\nfunction bindTextureUnit(gl, texture, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, texture); });\n}\nexports.bindTextureUnit = bindTextureUnit;\nfunction unbindTextureUnit(gl, textureUnit) {\n    validateTextureUnit(gl, textureUnit);\n    callAndCheck(gl, function () { return gl.activeTexture(gl.TEXTURE0 + textureUnit); });\n    callAndCheck(gl, function () { return gl.bindTexture(gl.TEXTURE_2D, null); });\n}\nexports.unbindTextureUnit = unbindTextureUnit;\nfunction getProgramUniformLocationOrThrow(gl, program, uniformName) {\n    return throwIfNull(gl, function () { return gl.getUniformLocation(program, uniformName); }, 'uniform \"' + uniformName + '\" not present in program.');\n}\nexports.getProgramUniformLocationOrThrow = getProgramUniformLocationOrThrow;\nfunction getProgramUniformLocation(gl, program, uniformName) {\n    return gl.getUniformLocation(program, uniformName);\n}\nexports.getProgramUniformLocation = getProgramUniformLocation;\nfunction bindTextureToProgramUniformSampler(gl, program, texture, uniformSamplerLocation, textureUnit) {\n    callAndCheck(gl, function () { return bindTextureUnit(gl, texture, textureUnit); });\n    callAndCheck(gl, function () { return gl.uniform1i(uniformSamplerLocation, textureUnit); });\n}\nexports.bindTextureToProgramUniformSampler = bindTextureToProgramUniformSampler;\nfunction bindCanvasToFramebuffer(gl) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, null); });\n    callAndCheck(gl, function () { return gl.viewport(0, 0, gl.canvas.width, gl.canvas.height); });\n    callAndCheck(gl, function () { return gl.scissor(0, 0, gl.canvas.width, gl.canvas.height); });\n}\nexports.bindCanvasToFramebuffer = bindCanvasToFramebuffer;\nfunction bindColorTextureToFramebuffer(gl, texture, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0); });\n}\nexports.bindColorTextureToFramebuffer = bindColorTextureToFramebuffer;\nfunction unbindColorTextureFromFramebuffer(gl, framebuffer) {\n    callAndCheck(gl, function () { return gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer); });\n    callAndCheck(gl, function () { return gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0); });\n}\nexports.unbindColorTextureFromFramebuffer = unbindColorTextureFromFramebuffer;\nfunction validateFramebuffer(gl) {\n    var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n        throw new Error('Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n    }\n}\nexports.validateFramebuffer = validateFramebuffer;\nfunction getFramebufferErrorMessage(gl, status) {\n    switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n            return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n            return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n            return 'FRAMEBUFFER_UNSUPPORTED';\n        default:\n            return \"unknown error \" + status;\n    }\n}\nexports.getFramebufferErrorMessage = getFramebufferErrorMessage;\nfunction throwIfNull(gl, returnTOrNull, failureMessage) {\n    var tOrNull = callAndCheck(gl, function () { return returnTOrNull(); });\n    if (tOrNull == null) {\n        throw new Error(failureMessage);\n    }\n    return tOrNull;\n}\nfunction validateTextureUnit(gl, textureUnit) {\n    var maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n    var glTextureUnit = textureUnit + gl.TEXTURE0;\n    if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n        var textureUnitRange = \"[gl.TEXTURE0, gl.TEXTURE\" + maxTextureUnit + \"]\";\n        throw new Error(\"textureUnit must be in \" + textureUnitRange + \".\");\n    }\n}\nfunction getTextureShapeFromLogicalShape(gl, logShape) {\n    if (logShape.length !== 2) {\n        var squeezeResult = util.squeezeShape(logShape);\n        logShape = squeezeResult.newShape;\n    }\n    var maxTexSize = queryMaxTextureSize(gl);\n    var size = util.sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTexSize) {\n        return [size, 1];\n    }\n    else if (logShape.length === 2 && logShape[0] <= maxTexSize &&\n        logShape[1] <= maxTexSize) {\n        return logShape;\n    }\n    else if (logShape.length === 3 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2]];\n    }\n    else if (logShape.length === 4 && logShape[0] <= maxTexSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n        return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    }\n    else {\n        return util.sizeToSquarishShape(size);\n    }\n}\nexports.getTextureShapeFromLogicalShape = getTextureShapeFromLogicalShape;\n"},"lineCount":312}},"hash":"b593ed432efc390da2c20582c341b2cc","cacheData":{"env":{}}}