{"dependencies":[{"name":"/home/mishig/Desktop/viz/final/package.json","includedInParent":true,"mtime":1522648746056},{"name":"/home/mishig/Desktop/viz/final/node_modules/phaser/package.json","includedInParent":true,"mtime":1521632677000},{"name":"./Pair","loc":{"line":11,"column":19}},{"name":"./Detector","loc":{"line":12,"column":23}},{"name":"../core/Common","loc":{"line":13,"column":21}}],"generated":{"js":"/**\r\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\r\n*\r\n* @class Grid\r\n*/\r\n\r\nvar Grid = {};\r\n\r\nmodule.exports = Grid;\r\n\r\nvar Pair = require('./Pair');\r\nvar Detector = require('./Detector');\r\nvar Common = require('../core/Common');\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new grid.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {grid} A new grid\r\n     */\r\n    Grid.create = function(options) {\r\n        var defaults = {\r\n            controller: Grid,\r\n            detector: Detector.collisions,\r\n            buckets: {},\r\n            pairs: {},\r\n            pairsList: [],\r\n            bucketWidth: 48,\r\n            bucketHeight: 48\r\n        };\r\n\r\n        return Common.extend(defaults, options);\r\n    };\r\n\r\n    /**\r\n     * The width of a single grid bucket.\r\n     *\r\n     * @property bucketWidth\r\n     * @type number\r\n     * @default 48\r\n     */\r\n\r\n    /**\r\n     * The height of a single grid bucket.\r\n     *\r\n     * @property bucketHeight\r\n     * @type number\r\n     * @default 48\r\n     */\r\n\r\n    /**\r\n     * Updates the grid.\r\n     * @method update\r\n     * @param {grid} grid\r\n     * @param {body[]} bodies\r\n     * @param {engine} engine\r\n     * @param {boolean} forceUpdate\r\n     */\r\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\r\n        var i, col, row,\r\n            world = engine.world,\r\n            buckets = grid.buckets,\r\n            bucket,\r\n            bucketId,\r\n            gridChanged = false;\r\n\r\n        // @if DEBUG\r\n        var metrics = engine.metrics;\r\n        metrics.broadphaseTests = 0;\r\n        // @endif\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isSleeping && !forceUpdate)\r\n                continue;\r\n\r\n            // don't update out of world bodies\r\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\r\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\r\n                continue;\r\n\r\n            var newRegion = _getRegion(grid, body);\r\n\r\n            // if the body has changed grid region\r\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\r\n\r\n                // @if DEBUG\r\n                metrics.broadphaseTests += 1;\r\n                // @endif\r\n\r\n                if (!body.region || forceUpdate)\r\n                    body.region = newRegion;\r\n\r\n                var union = _regionUnion(newRegion, body.region);\r\n\r\n                // update grid buckets affected by region change\r\n                // iterate over the union of both regions\r\n                for (col = union.startCol; col <= union.endCol; col++) {\r\n                    for (row = union.startRow; row <= union.endRow; row++) {\r\n                        bucketId = _getBucketId(col, row);\r\n                        bucket = buckets[bucketId];\r\n\r\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\r\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\r\n\r\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\r\n                                                && row >= body.region.startRow && row <= body.region.endRow);\r\n\r\n                        // remove from old region buckets\r\n                        if (!isInsideNewRegion && isInsideOldRegion) {\r\n                            if (isInsideOldRegion) {\r\n                                if (bucket)\r\n                                    _bucketRemoveBody(grid, bucket, body);\r\n                            }\r\n                        }\r\n\r\n                        // add to new region buckets\r\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\r\n                            if (!bucket)\r\n                                bucket = _createBucket(buckets, bucketId);\r\n                            _bucketAddBody(grid, bucket, body);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // set the new region\r\n                body.region = newRegion;\r\n\r\n                // flag changes so we can update pairs\r\n                gridChanged = true;\r\n            }\r\n        }\r\n\r\n        // update pairs list only if pairs changed (i.e. a body changed region)\r\n        if (gridChanged)\r\n            grid.pairsList = _createActivePairsList(grid);\r\n    };\r\n\r\n    /**\r\n     * Clears the grid.\r\n     * @method clear\r\n     * @param {grid} grid\r\n     */\r\n    Grid.clear = function(grid) {\r\n        grid.buckets = {};\r\n        grid.pairs = {};\r\n        grid.pairsList = [];\r\n    };\r\n\r\n    /**\r\n     * Finds the union of two regions.\r\n     * @method _regionUnion\r\n     * @private\r\n     * @param {} regionA\r\n     * @param {} regionB\r\n     * @return {} region\r\n     */\r\n    var _regionUnion = function(regionA, regionB) {\r\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\r\n            endCol = Math.max(regionA.endCol, regionB.endCol),\r\n            startRow = Math.min(regionA.startRow, regionB.startRow),\r\n            endRow = Math.max(regionA.endRow, regionB.endRow);\r\n\r\n        return _createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Gets the region a given body falls in for a given grid.\r\n     * @method _getRegion\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} body\r\n     * @return {} region\r\n     */\r\n    var _getRegion = function(grid, body) {\r\n        var bounds = body.bounds,\r\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\r\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\r\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\r\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\r\n\r\n        return _createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Creates a region.\r\n     * @method _createRegion\r\n     * @private\r\n     * @param {} startCol\r\n     * @param {} endCol\r\n     * @param {} startRow\r\n     * @param {} endRow\r\n     * @return {} region\r\n     */\r\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\r\n        return { \r\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\r\n            startCol: startCol, \r\n            endCol: endCol, \r\n            startRow: startRow, \r\n            endRow: endRow \r\n        };\r\n    };\r\n\r\n    /**\r\n     * Gets the bucket id at the given position.\r\n     * @method _getBucketId\r\n     * @private\r\n     * @param {} column\r\n     * @param {} row\r\n     * @return {string} bucket id\r\n     */\r\n    var _getBucketId = function(column, row) {\r\n        return 'C' + column + 'R' + row;\r\n    };\r\n\r\n    /**\r\n     * Creates a bucket.\r\n     * @method _createBucket\r\n     * @private\r\n     * @param {} buckets\r\n     * @param {} bucketId\r\n     * @return {} bucket\r\n     */\r\n    var _createBucket = function(buckets, bucketId) {\r\n        var bucket = buckets[bucketId] = [];\r\n        return bucket;\r\n    };\r\n\r\n    /**\r\n     * Adds a body to a bucket.\r\n     * @method _bucketAddBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    var _bucketAddBody = function(grid, bucket, body) {\r\n        // add new pairs\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            var bodyB = bucket[i];\r\n\r\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\r\n                continue;\r\n\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for Grid.update to work\r\n            var pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair) {\r\n                pair[2] += 1;\r\n            } else {\r\n                grid.pairs[pairId] = [body, bodyB, 1];\r\n            }\r\n        }\r\n\r\n        // add to bodies (after pairs, otherwise pairs with self)\r\n        bucket.push(body);\r\n    };\r\n\r\n    /**\r\n     * Removes a body from a bucket.\r\n     * @method _bucketRemoveBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    var _bucketRemoveBody = function(grid, bucket, body) {\r\n        // remove from bucket\r\n        bucket.splice(bucket.indexOf(body), 1);\r\n\r\n        // update pair counts\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for _createActivePairsList to work\r\n            var bodyB = bucket[i],\r\n                pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair)\r\n                pair[2] -= 1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generates a list of the active pairs in the grid.\r\n     * @method _createActivePairsList\r\n     * @private\r\n     * @param {} grid\r\n     * @return [] pairs\r\n     */\r\n    var _createActivePairsList = function(grid) {\r\n        var pairKeys,\r\n            pair,\r\n            pairs = [];\r\n\r\n        // grid.pairs is used as a hashmap\r\n        pairKeys = Common.keys(grid.pairs);\r\n\r\n        // iterate over grid.pairs\r\n        for (var k = 0; k < pairKeys.length; k++) {\r\n            pair = grid.pairs[pairKeys[k]];\r\n\r\n            // if pair exists in at least one bucket\r\n            // it is a pair that needs further collision testing so push it\r\n            if (pair[2] > 0) {\r\n                pairs.push(pair);\r\n            } else {\r\n                delete grid.pairs[pairKeys[k]];\r\n            }\r\n        }\r\n\r\n        return pairs;\r\n    };\r\n    \r\n})();\r\n","map":{"mappings":[{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}}],"sources":{"node_modules/phaser/src/physics/matter-js/lib/collision/Grid.js":"/**\r\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\r\n*\r\n* @class Grid\r\n*/\r\n\r\nvar Grid = {};\r\n\r\nmodule.exports = Grid;\r\n\r\nvar Pair = require('./Pair');\r\nvar Detector = require('./Detector');\r\nvar Common = require('../core/Common');\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new grid.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {grid} A new grid\r\n     */\r\n    Grid.create = function(options) {\r\n        var defaults = {\r\n            controller: Grid,\r\n            detector: Detector.collisions,\r\n            buckets: {},\r\n            pairs: {},\r\n            pairsList: [],\r\n            bucketWidth: 48,\r\n            bucketHeight: 48\r\n        };\r\n\r\n        return Common.extend(defaults, options);\r\n    };\r\n\r\n    /**\r\n     * The width of a single grid bucket.\r\n     *\r\n     * @property bucketWidth\r\n     * @type number\r\n     * @default 48\r\n     */\r\n\r\n    /**\r\n     * The height of a single grid bucket.\r\n     *\r\n     * @property bucketHeight\r\n     * @type number\r\n     * @default 48\r\n     */\r\n\r\n    /**\r\n     * Updates the grid.\r\n     * @method update\r\n     * @param {grid} grid\r\n     * @param {body[]} bodies\r\n     * @param {engine} engine\r\n     * @param {boolean} forceUpdate\r\n     */\r\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\r\n        var i, col, row,\r\n            world = engine.world,\r\n            buckets = grid.buckets,\r\n            bucket,\r\n            bucketId,\r\n            gridChanged = false;\r\n\r\n        // @if DEBUG\r\n        var metrics = engine.metrics;\r\n        metrics.broadphaseTests = 0;\r\n        // @endif\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isSleeping && !forceUpdate)\r\n                continue;\r\n\r\n            // don't update out of world bodies\r\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\r\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\r\n                continue;\r\n\r\n            var newRegion = _getRegion(grid, body);\r\n\r\n            // if the body has changed grid region\r\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\r\n\r\n                // @if DEBUG\r\n                metrics.broadphaseTests += 1;\r\n                // @endif\r\n\r\n                if (!body.region || forceUpdate)\r\n                    body.region = newRegion;\r\n\r\n                var union = _regionUnion(newRegion, body.region);\r\n\r\n                // update grid buckets affected by region change\r\n                // iterate over the union of both regions\r\n                for (col = union.startCol; col <= union.endCol; col++) {\r\n                    for (row = union.startRow; row <= union.endRow; row++) {\r\n                        bucketId = _getBucketId(col, row);\r\n                        bucket = buckets[bucketId];\r\n\r\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\r\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\r\n\r\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\r\n                                                && row >= body.region.startRow && row <= body.region.endRow);\r\n\r\n                        // remove from old region buckets\r\n                        if (!isInsideNewRegion && isInsideOldRegion) {\r\n                            if (isInsideOldRegion) {\r\n                                if (bucket)\r\n                                    _bucketRemoveBody(grid, bucket, body);\r\n                            }\r\n                        }\r\n\r\n                        // add to new region buckets\r\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\r\n                            if (!bucket)\r\n                                bucket = _createBucket(buckets, bucketId);\r\n                            _bucketAddBody(grid, bucket, body);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // set the new region\r\n                body.region = newRegion;\r\n\r\n                // flag changes so we can update pairs\r\n                gridChanged = true;\r\n            }\r\n        }\r\n\r\n        // update pairs list only if pairs changed (i.e. a body changed region)\r\n        if (gridChanged)\r\n            grid.pairsList = _createActivePairsList(grid);\r\n    };\r\n\r\n    /**\r\n     * Clears the grid.\r\n     * @method clear\r\n     * @param {grid} grid\r\n     */\r\n    Grid.clear = function(grid) {\r\n        grid.buckets = {};\r\n        grid.pairs = {};\r\n        grid.pairsList = [];\r\n    };\r\n\r\n    /**\r\n     * Finds the union of two regions.\r\n     * @method _regionUnion\r\n     * @private\r\n     * @param {} regionA\r\n     * @param {} regionB\r\n     * @return {} region\r\n     */\r\n    var _regionUnion = function(regionA, regionB) {\r\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\r\n            endCol = Math.max(regionA.endCol, regionB.endCol),\r\n            startRow = Math.min(regionA.startRow, regionB.startRow),\r\n            endRow = Math.max(regionA.endRow, regionB.endRow);\r\n\r\n        return _createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Gets the region a given body falls in for a given grid.\r\n     * @method _getRegion\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} body\r\n     * @return {} region\r\n     */\r\n    var _getRegion = function(grid, body) {\r\n        var bounds = body.bounds,\r\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\r\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\r\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\r\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\r\n\r\n        return _createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Creates a region.\r\n     * @method _createRegion\r\n     * @private\r\n     * @param {} startCol\r\n     * @param {} endCol\r\n     * @param {} startRow\r\n     * @param {} endRow\r\n     * @return {} region\r\n     */\r\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\r\n        return { \r\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\r\n            startCol: startCol, \r\n            endCol: endCol, \r\n            startRow: startRow, \r\n            endRow: endRow \r\n        };\r\n    };\r\n\r\n    /**\r\n     * Gets the bucket id at the given position.\r\n     * @method _getBucketId\r\n     * @private\r\n     * @param {} column\r\n     * @param {} row\r\n     * @return {string} bucket id\r\n     */\r\n    var _getBucketId = function(column, row) {\r\n        return 'C' + column + 'R' + row;\r\n    };\r\n\r\n    /**\r\n     * Creates a bucket.\r\n     * @method _createBucket\r\n     * @private\r\n     * @param {} buckets\r\n     * @param {} bucketId\r\n     * @return {} bucket\r\n     */\r\n    var _createBucket = function(buckets, bucketId) {\r\n        var bucket = buckets[bucketId] = [];\r\n        return bucket;\r\n    };\r\n\r\n    /**\r\n     * Adds a body to a bucket.\r\n     * @method _bucketAddBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    var _bucketAddBody = function(grid, bucket, body) {\r\n        // add new pairs\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            var bodyB = bucket[i];\r\n\r\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\r\n                continue;\r\n\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for Grid.update to work\r\n            var pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair) {\r\n                pair[2] += 1;\r\n            } else {\r\n                grid.pairs[pairId] = [body, bodyB, 1];\r\n            }\r\n        }\r\n\r\n        // add to bodies (after pairs, otherwise pairs with self)\r\n        bucket.push(body);\r\n    };\r\n\r\n    /**\r\n     * Removes a body from a bucket.\r\n     * @method _bucketRemoveBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    var _bucketRemoveBody = function(grid, bucket, body) {\r\n        // remove from bucket\r\n        bucket.splice(bucket.indexOf(body), 1);\r\n\r\n        // update pair counts\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for _createActivePairsList to work\r\n            var bodyB = bucket[i],\r\n                pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair)\r\n                pair[2] -= 1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generates a list of the active pairs in the grid.\r\n     * @method _createActivePairsList\r\n     * @private\r\n     * @param {} grid\r\n     * @return [] pairs\r\n     */\r\n    var _createActivePairsList = function(grid) {\r\n        var pairKeys,\r\n            pair,\r\n            pairs = [];\r\n\r\n        // grid.pairs is used as a hashmap\r\n        pairKeys = Common.keys(grid.pairs);\r\n\r\n        // iterate over grid.pairs\r\n        for (var k = 0; k < pairKeys.length; k++) {\r\n            pair = grid.pairs[pairKeys[k]];\r\n\r\n            // if pair exists in at least one bucket\r\n            // it is a pair that needs further collision testing so push it\r\n            if (pair[2] > 0) {\r\n                pairs.push(pair);\r\n            } else {\r\n                delete grid.pairs[pairKeys[k]];\r\n            }\r\n        }\r\n\r\n        return pairs;\r\n    };\r\n    \r\n})();\r\n"},"lineCount":322}},"hash":"f59b2263117efc55fc43015e25ba4c25","cacheData":{"env":{}}}