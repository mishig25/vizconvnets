{"dependencies":[{"name":"/home/mishig/Desktop/vizgithub/frontend/package.json","includedInParent":true,"mtime":1523230167415},{"name":"/home/mishig/Desktop/vizgithub/frontend/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":0},{"name":"../doc","loc":{"line":9,"column":20}},{"name":"./operation","loc":{"line":10,"column":26}}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar operation_1 = require(\"./operation\");\nvar LSTMOps = (function () {\n    function LSTMOps() {\n    }\n    LSTMOps.multiRNNCell = function (lstmCells, data, c, h) {\n        var input = data;\n        var newStates = [];\n        for (var i = 0; i < lstmCells.length; i++) {\n            var output = lstmCells[i](input, c[i], h[i]);\n            newStates.push(output[0]);\n            newStates.push(output[1]);\n            input = output[1];\n        }\n        var newC = [];\n        var newH = [];\n        for (var i = 0; i < newStates.length; i += 2) {\n            newC.push(newStates[i]);\n            newH.push(newStates[i + 1]);\n        }\n        return [newC, newH];\n    };\n    LSTMOps.basicLSTMCell = function (forgetBias, lstmKernel, lstmBias, data, c, h) {\n        var combined = data.concat(h, 1);\n        var weighted = combined.matMul(lstmKernel);\n        var res = weighted.add(lstmBias);\n        var batchSize = res.shape[0];\n        var sliceCols = res.shape[1] / 4;\n        var sliceSize = [batchSize, sliceCols];\n        var i = res.slice([0, 0], sliceSize);\n        var j = res.slice([0, sliceCols], sliceSize);\n        var f = res.slice([0, sliceCols * 2], sliceSize);\n        var o = res.slice([0, sliceCols * 3], sliceSize);\n        var newC = i.sigmoid().mulStrict(j.tanh()).addStrict(c.mulStrict(forgetBias.add(f).sigmoid()));\n        var newH = newC.tanh().mulStrict(o.sigmoid());\n        return [newC, newH];\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"multiRNNCell\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"basicLSTMCell\", null);\n    return LSTMOps;\n}());\nexports.LSTMOps = LSTMOps;\n","map":{"mappings":[{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"node_modules/@tensorflow/tfjs-core/dist/ops/lstm.js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar operation_1 = require(\"./operation\");\nvar LSTMOps = (function () {\n    function LSTMOps() {\n    }\n    LSTMOps.multiRNNCell = function (lstmCells, data, c, h) {\n        var input = data;\n        var newStates = [];\n        for (var i = 0; i < lstmCells.length; i++) {\n            var output = lstmCells[i](input, c[i], h[i]);\n            newStates.push(output[0]);\n            newStates.push(output[1]);\n            input = output[1];\n        }\n        var newC = [];\n        var newH = [];\n        for (var i = 0; i < newStates.length; i += 2) {\n            newC.push(newStates[i]);\n            newH.push(newStates[i + 1]);\n        }\n        return [newC, newH];\n    };\n    LSTMOps.basicLSTMCell = function (forgetBias, lstmKernel, lstmBias, data, c, h) {\n        var combined = data.concat(h, 1);\n        var weighted = combined.matMul(lstmKernel);\n        var res = weighted.add(lstmBias);\n        var batchSize = res.shape[0];\n        var sliceCols = res.shape[1] / 4;\n        var sliceSize = [batchSize, sliceCols];\n        var i = res.slice([0, 0], sliceSize);\n        var j = res.slice([0, sliceCols], sliceSize);\n        var f = res.slice([0, sliceCols * 2], sliceSize);\n        var o = res.slice([0, sliceCols * 3], sliceSize);\n        var newC = i.sigmoid().mulStrict(j.tanh()).addStrict(c.mulStrict(forgetBias.add(f).sigmoid()));\n        var newH = newC.tanh().mulStrict(o.sigmoid());\n        return [newC, newH];\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"multiRNNCell\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'RNN' }),\n        operation_1.operation\n    ], LSTMOps, \"basicLSTMCell\", null);\n    return LSTMOps;\n}());\nexports.LSTMOps = LSTMOps;\n"},"lineCount":57}},"hash":"56b7a24269fc11beb53af25b8084098e","cacheData":{"env":{}}}